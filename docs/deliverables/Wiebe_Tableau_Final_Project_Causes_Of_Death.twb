<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0805.0415                               -->
<workbook original-version='18.1' source-build='2023.2.1 (20232.23.0805.0415)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' inline='true' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='20222703 Causes Of Death Clean Output V2.0' name='excel-direct.1yus4o11axnxqc11mnyp91a11scb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/maddy/lighthouse-labs/LHL_Project/LHL_Tableau_Project/Global Causes of Death 1990-2019.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='annual-number-of-deaths-by-cause_1' name='excel-direct.0oqj7460yawkoa14hsv4m170rxak'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/maddy/lighthouse-labs/LHL_Project/LHL_Tableau_Project/annual-number-of-deaths-by-cause_1.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='2015 Populations' name='excel-direct.10duieo0bx7o5o13ao2xp1iirlvp'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/maddy/lighthouse-labs/LHL_Project/LHL_Tableau_Project/2015 Populations.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1yus4o11axnxqc11mnyp91a11scb' name='Global Causes of Death' table='[&apos;Global Causes of Death$&apos;]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Causes name' ordinal='0' />
            <column datatype='string' name='Causes Full Description' ordinal='1' />
            <column datatype='integer' name='Death Numbers' ordinal='2' />
            <column datatype='string' name='Entity' ordinal='3' />
            <column datatype='string' name='Code' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='integer' name='Population 2015' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1yus4o11axnxqc11mnyp91a11scb' name='Global Causes of Death' table='[&apos;Global Causes of Death$&apos;]' type='table'>
          <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Causes name' ordinal='0' />
            <column datatype='string' name='Causes Full Description' ordinal='1' />
            <column datatype='integer' name='Death Numbers' ordinal='2' />
            <column datatype='string' name='Entity' ordinal='3' />
            <column datatype='string' name='Code' ordinal='4' />
            <column datatype='integer' name='Year' ordinal='5' />
            <column datatype='integer' name='Population 2015' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Causes of Death]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G10001:no:A1:G10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Causes name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Causes name]</local-name>
            <parent-name>[Global Causes of Death]</parent-name>
            <remote-alias>Causes name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Causes Full Description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Causes Full Description]</local-name>
            <parent-name>[Global Causes of Death]</parent-name>
            <remote-alias>Causes Full Description</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Numbers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Death Numbers]</local-name>
            <parent-name>[Global Causes of Death]</parent-name>
            <remote-alias>Death Numbers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[Global Causes of Death]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Global Causes of Death]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Global Causes of Death]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 2015</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population 2015]</local-name>
            <parent-name>[Global Causes of Death]</parent-name>
            <remote-alias>Population 2015</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country total deaths' datatype='integer' name='[Calculation_1570630374834872321]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Entity]: SUM([Death Numbers])}' />
      </column>
      <column caption='Deaths as Percentage of 2015 Population' datatype='real' name='[Calculation_494551538331967488]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{INCLUDE [Entity]:  &#13;&#10;SUM([Death Numbers])/AVG([Population 2015])*100}' />
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_591378931307122697]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
      <column caption='Country clusters (population, number of deaths, percent mortality)' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{a3af9898-6f48-493b-a9bc-1fe386079263}]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Entity]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;Ukraine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;American Samoa&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Bahamas&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Brunei&quot;</value>
            <value>&quot;Cape Verde&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Guam&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Northern Mariana Islands&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Palestine&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Vietnam&quot;</value>
            <value>&quot;Yemen&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 3&quot;'>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Czechia&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Dominica&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Niue&quot;</value>
            <value>&quot;North Korea&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Palau&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Saint Kitts and Nevis&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Tuvalu&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
            <value>&quot;United States Virgin Islands&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 4&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Cook Islands&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Democratic Republic of Congo&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Greenland&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Nauru&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Saint Vincent and the Grenadines&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tokelau&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;United States&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 5&quot;'>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;East Timor&quot;</value>
            <value>&quot;French Guiana&quot;</value>
            <value>&quot;French Polynesia&quot;</value>
            <value>&quot;Guadeloupe&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Macau&quot;</value>
            <value>&quot;Martinique&quot;</value>
            <value>&quot;New Caledonia&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Wallis and Futuna&quot;</value>
            <value>&quot;Western Sahara&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 6&quot;'>
            <value>&quot;China&quot;</value>
            <value>&quot;India&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
          <bin default-name='false' value='&quot;Africa&quot;'>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Cape Verde&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo&quot;</value>
            <value>&quot;Democratic Republic of Congo&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Eswatini&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Western Sahara&quot;</value>
            <value>&quot;Zaire&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Central Asia&quot;'>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East Asia&quot;'>
            <value>&quot;China&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Macau&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;North Korea&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;Taiwan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Europe&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Czechia&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;North Macedonia&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North America&quot;'>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Bahamas&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Dominica&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Greenland&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guadeloupe&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Martinique&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Saint Kitts and Nevis&quot;</value>
            <value>&quot;Saint Lucia&quot;</value>
            <value>&quot;Saint Vincent and the Grenadines&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;United States&quot;</value>
            <value>&quot;United States Virgin Islands&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North Asia&quot;'>
            <value>&quot;Russia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Oceania&quot;'>
            <value>&quot;American Samoa&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Cook Islands&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;French Polynesia&quot;</value>
            <value>&quot;Guam&quot;</value>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Nauru&quot;</value>
            <value>&quot;New Caledonia&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Niue&quot;</value>
            <value>&quot;Northern Mariana Islands&quot;</value>
            <value>&quot;Palau&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;Tokelau&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Tuvalu&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
            <value>&quot;Wallis and Futuna&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South America&quot;'>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;French Guiana&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Venezuela&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South Asia&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Southeast Asia&quot;'>
            <value>&quot;Brunei&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;East Timor&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West Asia&quot;'>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Palestine&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Yemen&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Population 2015]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Global Causes of Death' datatype='table' name='[__tableau_internal_object_id__].[Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1570630374834872321]' derivation='Avg' name='[avg:Calculation_1570630374834872321:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population 2015]' derivation='Avg' name='[avg:Population 2015:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1570630374834872321]' derivation='Median' name='[med:Calculation_1570630374834872321:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1570630374834872321]' derivation='Sum' name='[sum:Calculation_1570630374834872321:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_494551538331967488]' derivation='Sum' name='[sum:Calculation_494551538331967488:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population 2015]' derivation='Sum' name='[sum:Population 2015:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Causes name)' hidden='true' name='[Action (Causes name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Causes name]' />
        </groupfilter>
      </group>
      <group caption='Action (Causes name,Country)' hidden='true' name='[Action (Causes name,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Causes name]' />
          <groupfilter function='level-members' level='[Entity]' />
        </groupfilter>
      </group>
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Entity]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (group)]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;West Asia&quot;</bucket>
            </map>
            <map to='#2f6690'>
              <bucket>&quot;Southeast Asia&quot;</bucket>
            </map>
            <map to='#32759a'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#3484a5'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#3992b0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;North Asia&quot;</bucket>
            </map>
            <map to='#5eafc0'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#75bcc7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cc9cd'>
              <bucket>&quot;East Asia&quot;</bucket>
            </map>
            <map to='#a3d6d2'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[avg:Population 2015:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Population 2015:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[avg:Calculation_1570630374834872321:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[med:Calculation_1570630374834872321:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_1570630374834872321:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Causes name:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Neoplasms&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Alzheimer&apos;s disease and other dementias&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Lower respiratory infections&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diabetes mellitus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Protein-energy malnutrition&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acute hepatitis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chronic kidney disease&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meningitis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Drug use disorders&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuberculosis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Diarrheal diseases&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Road injuries&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nutritional deficiencies&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Digestive diseases&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alcohol use disorders&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maternal disorders&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;HIV/AIDS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cirrhosis and other chronic liver diseases&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Parkinson&apos;s disease&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Environmental heat and cold exposure&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Exposure to forces of nature&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Interpersonal violence&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cardiovascular diseases&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Self-harm&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Conflict and terrorism&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poisonings&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fire, heat, and hot substances&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Chronic respiratory diseases&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Drowning&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terrorism (deaths)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Neonatal disorders&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Number of executions (Amnesty International)&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zaire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (clusters)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cluster 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cluster 5&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Cluster 4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Not Clustered&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cluster 3&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Cluster 6&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cluster 2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[Country (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Cluster 3&quot;</bucket>
            <bucket>&quot;Cluster 4&quot;</bucket>
            <bucket>&quot;Cluster 5&quot;</bucket>
            <bucket>&quot;Cluster 6&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{7a097cad-9772-487e-bdd9-85586d7be0b6}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' />
            <field name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
            <field name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Population 2015:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{a3af9898-6f48-493b-a9bc-1fe386079263}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' />
            <field name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
            <field name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Population 2015:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
          </lod-fields>
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Global Causes of Death' id='Global Causes of Death_DD5AAAB28EFE44C1A75CC02F5D7CBB3A'>
            <properties context=''>
              <relation connection='excel-direct.1yus4o11axnxqc11mnyp91a11scb' name='Global Causes of Death' table='[&apos;Global Causes of Death$&apos;]' type='table'>
                <columns gridOrigin='A1:G10001:no:A1:G10001:0' header='yes' outcome='2'>
                  <column datatype='string' name='Causes name' ordinal='0' />
                  <column datatype='string' name='Causes Full Description' ordinal='1' />
                  <column datatype='integer' name='Death Numbers' ordinal='2' />
                  <column datatype='string' name='Entity' ordinal='3' />
                  <column datatype='string' name='Code' ordinal='4' />
                  <column datatype='integer' name='Year' ordinal='5' />
                  <column datatype='integer' name='Population 2015' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_515C90828F374EDC84F42DFFE5965AB5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='2015 mortalities as population percent' type='sheet' worksheet='2015 deaths by percent population' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='2015 mortalities as population percent' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_55D638E2EF974C3E9517ACEBA8E27121]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='2015 mortalities as population percent' type='sheet' worksheet='2015 highlight percents' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='2015 mortalities as population percent' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_7999525704104AAFB87092483EE47EA0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Canada dashboard' type='sheet' worksheet='Canadian mortalities' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Canada dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_7417459B2AF2469CAF3C162FDEC33805]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Top causes of death' type='sheet' worksheet='Global Deaths by Cause' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Top causes of death' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action5_8E8A3565B94E49BD93A8752A5BFDE795]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Population vs deaths 2015' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Population vs deaths 2015' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='2015 deaths by percent population'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths as percent of 2015 population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column caption='Deaths as Percentage of 2015 Population' datatype='real' name='[Calculation_494551538331967488]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Entity]:  &#13;&#10;SUM([Death Numbers])/AVG([Population 2015])*100}' />
            </column>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Population 2015]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Population 2015]' derivation='Avg' name='[avg:Population 2015:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_494551538331967488]' derivation='Sum' name='[sum:Calculation_494551538331967488:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Causes name,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_55D638E2EF974C3E9517ACEBA8E27121]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Causes name]' />
              <groupfilter function='level-members' level='[Entity]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' filter-group='3'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='level-members' level='[none:Entity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Causes name,Country)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Longitude (generated)]' field-type='quantitative' max='21266759.853095271' min='-18808256.832483225' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Latitude (generated)]' field-type='quantitative' max='14257428.006999392' min='-8524539.893083442' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' palette='orange_blue_white_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
              <tooltip column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[avg:Population 2015:qk]' />
              <geometry column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Latitude (generated)]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6A51E386-3621-488F-AABD-502834C593E8}' />
    </worksheet>
    <worksheet name='2015 highlight counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <filter class='quantitative' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</cols>
        <percentages enabled='true' mode='row' />
      </table>
      <simple-id uuid='{A4ED25DC-98B7-458D-AABC-9335BECDC6B6}' />
    </worksheet>
    <worksheet name='2015 highlight percents'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column caption='Deaths as Percentage of 2015 Population' datatype='real' name='[Calculation_494551538331967488]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Entity]:  &#13;&#10;SUM([Death Numbers])/AVG([Population 2015])*100}' />
            </column>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Population 2015]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_494551538331967488]' derivation='Sum' name='[sum:Calculation_494551538331967488:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Country)]'>
            <groupfilter function='level-members' level='[Entity]' user:ui-action-filter='[Action1_515C90828F374EDC84F42DFFE5965AB5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' filter-group='3'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='level-members' level='[none:Entity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]' included-values='in-range'>
            <min>2015</min>
            <max>2015</max>
          </filter>
          <filter class='quantitative' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Country)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]</cols>
      </table>
      <simple-id uuid='{6E787D61-A759-44DB-B730-F27B05935969}' />
    </worksheet>
    <worksheet name='Canadian forecasting'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Death Numbers]' derivation='Sum' forecast-column-base='[sum:Death Numbers:qk]' forecast-column-type='forecast-precision-pct' name='[fPrP:sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' forecast-column-base='[sum:Death Numbers:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Death Numbers])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' direction='DESC' using='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[fPrP:sum:Death Numbers:qk]' />
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[fVal:sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto' range-periods='None' range-size='10' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{864A588C-4D1A-44ED-9251-13F3E73617FB}' />
    </worksheet>
    <worksheet name='Canadian forecasting (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Death Numbers]' derivation='Sum' forecast-column-base='[sum:Death Numbers:qk]' forecast-column-type='forecast-precision-pct' name='[fPrP:sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' forecast-column-base='[sum:Death Numbers:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Death Numbers])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Causes name:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Number of executions (Amnesty International)&quot;' />
                    <groupfilter function='member' level='[none:Causes name:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[fPrP:sum:Death Numbers:qk]' />
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[fVal:sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto' range-periods='None' range-size='10' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{07F931CE-D1FE-41AC-BABD-807BABB1A98A}' />
    </worksheet>
    <worksheet name='Canadian forecasting (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Death Numbers]' derivation='Sum' forecast-column-base='[sum:Death Numbers:qk]' forecast-column-type='forecast-precision-pct' name='[fPrP:sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' forecast-column-base='[sum:Death Numbers:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Causes name)]'>
            <groupfilter function='member' level='[Causes name]' member='&quot;Neonatal disorders&quot;' user:ui-action-filter='[Action3_7999525704104AAFB87092483EE47EA0]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' direction='DESC' using='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Causes name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[fPrP:sum:Death Numbers:qk]' />
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[fVal:sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto' range-periods='None' range-size='10' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{21D9065F-74E3-4201-AC18-A1FBD8129FDD}' />
    </worksheet>
    <worksheet name='Canadian mortalities'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[pcto:sum:Death Numbers:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]' />
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]' />
              <text column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
              <text column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{7D6FF2FE-AE47-4F85-8A81-38CC7ECD5B48}' />
    </worksheet>
    <worksheet name='Canadian mortalities (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Causes name)]'>
            <groupfilter function='level-members' level='[Causes name]' user:ui-action-filter='[Action3_7999525704104AAFB87092483EE47EA0]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' direction='DESC' using='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Canada&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Causes name)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</cols>
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{D4821EE4-46C7-4253-87AC-E9B2E8035024}' />
    </worksheet>
    <worksheet name='Cardiovascular disease'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Cardiovascular diseases&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{C7759DBD-4D21-45E9-AA9D-2345C8D9B1BE}' />
    </worksheet>
    <worksheet name='Cardiovascular disease (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Cardiovascular diseases&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{6093155F-B582-448A-AE61-A838C718B54B}' />
    </worksheet>
    <worksheet name='Clustering'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column auto-hidden='true' caption='Clusters (5)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:6]' parent-model='[AnalyticModel:{7a097cad-9772-487e-bdd9-85586d7be0b6}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Deaths as Percentage of 2015 Population' datatype='real' name='[Calculation_494551538331967488]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Entity]:  &#13;&#10;SUM([Death Numbers])/AVG([Population 2015])*100}' />
            </column>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Population 2015]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:6]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:6:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_494551538331967488]' derivation='Sum' name='[sum:Calculation_494551538331967488:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population 2015]' derivation='Sum' name='[sum:Population 2015:qk]' pivot='key' type='quantitative' />
            <style />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Zaire&quot;' />
                <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Population 2015:qk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' />
              <geometry column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Geometry (generated)]' />
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:AdhocCluster:6:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Latitude (generated)]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2CB2A4D2-C6ED-4837-BE3D-74DF703A8650}' />
    </worksheet>
    <worksheet name='Conflict and Terrorism'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Conflict and terrorism&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='annotation'>
            <format attr='stroke-size' id='annotation_0' value='2' />
            <format attr='stroke-color' id='annotation_0' value='#000000cb' />
            <format attr='stroke-size' id='annotation_2' value='2' />
            <format attr='stroke-color' id='annotation_2' value='#000000cb' />
            <format attr='stroke-size' id='annotation_3' value='2' />
            <format attr='stroke-color' id='annotation_3' value='#000000d6' />
            <format attr='stroke-size' id='annotation_4' value='2' />
            <format attr='stroke-color' id='annotation_4' value='#000000ce' />
            <format attr='stroke-size' id='annotation_5' value='2' />
            <format attr='stroke-color' id='annotation_5' value='#000000ce' />
            <format attr='fill-color' id='annotation_5' value='#00000000' />
            <format attr='body-type' id='annotation_5' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Rwandan Genocide</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1994.155572755418'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='117977.48028169012'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='143' y='-119' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Syrian civil war</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2014.001547987616'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='51039.902816901405'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='99' y='-114' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Iraq War</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2005.90479876161'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='41835.985915492965'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='107' y='-86' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Eritrean-Ethiopian War</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1999.2383900928792'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='72794.615492957717'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='139' y='-113' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text />
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1999.0595975232197'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='91202.449295774655'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='231' y='-87' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9A051FE3-A832-488E-82BA-CD0C255498F0}' />
    </worksheet>
    <worksheet name='Country profiles (bubble chart)'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column caption='Deaths as Percentage of 2015 Population' datatype='real' name='[Calculation_494551538331967488]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Entity]:  &#13;&#10;SUM([Death Numbers])/AVG([Population 2015])*100}' />
            </column>
            <column caption='Country clusters (population, number of deaths, percent mortality)' datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{a3af9898-6f48-493b-a9bc-1fe386079263}]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' default='&quot;Not Clustered&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Cluster 1&quot;'>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 2&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 3&quot;'>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 4&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 5&quot;'>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Cluster 6&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;India&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Population 2015]' role='measure' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_494551538331967488]' derivation='Sum' name='[sum:Calculation_494551538331967488:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population 2015]' derivation='Sum' name='[sum:Population 2015:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (clusters)]'>
            <groupfilter function='level-members' level='[Country (clusters)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (clusters)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='vertical-align' value='auto' />
            <format attr='text-align' value='auto' />
            <format attr='text-align' data-class='subtotal' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (clusters)]' />
              <text column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (clusters)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{85C23F36-0004-4F56-BC93-707EE58F2148}' />
    </worksheet>
    <worksheet name='Deaths over time'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Haiti Earthquake</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2010.0257009345794'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='31572036.856338024'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Rwandan Genocide</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1994.0654205607477'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8734395.9830985926'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Myanmar Cyclone</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2007.9439252336449'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='16747603.307042256'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{AB3717ED-4BD1-4FB1-AC3D-3B2710499D24}' />
    </worksheet>
    <worksheet name='Drug use disorders'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Drug use disorders&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{1C937E11-7967-4EF4-9D03-24EF97B31A01}' />
    </worksheet>
    <worksheet name='Global Deaths by Cause'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</cols>
      </table>
      <simple-id uuid='{31784A2A-F0BD-4FBB-98FC-937715B3A3AE}' />
    </worksheet>
    <worksheet name='Natural Disasters'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Exposure to forces of nature&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='annotation'>
            <format attr='stroke-size' value='2' />
            <format attr='stroke-color' value='#000000d0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='127'>
            <formatted-text>
              <run bold='true'>Cyclone Nargis</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2007.999226006192'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='39078.802816901414'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='239' y='-89' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Sichuan Earthquake</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2008.0758513931889'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='162051.54929577466'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='220' y='-44' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Haiti Earthquake</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2010.0425696594427'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='88196.197183098586'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='168' y='-81' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='0' text-width='160'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000'>Tōhoku Earthquake and Tsunami</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2011.0386996904024'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='16850.492957746486'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='186' y='-63' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Indian Ocean Earthquake and Tsunami</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2003.9891640866872'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='111500.07042253521'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-103' y='-131' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Bangladesh Cyclone</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1990.7840557275542'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='62024.154929577468'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='119' y='-115' />
          </annotation>
          <annotation class='point' id='7' mark-position='1' pullback='0' text-width='145'>
            <formatted-text>
              <run bold='true'>Kashmir Earthquake</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2005.0874613003095'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='32625.422535211281'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-142' y='-100' />
          </annotation>
          <annotation class='point' id='9' mark-position='1' pullback='0' text-width='153'>
            <formatted-text>
              <run bold='true'>Vargas Tragedy</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1999.0340557275542'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='17209.014084507049'>
                  <node-reference>
                    <axis>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-60' y='-82' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0A64C198-CD26-49F9-A9F3-2EFE2F41C336}' />
    </worksheet>
    <worksheet name='Number of Deaths Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='level-members' level='[none:Causes name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' />
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
              <geometry column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Latitude (generated)]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BBFE7256-50D5-437B-876E-36E479B89F02}' />
    </worksheet>
    <worksheet name='Number of deaths by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</cols>
      </table>
      <simple-id uuid='{4582A774-4054-4CE3-A643-04C841B231A7}' />
    </worksheet>
    <worksheet name='Population vs deaths 2015'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column caption='Country total deaths' datatype='integer' name='[Calculation_1570630374834872321]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Entity]: SUM([Death Numbers])}' />
            </column>
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Population 2015]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1570630374834872321]' derivation='Sum' name='[sum:Calculation_1570630374834872321:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population 2015]' derivation='Sum' name='[sum:Population 2015:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter count='30' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1570630374834872321])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Entity:nk]' />
                  <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Population 2015:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_1570630374834872321:qk]' field-type='quantitative' fold='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Population 2015:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_1570630374834872321:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</rows>
        <cols>([federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Population 2015:qk] + [federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_1570630374834872321:qk])</cols>
      </table>
      <simple-id uuid='{C1C93B02-BECA-414D-9F99-97483F447E12}' />
    </worksheet>
    <worksheet name='Population vs deaths 2015 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column caption='Country total deaths' datatype='integer' name='[Calculation_1570630374834872321]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Entity]: SUM([Death Numbers])}' />
            </column>
            <column caption='Deaths as Percentage of 2015 Population' datatype='real' name='[Calculation_494551538331967488]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{INCLUDE [Entity]:  &#13;&#10;SUM([Death Numbers])/AVG([Population 2015])*100}' />
            </column>
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Population 2015]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1570630374834872321]' derivation='Sum' name='[sum:Calculation_1570630374834872321:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_494551538331967488]' derivation='Sum' name='[sum:Calculation_494551538331967488:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Monaco&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Eswatini&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;North Macedonia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Czechia&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Niue&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Congo&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>&quot;North Korea&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Cook Islands&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;San Marino&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Bermuda&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Greenland&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Puerto Rico&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Andorra&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Gambia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Laos&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Saint Lucia&quot;</bucket>
              <bucket>&quot;American Samoa&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Bahamas&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Cape Verde&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Guam&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Tokelau&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Brunei&quot;</bucket>
              <bucket>&quot;Palestine&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Kuwait&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2015' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_1570630374834872321:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_1570630374834872321:qk] + [federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk])</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</cols>
      </table>
      <simple-id uuid='{9632E8EC-4C89-4CEF-9EFA-81B23A1EBA4F}' />
    </worksheet>
    <worksheet name='Top 3 causes of death by region'>
      <table>
        <view>
          <datasources>
            <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
          </datasources>
          <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
            <column caption='Index' datatype='integer' name='[Calculation_591378931307122697]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Causes name]' role='dimension' type='nominal' />
            <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
                <bin default-name='false' value='&quot;Africa&quot;'>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Cape Verde&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo&quot;</value>
                  <value>&quot;Democratic Republic of Congo&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Eswatini&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Western Sahara&quot;</value>
                  <value>&quot;Zaire&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Central Asia&quot;'>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East Asia&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Macau&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;North Korea&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Europe&quot;'>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Czechia&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;North Macedonia&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North America&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Bahamas&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belize&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Costa Rica&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Greenland&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Saint Kitts and Nevis&quot;</value>
                  <value>&quot;Saint Lucia&quot;</value>
                  <value>&quot;Saint Vincent and the Grenadines&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>&quot;United States Virgin Islands&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Asia&quot;'>
                  <value>&quot;Russia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oceania&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Cook Islands&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Nauru&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Niue&quot;</value>
                  <value>&quot;Northern Mariana Islands&quot;</value>
                  <value>&quot;Palau&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Tokelau&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Tuvalu&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                  <value>&quot;Wallis and Futuna&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South America&quot;'>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;French Guiana&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Asia&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Southeast Asia&quot;'>
                  <value>&quot;Brunei&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;East Timor&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West Asia&quot;'>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[Death Numbers]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Causes name]' derivation='None' name='[none:Causes name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Numbers]' derivation='Sum' name='[sum:Death Numbers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_591378931307122697]' derivation='User' name='[usr:Calculation_591378931307122697:ok:8]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Causes name]' ordering-type='Field'>
                <order field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' />
                <order field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Causes name]' />
                <sort direction='DESC' using='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_591378931307122697]' derivation='User' name='[usr:Calculation_591378931307122697:qk:1]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Causes name]' ordering-type='Field'>
                <order field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' />
                <order field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Causes name]' />
                <sort direction='DESC' using='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]'>
            <groupfilter function='level-members' level='[Country (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;East Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;South Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Southeast Asia&quot;</bucket>
              <bucket>&quot;North Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;West Asia&quot;</bucket>
              <bucket>&quot;Central Asia&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Causes name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Environmental heat and cold exposure&quot;' />
                <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Fire, heat, and hot substances&quot;' />
                <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Number of executions (Amnesty International)&quot;' />
                <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Poisonings&quot;' />
                <groupfilter function='member' level='[none:Causes name:nk]' member='&quot;Terrorism (deaths)&quot;' />
                <groupfilter function='member' level='[none:Causes name:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' included-values='in-range'>
            <min>493938</min>
            <max>115249136</max>
          </filter>
          <manual-sort column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[usr:Calculation_591378931307122697:ok:8]' direction='ASC'>
            <dictionary>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[usr:Calculation_591378931307122697:qk:1]' included-values='in-range'>
            <min>1</min>
            <max>3</max>
          </filter>
          <slices>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</column>
            <column>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[usr:Calculation_591378931307122697:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' />
              <lod column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[usr:Calculation_591378931307122697:ok:8]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</rows>
        <cols>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</cols>
      </table>
      <simple-id uuid='{D792B923-2BCC-472E-A26A-580426865DA3}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='2015 mortalities as population percent'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
      </datasources>
      <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
        <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
            <bin default-name='false' value='&quot;Africa&quot;'>
              <value>&quot;Algeria&quot;</value>
              <value>&quot;Angola&quot;</value>
              <value>&quot;Benin&quot;</value>
              <value>&quot;Botswana&quot;</value>
              <value>&quot;Burkina Faso&quot;</value>
              <value>&quot;Burundi&quot;</value>
              <value>&quot;Cameroon&quot;</value>
              <value>&quot;Cape Verde&quot;</value>
              <value>&quot;Central African Republic&quot;</value>
              <value>&quot;Chad&quot;</value>
              <value>&quot;Comoros&quot;</value>
              <value>&quot;Congo&quot;</value>
              <value>&quot;Democratic Republic of Congo&quot;</value>
              <value>&quot;Djibouti&quot;</value>
              <value>&quot;Egypt&quot;</value>
              <value>&quot;Equatorial Guinea&quot;</value>
              <value>&quot;Eritrea&quot;</value>
              <value>&quot;Estonia&quot;</value>
              <value>&quot;Eswatini&quot;</value>
              <value>&quot;Ethiopia&quot;</value>
              <value>&quot;Gabon&quot;</value>
              <value>&quot;Gambia&quot;</value>
              <value>&quot;Ghana&quot;</value>
              <value>&quot;Guinea&quot;</value>
              <value>&quot;Guinea-Bissau&quot;</value>
              <value>&quot;Kenya&quot;</value>
              <value>&quot;Lesotho&quot;</value>
              <value>&quot;Liberia&quot;</value>
              <value>&quot;Libya&quot;</value>
              <value>&quot;Madagascar&quot;</value>
              <value>&quot;Malawi&quot;</value>
              <value>&quot;Mali&quot;</value>
              <value>&quot;Mauritania&quot;</value>
              <value>&quot;Mauritius&quot;</value>
              <value>&quot;Morocco&quot;</value>
              <value>&quot;Mozambique&quot;</value>
              <value>&quot;Namibia&quot;</value>
              <value>&quot;Niger&quot;</value>
              <value>&quot;Nigeria&quot;</value>
              <value>&quot;Rwanda&quot;</value>
              <value>&quot;Sao Tome and Principe&quot;</value>
              <value>&quot;Senegal&quot;</value>
              <value>&quot;Seychelles&quot;</value>
              <value>&quot;Sierra Leone&quot;</value>
              <value>&quot;Somalia&quot;</value>
              <value>&quot;South Africa&quot;</value>
              <value>&quot;South Sudan&quot;</value>
              <value>&quot;Sudan&quot;</value>
              <value>&quot;Tanzania&quot;</value>
              <value>&quot;Togo&quot;</value>
              <value>&quot;Tunisia&quot;</value>
              <value>&quot;Uganda&quot;</value>
              <value>&quot;Western Sahara&quot;</value>
              <value>&quot;Zaire&quot;</value>
              <value>&quot;Zambia&quot;</value>
              <value>&quot;Zimbabwe&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Central Asia&quot;'>
              <value>&quot;Kazakhstan&quot;</value>
              <value>&quot;Kyrgyzstan&quot;</value>
              <value>&quot;Tajikistan&quot;</value>
              <value>&quot;Turkmenistan&quot;</value>
              <value>&quot;Uzbekistan&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East Asia&quot;'>
              <value>&quot;China&quot;</value>
              <value>&quot;Hong Kong&quot;</value>
              <value>&quot;Japan&quot;</value>
              <value>&quot;Macau&quot;</value>
              <value>&quot;Mongolia&quot;</value>
              <value>&quot;North Korea&quot;</value>
              <value>&quot;South Korea&quot;</value>
              <value>&quot;Taiwan&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Europe&quot;'>
              <value>&quot;Albania&quot;</value>
              <value>&quot;Andorra&quot;</value>
              <value>&quot;Austria&quot;</value>
              <value>&quot;Belarus&quot;</value>
              <value>&quot;Belgium&quot;</value>
              <value>&quot;Bosnia and Herzegovina&quot;</value>
              <value>&quot;Bulgaria&quot;</value>
              <value>&quot;Croatia&quot;</value>
              <value>&quot;Czechia&quot;</value>
              <value>&quot;Denmark&quot;</value>
              <value>&quot;Finland&quot;</value>
              <value>&quot;France&quot;</value>
              <value>&quot;Germany&quot;</value>
              <value>&quot;Greece&quot;</value>
              <value>&quot;Hungary&quot;</value>
              <value>&quot;Iceland&quot;</value>
              <value>&quot;Ireland&quot;</value>
              <value>&quot;Italy&quot;</value>
              <value>&quot;Kosovo&quot;</value>
              <value>&quot;Latvia&quot;</value>
              <value>&quot;Lithuania&quot;</value>
              <value>&quot;Luxembourg&quot;</value>
              <value>&quot;Malta&quot;</value>
              <value>&quot;Moldova&quot;</value>
              <value>&quot;Monaco&quot;</value>
              <value>&quot;Montenegro&quot;</value>
              <value>&quot;Netherlands&quot;</value>
              <value>&quot;North Macedonia&quot;</value>
              <value>&quot;Norway&quot;</value>
              <value>&quot;Poland&quot;</value>
              <value>&quot;Portugal&quot;</value>
              <value>&quot;Romania&quot;</value>
              <value>&quot;San Marino&quot;</value>
              <value>&quot;Serbia&quot;</value>
              <value>&quot;Slovakia&quot;</value>
              <value>&quot;Slovenia&quot;</value>
              <value>&quot;Spain&quot;</value>
              <value>&quot;Sweden&quot;</value>
              <value>&quot;Switzerland&quot;</value>
              <value>&quot;Ukraine&quot;</value>
              <value>&quot;United Kingdom&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North America&quot;'>
              <value>&quot;Antigua and Barbuda&quot;</value>
              <value>&quot;Bahamas&quot;</value>
              <value>&quot;Barbados&quot;</value>
              <value>&quot;Belize&quot;</value>
              <value>&quot;Bermuda&quot;</value>
              <value>&quot;Canada&quot;</value>
              <value>&quot;Costa Rica&quot;</value>
              <value>&quot;Cuba&quot;</value>
              <value>&quot;Dominica&quot;</value>
              <value>&quot;Dominican Republic&quot;</value>
              <value>&quot;El Salvador&quot;</value>
              <value>&quot;Greenland&quot;</value>
              <value>&quot;Grenada&quot;</value>
              <value>&quot;Guadeloupe&quot;</value>
              <value>&quot;Guatemala&quot;</value>
              <value>&quot;Haiti&quot;</value>
              <value>&quot;Honduras&quot;</value>
              <value>&quot;Jamaica&quot;</value>
              <value>&quot;Martinique&quot;</value>
              <value>&quot;Mexico&quot;</value>
              <value>&quot;Nicaragua&quot;</value>
              <value>&quot;Panama&quot;</value>
              <value>&quot;Puerto Rico&quot;</value>
              <value>&quot;Saint Kitts and Nevis&quot;</value>
              <value>&quot;Saint Lucia&quot;</value>
              <value>&quot;Saint Vincent and the Grenadines&quot;</value>
              <value>&quot;Trinidad and Tobago&quot;</value>
              <value>&quot;United States&quot;</value>
              <value>&quot;United States Virgin Islands&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North Asia&quot;'>
              <value>&quot;Russia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Oceania&quot;'>
              <value>&quot;American Samoa&quot;</value>
              <value>&quot;Australia&quot;</value>
              <value>&quot;Cook Islands&quot;</value>
              <value>&quot;Fiji&quot;</value>
              <value>&quot;French Polynesia&quot;</value>
              <value>&quot;Guam&quot;</value>
              <value>&quot;Kiribati&quot;</value>
              <value>&quot;Marshall Islands&quot;</value>
              <value>&quot;Nauru&quot;</value>
              <value>&quot;New Caledonia&quot;</value>
              <value>&quot;New Zealand&quot;</value>
              <value>&quot;Niue&quot;</value>
              <value>&quot;Northern Mariana Islands&quot;</value>
              <value>&quot;Palau&quot;</value>
              <value>&quot;Papua New Guinea&quot;</value>
              <value>&quot;Samoa&quot;</value>
              <value>&quot;Solomon Islands&quot;</value>
              <value>&quot;Tokelau&quot;</value>
              <value>&quot;Tonga&quot;</value>
              <value>&quot;Tuvalu&quot;</value>
              <value>&quot;Vanuatu&quot;</value>
              <value>&quot;Wallis and Futuna&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South America&quot;'>
              <value>&quot;Argentina&quot;</value>
              <value>&quot;Bolivia&quot;</value>
              <value>&quot;Brazil&quot;</value>
              <value>&quot;Chile&quot;</value>
              <value>&quot;Colombia&quot;</value>
              <value>&quot;Ecuador&quot;</value>
              <value>&quot;French Guiana&quot;</value>
              <value>&quot;Guyana&quot;</value>
              <value>&quot;Paraguay&quot;</value>
              <value>&quot;Peru&quot;</value>
              <value>&quot;Suriname&quot;</value>
              <value>&quot;Uruguay&quot;</value>
              <value>&quot;Venezuela&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South Asia&quot;'>
              <value>&quot;Afghanistan&quot;</value>
              <value>&quot;Bangladesh&quot;</value>
              <value>&quot;Bhutan&quot;</value>
              <value>&quot;India&quot;</value>
              <value>&quot;Maldives&quot;</value>
              <value>&quot;Nepal&quot;</value>
              <value>&quot;Pakistan&quot;</value>
              <value>&quot;Sri Lanka&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Southeast Asia&quot;'>
              <value>&quot;Brunei&quot;</value>
              <value>&quot;Cambodia&quot;</value>
              <value>&quot;East Timor&quot;</value>
              <value>&quot;Indonesia&quot;</value>
              <value>&quot;Laos&quot;</value>
              <value>&quot;Malaysia&quot;</value>
              <value>&quot;Myanmar&quot;</value>
              <value>&quot;Philippines&quot;</value>
              <value>&quot;Singapore&quot;</value>
              <value>&quot;Thailand&quot;</value>
              <value>&quot;Vietnam&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West Asia&quot;'>
              <value>&quot;Armenia&quot;</value>
              <value>&quot;Azerbaijan&quot;</value>
              <value>&quot;Bahrain&quot;</value>
              <value>&quot;Cyprus&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Iran&quot;</value>
              <value>&quot;Iraq&quot;</value>
              <value>&quot;Israel&quot;</value>
              <value>&quot;Jordan&quot;</value>
              <value>&quot;Kuwait&quot;</value>
              <value>&quot;Lebanon&quot;</value>
              <value>&quot;Oman&quot;</value>
              <value>&quot;Palestine&quot;</value>
              <value>&quot;Qatar&quot;</value>
              <value>&quot;Saudi Arabia&quot;</value>
              <value>&quot;Syria&quot;</value>
              <value>&quot;Turkey&quot;</value>
              <value>&quot;United Arab Emirates&quot;</value>
              <value>&quot;Yemen&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='16' param='horz' type-v2='layout-flow' w='99060' x='470' y='893'>
            <zone h='98214' id='5' type-v2='layout-basic' w='99060' x='470' y='893'>
              <zone h='98214' id='8' name='2015 deaths by percent population' show-title='false' w='71726' x='470' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='69308' id='13' name='2015 highlight percents' show-title='false' w='27334' x='72196' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28906' id='24' param='horz' type-v2='layout-flow' w='17631' x='81899' y='70201'>
                <zone h='28906' id='14' mode='radiolist' name='2015 deaths by percent population' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type-v2='filter' values='all' w='17631' x='81899' y='70201'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='28906' id='25' param='vert' type-v2='layout-flow' w='9703' x='72196' y='70201' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='46' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='28906' id='14' mode='dropdown' name='2015 deaths by percent population' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type-v2='filter' values='all' w='17631' x='81899' y='70201'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98214' id='8' is-fixed='true' name='2015 deaths by percent population' show-title='false' w='71726' x='470' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='69308' id='13' is-fixed='true' name='2015 highlight percents' show-title='false' w='27334' x='72196' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CF037E82-477A-4AAB-8DB4-6503919E9A20}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Canada dashboard'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='30' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='28' param='horz' type-v2='layout-flow' w='87115' x='586' y='1042'>
              <zone h='97916' id='24' type-v2='layout-basic' w='87115' x='586' y='1042'>
                <zone h='48958' id='22' param='horz' type-v2='layout-flow' w='87115' x='586' y='1042'>
                  <zone h='48958' id='20' type-v2='layout-basic' w='87115' x='586' y='1042'>
                    <zone h='48958' id='18' param='horz' type-v2='layout-flow' w='87115' x='586' y='1042'>
                      <zone h='48958' id='16' type-v2='layout-basic' w='87115' x='586' y='1042'>
                        <zone h='48958' id='10' param='horz' type-v2='layout-flow' w='87115' x='586' y='1042'>
                          <zone h='48958' id='6' type-v2='layout-basic' w='87115' x='586' y='1042'>
                            <zone h='48958' id='3' name='Canadian mortalities' show-title='false' w='87115' x='586' y='1042'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='48958' id='23' name='Canadian forecasting (3)' show-title='false' w='87115' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97916' id='33' is-fixed='true' type-v2='layout-basic' w='11713' x='87701' y='1042'>
              <zone h='97916' id='36' is-fixed='true' type-v2='layout-basic' w='11713' x='87701' y='1042'>
                <zone h='48958' id='34' param='vert' type-v2='layout-flow' w='11713' x='87701' y='1042'>
                  <zone h='48958' id='35' param='vert' type-v2='layout-flow' w='11713' x='87701' y='1042' />
                </zone>
                <zone h='48958' id='37' param='vert' type-v2='layout-flow' w='11713' x='87701' y='50000'>
                  <zone fixed-size='582' h='48958' id='31' is-fixed='true' name='Canadian forecasting (3)' pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type-v2='color' w='11713' x='87701' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='61' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='60' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='48958' id='3' is-fixed='true' name='Canadian mortalities' show-title='false' w='87115' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='23' is-fixed='true' name='Canadian forecasting (3)' show-title='false' w='87115' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='582' h='48958' id='31' name='Canadian forecasting (3)' pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type-v2='color' w='11713' x='87701' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C5D3F6BA-17FA-40A6-8122-55E4AF880CDB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Conflict/Natural Disasters'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Conflict and Terrorism' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='Natural Disasters' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='14' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Conflict and Terrorism' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Natural Disasters' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1D209648-AB3B-4826-8DC0-7932E2549DBE}' />
    </dashboard>
    <dashboard name='Presentation' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global causes of death</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#a0cbe8' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='1' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone h='3683' id='3' type-v2='title' w='99064' x='468' y='893' />
            <zone h='11272' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99064' x='468' y='4576' />
            <zone h='83259' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99064' x='468' y='15848'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Global deaths from 1990-2019' captured-sheet='Number of Deaths Map' id='1'>
                    <capturedDeltas>
                      <worksheet name='Number of Deaths Map'>
                        <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]'>
                          <groupfilter function='level-members' level='[none:Entity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='How does population affect number of deaths?' captured-sheet='Population vs deaths 2015' id='7' />
                  <story-point caption='Which countries have the highest mortality rates?' captured-sheet='2015 mortalities as population percent' id='3' />
                  <story-point caption='What are the most prevalent causes of death?' captured-sheet='Top causes of death' id='11' />
                  <story-point caption='What are the leading causes of death in Canada?' captured-sheet='Canada dashboard' id='10'>
                    <capturedDeltas>
                      <worksheet name='Canadian forecasting (3)'>
                        <filter class='categorical' column='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Action (Causes name)]'>
                          <groupfilter function='union' user:ui-action-filter='[Action3_7999525704104AAFB87092483EE47EA0]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Causes name]' member='&quot;Alzheimer&apos;s disease and other dementias&quot;' />
                            <groupfilter function='member' level='[Causes name]' member='&quot;Cardiovascular diseases&quot;' />
                            <groupfilter function='member' level='[Causes name]' member='&quot;Chronic respiratory diseases&quot;' />
                            <groupfilter function='member' level='[Causes name]' member='&quot;Digestive diseases&quot;' />
                            <groupfilter function='member' level='[Causes name]' member='&quot;Neoplasms&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Canadian mortalities'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Neoplasms&quot;</value>
                                <value>0.32329220323628854</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Digestive diseases&quot;</value>
                                <value>0.044166792273244423</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Chronic respiratory diseases&quot;</value>
                                <value>0.06152957441941069</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Cardiovascular diseases&quot;</value>
                                <value>0.33869429858354039</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
                                  <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Alzheimer&apos;s disease and other dementias&quot;</value>
                                <value>0.048557335130846348</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='How have global deaths changed over time?' captured-sheet='Deaths over time' id='8' />
                  <story-point caption='Natural disasters' captured-sheet='Natural Disasters' id='12' />
                  <story-point caption='Conflict and terrorism' captured-sheet='Conflict and Terrorism' id='13' />
                  <story-point caption='Country profiling' captured-sheet='Country profiles (bubble chart)' id='14' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{ABF81E7F-B42A-437A-8E9A-8E7AEB039E81}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Top causes of death'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource caption='20222703 Causes Of Death Clean  (20222703 Causes Of Death Clean Output V2.0)' name='federated.0h6jwlv1pmk7ba0zl8n6n16assih' />
      </datasources>
      <datasource-dependencies datasource='federated.0h6jwlv1pmk7ba0zl8n6n16assih'>
        <column caption='Continental regions' datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Entity]' new-bin='true'>
            <bin default-name='false' value='&quot;Africa&quot;'>
              <value>&quot;Algeria&quot;</value>
              <value>&quot;Angola&quot;</value>
              <value>&quot;Benin&quot;</value>
              <value>&quot;Botswana&quot;</value>
              <value>&quot;Burkina Faso&quot;</value>
              <value>&quot;Burundi&quot;</value>
              <value>&quot;Cameroon&quot;</value>
              <value>&quot;Cape Verde&quot;</value>
              <value>&quot;Central African Republic&quot;</value>
              <value>&quot;Chad&quot;</value>
              <value>&quot;Comoros&quot;</value>
              <value>&quot;Congo&quot;</value>
              <value>&quot;Democratic Republic of Congo&quot;</value>
              <value>&quot;Djibouti&quot;</value>
              <value>&quot;Egypt&quot;</value>
              <value>&quot;Equatorial Guinea&quot;</value>
              <value>&quot;Eritrea&quot;</value>
              <value>&quot;Estonia&quot;</value>
              <value>&quot;Eswatini&quot;</value>
              <value>&quot;Ethiopia&quot;</value>
              <value>&quot;Gabon&quot;</value>
              <value>&quot;Gambia&quot;</value>
              <value>&quot;Ghana&quot;</value>
              <value>&quot;Guinea&quot;</value>
              <value>&quot;Guinea-Bissau&quot;</value>
              <value>&quot;Kenya&quot;</value>
              <value>&quot;Lesotho&quot;</value>
              <value>&quot;Liberia&quot;</value>
              <value>&quot;Libya&quot;</value>
              <value>&quot;Madagascar&quot;</value>
              <value>&quot;Malawi&quot;</value>
              <value>&quot;Mali&quot;</value>
              <value>&quot;Mauritania&quot;</value>
              <value>&quot;Mauritius&quot;</value>
              <value>&quot;Morocco&quot;</value>
              <value>&quot;Mozambique&quot;</value>
              <value>&quot;Namibia&quot;</value>
              <value>&quot;Niger&quot;</value>
              <value>&quot;Nigeria&quot;</value>
              <value>&quot;Rwanda&quot;</value>
              <value>&quot;Sao Tome and Principe&quot;</value>
              <value>&quot;Senegal&quot;</value>
              <value>&quot;Seychelles&quot;</value>
              <value>&quot;Sierra Leone&quot;</value>
              <value>&quot;Somalia&quot;</value>
              <value>&quot;South Africa&quot;</value>
              <value>&quot;South Sudan&quot;</value>
              <value>&quot;Sudan&quot;</value>
              <value>&quot;Tanzania&quot;</value>
              <value>&quot;Togo&quot;</value>
              <value>&quot;Tunisia&quot;</value>
              <value>&quot;Uganda&quot;</value>
              <value>&quot;Western Sahara&quot;</value>
              <value>&quot;Zaire&quot;</value>
              <value>&quot;Zambia&quot;</value>
              <value>&quot;Zimbabwe&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Central Asia&quot;'>
              <value>&quot;Kazakhstan&quot;</value>
              <value>&quot;Kyrgyzstan&quot;</value>
              <value>&quot;Tajikistan&quot;</value>
              <value>&quot;Turkmenistan&quot;</value>
              <value>&quot;Uzbekistan&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East Asia&quot;'>
              <value>&quot;China&quot;</value>
              <value>&quot;Hong Kong&quot;</value>
              <value>&quot;Japan&quot;</value>
              <value>&quot;Macau&quot;</value>
              <value>&quot;Mongolia&quot;</value>
              <value>&quot;North Korea&quot;</value>
              <value>&quot;South Korea&quot;</value>
              <value>&quot;Taiwan&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Europe&quot;'>
              <value>&quot;Albania&quot;</value>
              <value>&quot;Andorra&quot;</value>
              <value>&quot;Austria&quot;</value>
              <value>&quot;Belarus&quot;</value>
              <value>&quot;Belgium&quot;</value>
              <value>&quot;Bosnia and Herzegovina&quot;</value>
              <value>&quot;Bulgaria&quot;</value>
              <value>&quot;Croatia&quot;</value>
              <value>&quot;Czechia&quot;</value>
              <value>&quot;Denmark&quot;</value>
              <value>&quot;Finland&quot;</value>
              <value>&quot;France&quot;</value>
              <value>&quot;Germany&quot;</value>
              <value>&quot;Greece&quot;</value>
              <value>&quot;Hungary&quot;</value>
              <value>&quot;Iceland&quot;</value>
              <value>&quot;Ireland&quot;</value>
              <value>&quot;Italy&quot;</value>
              <value>&quot;Kosovo&quot;</value>
              <value>&quot;Latvia&quot;</value>
              <value>&quot;Lithuania&quot;</value>
              <value>&quot;Luxembourg&quot;</value>
              <value>&quot;Malta&quot;</value>
              <value>&quot;Moldova&quot;</value>
              <value>&quot;Monaco&quot;</value>
              <value>&quot;Montenegro&quot;</value>
              <value>&quot;Netherlands&quot;</value>
              <value>&quot;North Macedonia&quot;</value>
              <value>&quot;Norway&quot;</value>
              <value>&quot;Poland&quot;</value>
              <value>&quot;Portugal&quot;</value>
              <value>&quot;Romania&quot;</value>
              <value>&quot;San Marino&quot;</value>
              <value>&quot;Serbia&quot;</value>
              <value>&quot;Slovakia&quot;</value>
              <value>&quot;Slovenia&quot;</value>
              <value>&quot;Spain&quot;</value>
              <value>&quot;Sweden&quot;</value>
              <value>&quot;Switzerland&quot;</value>
              <value>&quot;Ukraine&quot;</value>
              <value>&quot;United Kingdom&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North America&quot;'>
              <value>&quot;Antigua and Barbuda&quot;</value>
              <value>&quot;Bahamas&quot;</value>
              <value>&quot;Barbados&quot;</value>
              <value>&quot;Belize&quot;</value>
              <value>&quot;Bermuda&quot;</value>
              <value>&quot;Canada&quot;</value>
              <value>&quot;Costa Rica&quot;</value>
              <value>&quot;Cuba&quot;</value>
              <value>&quot;Dominica&quot;</value>
              <value>&quot;Dominican Republic&quot;</value>
              <value>&quot;El Salvador&quot;</value>
              <value>&quot;Greenland&quot;</value>
              <value>&quot;Grenada&quot;</value>
              <value>&quot;Guadeloupe&quot;</value>
              <value>&quot;Guatemala&quot;</value>
              <value>&quot;Haiti&quot;</value>
              <value>&quot;Honduras&quot;</value>
              <value>&quot;Jamaica&quot;</value>
              <value>&quot;Martinique&quot;</value>
              <value>&quot;Mexico&quot;</value>
              <value>&quot;Nicaragua&quot;</value>
              <value>&quot;Panama&quot;</value>
              <value>&quot;Puerto Rico&quot;</value>
              <value>&quot;Saint Kitts and Nevis&quot;</value>
              <value>&quot;Saint Lucia&quot;</value>
              <value>&quot;Saint Vincent and the Grenadines&quot;</value>
              <value>&quot;Trinidad and Tobago&quot;</value>
              <value>&quot;United States&quot;</value>
              <value>&quot;United States Virgin Islands&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North Asia&quot;'>
              <value>&quot;Russia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Oceania&quot;'>
              <value>&quot;American Samoa&quot;</value>
              <value>&quot;Australia&quot;</value>
              <value>&quot;Cook Islands&quot;</value>
              <value>&quot;Fiji&quot;</value>
              <value>&quot;French Polynesia&quot;</value>
              <value>&quot;Guam&quot;</value>
              <value>&quot;Kiribati&quot;</value>
              <value>&quot;Marshall Islands&quot;</value>
              <value>&quot;Nauru&quot;</value>
              <value>&quot;New Caledonia&quot;</value>
              <value>&quot;New Zealand&quot;</value>
              <value>&quot;Niue&quot;</value>
              <value>&quot;Northern Mariana Islands&quot;</value>
              <value>&quot;Palau&quot;</value>
              <value>&quot;Papua New Guinea&quot;</value>
              <value>&quot;Samoa&quot;</value>
              <value>&quot;Solomon Islands&quot;</value>
              <value>&quot;Tokelau&quot;</value>
              <value>&quot;Tonga&quot;</value>
              <value>&quot;Tuvalu&quot;</value>
              <value>&quot;Vanuatu&quot;</value>
              <value>&quot;Wallis and Futuna&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South America&quot;'>
              <value>&quot;Argentina&quot;</value>
              <value>&quot;Bolivia&quot;</value>
              <value>&quot;Brazil&quot;</value>
              <value>&quot;Chile&quot;</value>
              <value>&quot;Colombia&quot;</value>
              <value>&quot;Ecuador&quot;</value>
              <value>&quot;French Guiana&quot;</value>
              <value>&quot;Guyana&quot;</value>
              <value>&quot;Paraguay&quot;</value>
              <value>&quot;Peru&quot;</value>
              <value>&quot;Suriname&quot;</value>
              <value>&quot;Uruguay&quot;</value>
              <value>&quot;Venezuela&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South Asia&quot;'>
              <value>&quot;Afghanistan&quot;</value>
              <value>&quot;Bangladesh&quot;</value>
              <value>&quot;Bhutan&quot;</value>
              <value>&quot;India&quot;</value>
              <value>&quot;Maldives&quot;</value>
              <value>&quot;Nepal&quot;</value>
              <value>&quot;Pakistan&quot;</value>
              <value>&quot;Sri Lanka&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Southeast Asia&quot;'>
              <value>&quot;Brunei&quot;</value>
              <value>&quot;Cambodia&quot;</value>
              <value>&quot;East Timor&quot;</value>
              <value>&quot;Indonesia&quot;</value>
              <value>&quot;Laos&quot;</value>
              <value>&quot;Malaysia&quot;</value>
              <value>&quot;Myanmar&quot;</value>
              <value>&quot;Philippines&quot;</value>
              <value>&quot;Singapore&quot;</value>
              <value>&quot;Thailand&quot;</value>
              <value>&quot;Vietnam&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West Asia&quot;'>
              <value>&quot;Armenia&quot;</value>
              <value>&quot;Azerbaijan&quot;</value>
              <value>&quot;Bahrain&quot;</value>
              <value>&quot;Cyprus&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Iran&quot;</value>
              <value>&quot;Iraq&quot;</value>
              <value>&quot;Israel&quot;</value>
              <value>&quot;Jordan&quot;</value>
              <value>&quot;Kuwait&quot;</value>
              <value>&quot;Lebanon&quot;</value>
              <value>&quot;Oman&quot;</value>
              <value>&quot;Palestine&quot;</value>
              <value>&quot;Qatar&quot;</value>
              <value>&quot;Saudi Arabia&quot;</value>
              <value>&quot;Syria&quot;</value>
              <value>&quot;Turkey&quot;</value>
              <value>&quot;United Arab Emirates&quot;</value>
              <value>&quot;Yemen&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='5' type-v2='layout-basic' w='89000' x='500' y='889'>
              <zone h='98222' id='3' name='Global Deaths by Cause' show-title='false' w='89000' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98222' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10000' x='89500' y='889'>
              <zone h='5778' id='8' mode='dropdown' name='Global Deaths by Cause' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type-v2='filter' w='10000' x='89500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='60000' id='10' name='Top 3 causes of death by region' show-title='false' w='52563' x='34688' y='27889' />
        <zone h='18667' id='11' name='Top 3 causes of death by region' pane-specification-id='1' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' show-title='false' type-v2='color' w='11750' x='68813' y='20444' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='34' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='5778' id='8' mode='dropdown' name='Global Deaths by Cause' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type-v2='filter' w='10000' x='89500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98222' id='3' is-fixed='true' name='Global Deaths by Cause' show-title='false' w='89000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60000' id='10' is-fixed='true' name='Top 3 causes of death by region' show-title='false' w='52563' x='34688' y='27889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18667' id='11' name='Top 3 causes of death by region' pane-specification-id='1' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' show-title='false' type-v2='color' w='11750' x='68813' y='20444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5B721B25-B520-46DD-81D0-716C8419BA37}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Presentation' tab-color='#72bcbb'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{CA99ADF0-983E-4953-9E5C-7D3A7587300C}' />
    </window>
    <window class='worksheet' name='Number of Deaths Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Death Numbers:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DA1F915A-F374-4B52-BC70-32405CE795B9}' />
    </window>
    <window class='worksheet' name='Global Deaths by Cause'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type='filter' />
            <card mode='checkdropdown' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88A86CF6-5CFA-4DF3-913B-7088F673BA00}' />
    </window>
    <window class='worksheet' name='Top 3 causes of death by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Calculation_591378931306844167:qk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Calculation_591378931306909704:qk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[usr:Calculation_591378931307122697:ok:8]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[usr:Calculation_591378931307122697:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA1F0EBB-FBC6-46D4-AA50-F272BE6CF2AA}' />
    </window>
    <window class='worksheet' name='Deaths over time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6EA1C72E-09B6-4DC6-95C5-E575F1F812FD}' />
    </window>
    <window class='worksheet' name='Natural Disasters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{31DAF0F2-D577-41B2-9C95-DD7E24BAC257}' />
    </window>
    <window class='worksheet' name='Conflict and Terrorism'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB23E321-10B3-4981-8101-6DE7FD22B416}' />
    </window>
    <window class='worksheet' name='Canadian mortalities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BDDA255-811F-4AFA-A7C3-1025746207FA}' />
    </window>
    <window class='worksheet' name='Canadian forecasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EACA103-6626-4950-9EFD-E23699A2C4A4}' />
    </window>
    <window class='worksheet' name='Population vs deaths 2015'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A0ED6C19-94BD-498D-B2B2-7607B522F0CD}' />
    </window>
    <window class='worksheet' name='2015 highlight counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Country / territory:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77AB0424-7E41-49A8-88D1-DA7C0C629F5D}' />
    </window>
    <window class='worksheet' name='2015 deaths by percent population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[sum:Calculation_494551538331967488:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{969000AD-3D5E-499F-AACF-34752F607D5A}' />
    </window>
    <window class='worksheet' name='2015 highlight percents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Country or territory:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{45DA0B3C-AFA8-4B9C-9B91-E2B1D8F2B48A}' />
    </window>
    <window class='worksheet' name='Country profiles (bubble chart)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='176'>
            <card mode='radiolist' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (clusters)]' show-title='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (clusters)]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (clusters)]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20517CA8-C49C-4011-AD9B-53E620B8C0CC}' />
    </window>
    <window class='dashboard' name='2015 mortalities as population percent'>
      <viewpoints>
        <viewpoint name='2015 deaths by percent population'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='2015 highlight percents' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B982725D-ADA0-49FA-92F8-E35FDF7D47DB}' />
    </window>
    <window class='dashboard' name='Canada dashboard'>
      <viewpoints>
        <viewpoint name='Canadian forecasting (3)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Canadian mortalities'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
                    <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[pcto:sum:Death Numbers:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Neonatal disorders&quot;</value>
                  <value>0.0048006451459879987</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A250BD73-D17B-4F70-A699-9695D2F6E8DF}' />
    </window>
    <window class='dashboard' name='Top causes of death'>
      <viewpoints>
        <viewpoint name='Global Deaths by Cause'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 3 causes of death by region'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5D9E2B2F-6F14-4533-BD4A-5B02E673DF77}' />
    </window>
    <window class='dashboard' name='Conflict/Natural Disasters'>
      <viewpoints>
        <viewpoint name='Conflict and Terrorism'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Natural Disasters'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BF438584-9786-44A2-938A-809075F3E8E7}' />
    </window>
    <window class='worksheet' name='Clustering'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:AdhocCluster:6:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:AdhocCluster:3:ok]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:AdhocCluster:4:ok]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:AdhocCluster:5:ok]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:AdhocCluster:6:ok]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FF1643B-3D12-4389-9ACD-0A8988D38147}' />
    </window>
    <window class='worksheet' name='Cardiovascular disease'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1A51FB9-6EFA-4EDF-A21C-7EC32B7522C7}' />
    </window>
    <window class='worksheet' name='Cardiovascular disease (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[Country (group)]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A5CEEDB-3D33-404C-81FD-8BD437F48F3F}' />
    </window>
    <window class='worksheet' name='Canadian mortalities (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BB70B23-577C-4322-AFCC-18648F8E08DA}' />
    </window>
    <window class='worksheet' name='Drug use disorders'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9813395-6277-4C69-9EE1-F5E05E48F9EF}' />
    </window>
    <window class='worksheet' name='Canadian forecasting (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B86C9CA5-603C-42F2-9669-378ABAC776C5}' />
    </window>
    <window class='worksheet' name='Canadian forecasting (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Causes name:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EA84C10-C442-4AC4-8428-2D5B1F1EAB5F}' />
    </window>
    <window class='worksheet' name='Population vs deaths 2015 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{246C7A32-EF64-4EF6-9F45-7EBC54535B0F}' />
    </window>
    <window class='worksheet' name='Number of deaths by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Entity:nk]</field>
            <field>[federated.0h6jwlv1pmk7ba0zl8n6n16assih].[none:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B22EC4C-A61E-44DD-B9C7-BB631F2D9AB6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2015 deaths by percent population' width='192'>
      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
      +44AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='2015 highlight counts' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='2015 highlight percents' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2015 mortalities as population percent' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Canada dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Canadian forecasting' width='192'>
      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
      UQZQDDX/H6ogov7r4l0hAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Canadian forecasting (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYR0lEQVR4nO2deXMjR5qfn8wq3CQOAuBN9n1IrZZGmlnPaEbHzsxqpdldh8PrDe+O58vM
      R/K/6wiHPfaG7Yi1d3W1uptkn7xvgiDuqkz/USC7pSYpELxA1vtEgAWAeCvfzKxf5VH5Vilr
      rUUQQoo+qR0dpqNuNWatPZbtRbG7SL52a9ervp6YAIwxB/7P9/2u9mmtPXS/h9Ftmmdt123+
      jpPmWdv1cj2emAAE4SLidvrDw5oUpdSJOCMIZ01HArDW53/8z//N9ckRGjaK9irUPIXy68T6
      Brh+Zbz9u5MfBxzH9qLYnUeakseAjgSwsThL0zcYHNbWVhkqDpB0PJSTxVp/r493UILd9v92
      99dNAXSb5nnYdVvBFyWPvVyPqtNp0Hq9jjIt1ssNcqkINd9BtarE+nMkYxF838dxnH1tPc/D
      dTvube2xe3ActN/D6DbNs7bzfR+tdVfdyIuSx16ux473HI/HgTijyX4AEgD0HdkxQeglZBZI
      CDUiACHUiACEUCMCEEKNCEAINSIAIdSIAIRQIwIQQo0IQAg1IgAh1IgAhFAjAhBCjQhACDUi
      ACHUdBgRZvnXL79kYrjI0laVXNKh6jkor0qsP8/k6NBp+ykIp0JHAlhfeMbCygbJvgy5VAKj
      IYEH8Sz4TYwxPxoR5nnekZ07biRRN2meh91xIsIuQh57uR47jggrlUq4+CxvVckmHGrGRTV3
      iKUL5LP9EhEmEWEH0sv12PGeM5kMANczA699WzyyY4LQS8ggWAg1IgAh1IgAhFAjAhBCjQhA
      CDUiACHUiACEUCMCEEKNCEAINSIAIdSIAIRQIwIQQo0IQAg1IgAh1HS0HNpr1ngxt8xwMcvi
      2jbDA33tJ8RUiPXn6U/GTttPQTgVOgqI8VpNZr77hma0j2w6g/UaWOOhnCjWGiYnJvB9/8Cg
      DmMMWh+9sdl1rZtgkW7TvCh255HmZazHjlqAVqNGy1j6Uv0sLy2Tz8Rp+Bq8TeL9ebTWh0b8
      XMZIopOyk4iw00nzRCPCEn0Z7r//MwCuT44e2RlB6FVkECyEGhGAEGpEAEKoEQEIoUYEIIQa
      EYAQakQAQqgRAQihRgQghBoRgBBqRABCqBEBCKFGBCCEGhGAEGo6e0aY8anWGyTiMZotn4ij
      8K0C46HdKK4jOhIuJp0FxDTrzHz3LW66iGk1ScU1TQ+U9YjE+7l2ZRxrLcaYfe0P+99h7EYS
      dWt7Uex2X2eZ5lnbQW/WY2ctABCLRah7PsmIi9IK17EoFUVhO3oIWrcVfBy6tT9Lu24P/uOk
      edZ2vVyPHQnAdVyygxMUB9JsV5sko5qmdVBenUii/0dDIrsNhztOKN1FsQO6Dom8KHns5Xrs
      SABOJMbwUPBAvFwmuANE8Dd+ZMcEoZeQ0asQakQAQqgRAQihRgQghBoRgBBqRABCqBEBCKFG
      BCCEGhGAEGpEAEKoEQEIoUYEIIQaEYAQakQAQqjpaDl0s7bDzMw0OpHFdRyiNKh6DtqrEuvP
      c2V85LT9FIRTYV8BrK+t8fLFS9796Qc4gONo+nLDxCOW+aUNBgbSJJUHiRyYFsaYvaCH/TDG
      4HnekZ3rJNLsILpN8zzsuo14uih57OV63FcAy3PPWV3ZxgMcoFGrU62WSeRyZHI5sskINeNC
      c4d4riAPyTuGnTwk73TSPNZD8lr1KvFMhl13k5kB7mYGACi2v8sAMHBkxwShl9h3EJwrDuAa
      h+OFMgtC77OvAHyvycyTZxy9URaEi8UbArDWUirVKQwk8c/DI0E4Q94YA9TKG8wtLLKwVpcW
      QLj0vCGAZDrPYGGA/lxcBCBcevadBdLawdVHn3oShIvGvoPgyStXcRwtLYBw6TlwLdDGypoM
      goVLzxv9nMrmMv/85TcsLq2fhz+CcKa80QI0axVqTZ87d+/IUlHh0vNGC5Abvc5ff1ZgdaMs
      AhAuPW+2APUKf/rTn1hYWJKlEMKl5w0BKAXJZBpTr9M6D48E4Qx5QwBuNIrXqFJXmuh5eCQI
      Z8gbYwClImSyUf7P/3rALz/9EId2RNj0NE4yS63eIJd0qHka5dWI9ee5OiERYcLFZN/LveMT
      17j3sz4i7c9aa/rzwxivRSKSwCpFQnuoRBZrJSLsuHYSEXbyaR4rImxleZapr+f48JOf4wCt
      RoNKpcxQsUi52iCXcF5FhKWLEhF2DDuJCDudNLuOCKuXVlhcbzFxe2yvBUikc9xN5wDIBRvS
      wacjOyYIvcQbg+C1uQVsNEpjfZPqeXgkCGfIGy3A+L2fMH4engjCOSAXe4VQIwIQQo0IQAg1
      IgAh1IgAhFAjAhBCjQhACDUiACHUiACEUCMCEEKNCEAINSIAIbRsbqx39owwr1FldnmTdEyz
      WW3RF7FUfQfdqhBNFxgdzJ+2r4JwYmxtbvJP//2/dS4AN5YkHinhG59mo0krEieCB8k0fqOK
      MTmJCJOIsAPphXo0vs/TJzN89/XXlLa2+PmvPuLWnb/p/CmRKysrDA4WUVoR1ZaajaLqO8TS
      8oyw49hJRNjppOl5Ho7jsL66yr/+339m9sULRsbG+PCTTxgaHkHroPevbLennx/g+74IQASw
      L2dZj9ZayuVtHn/3HQ++/opkKsX9997nxu3bRKNv3udE7oEuXHiMMayvrfLNl18y++IFWmtu
      3rnD3/797+lPpw89uYgAhAtJs9lk9vlzph49ZGFujmwux9v33+XDjz8mHk/g+373j0kVhF6k
      srPDzNRjHj14QLVSYXxykrfeeYfffvG7fbs3nSACEHoWay2bGxvMPH7E1KNHaK25cfs2v/7L
      zykUi3sD2eMgAhB6ilarxcLcLFMPH/Li2TPSmQy37t7l3//Hv//R/nw3iACEc6dS2eHp9DQz
      jx+zsb7O0MgIb9+/zye/+S2O63Y189QpIgDhXKhWKkw9esjDB9/itVpcuXadX376KYXi4Pem
      S7u5CHYURADCmdGo15l69JAHX39NvV7n7ttv87t/++/IZLMn3rXpFBGAcGpYa6lUKrx89ozH
      D79ja2ODqzdu8JvPvzixQexxEQEIJ0q9VmNhfo4n09PMz86itWJ88go//9VHDI+M9MRB/zoi
      AOFY7E5VPnzwLU+mpjDGZ3RsnBu3b/PRp39OIpncWwrRawc/iACELrDWsrW5ycNvv2Hm8WPi
      iQR3793jb//hH0il+s6tP98NIgChI4wxbG1sMDP1mKlHD4nF4rz1zjv83R/+QDKZOm/3ukYE
      IOxLvV5ndXmZ2ZcvmH3+jGqlSjwR587b9/i73/+BZOriHvSv05EA/FadlY0ymWSE5a0quYRD
      1XdQrQqx/gIDmctRGGGlXq+zub7O0uICi/PzrCwvYa1laHiEiStX+Oyv/oZMJoOFU70odR50
      FA9gjM/i0grG98BajFIo3wM3CsZnfHwc3/cP7PsZY7oaAO261k2fsts0L4pdt7b1Wo35uVlW
      l5dZWV6mtLWJtZZsboCR0TFGxscoDg4Ri8VOzNderscOY4JrLCzMU8zn2a41g2eE+Q7Ut4j3
      S0TYcexOMyDGWku1WmX+5UuezkyzOD+P0oqRsXHGJia4e+8e6Uy245WUl7EeJSLsnO1OUgC+
      71Pa2mJpYZ7nT5+yuDCP67qMT0xy7eZNxsYniMZiHa+V/7H0OqWX6/FydehCxO5U5NrKCnMv
      X7C0uEiz0SCTzTI4PMy9d9/jt1/8bt+ujPAKEcAFoVarsTg/z/zsS+bnZimXSvSl04yNTXD9
      1i0+/PgTEslkT15s6mVEAD3I7tXVl8+f8XRmhu3SFlprioNDXLl+nXff/4BUXx9w+WZlzhop
      vR7AWkt5u8SLZ895Oj3F2uoqqb4+rl6/zocffUy+WCQSibwxTjjtpcJhQARwTlhrWV5c5Kt/
      +X/Mz84Si8e5cu0af/bhLykODRGJRH58J8KxEQGcMWurK3z71Vc8mZ4iXyjw1jv3+fVnf0kk
      Gr1Qa2guCyKAUyaYrdlg6tEjHj94QCQW5d799/jFRx8Tj8ePNQ0qHB8RwAliraVaqbC0sMD8
      3CwLc3Nsb5fo6+vn9t27/Iff/yeSqZQc7D2ECKALdq+wljY3WVtdYWV5mdXlZWrVYMHY0Mgo
      o+PjvPfBT+nr68ORmZqeRWpmH4wx1Gs1yuUyO+Uy26USpc1Ntre3KG1u0Wq1iEQjDOTzFIqD
      XLtxgw/+7N+QzmRkWvKCEfraqlYqLC8tsTA3y/zsLOXtbQBi8RjJVB+ZTIZ0NsvI+Bh3Mm+T
      GxggGomif3BZv9tL9sL5Eqoas9ayurLCk6nHzL58QWlzk2gsxuDwCGPj4/zm88/p608Ti8Wk
      nx4SLr0AjDEsLSzw+LsHPH/6lEw2y43bd/jNZ5+TyeVwXfd7B7vneXLwh4hLKQDj+8y9fMHD
      Bw94+ewZxaFB7t1/j199+udEZXGY8BpHEkCzVmFlc4dCNknDOCivTiSZJhE9Xx3trox8OjPN
      0+lptrdLFIqDvP3Off7i8y+IdHnnYOHyc6R4gGdPHuMksphGBd83KK1R2uHK5MTeBZ39OCxW
      4DCstQfeTqNRrzP74gUzU49ZmJsjmUpy7eYtbt6+TW4g3/X682597dbuOBFhZ+3radTjaaXZ
      qd2RTt25bJbHT+cp5FI0fYVq1okmMyil0FofmMFuM/96wRljWFpcYObxY14+f06z2eD6jZvc
      /8n7fPa7v3rjLH+YIH8szbO2U0p1Ne44D1+PW49nmeaJhUTuks4WeP8nA7haYVBgDMp5NYg8
      rBK7qeBms8mDr7/i6cw0W5ub5AtFbt25w89+8SHJZPJH99ntYPYs7XYP/ovga7d2x4kJPm27
      IwlAOw7RdrOiAbpomo5CuVSiWq3y6W//goF8oaumUBAOo6dngQYKBT786GM58IVTQ+LnhFAj
      AhBCjQhACDUiACHUiACEUCMCEEKNCEAINT19HcA2Fmks/yNKu6D206pGqX2uESiFtRrvsEvh
      yglslYtSLugIKAdjHWwkidIxlBMHFUU5MdCx4Dsttyu5TPS0AFR0EKf4BcoasAaLxZrgsnrw
      3scYP/hkTPt7MMbD+K3gszH4vsFaE9yk1exuW8FvbAvfq2BtC+s1saaJ79Wwfh1sC2MdIFiq
      YHBQSqO0i1IR0NFAEDqKUi7acQNBaQetnEBk2kVrB3QErRVKR4PPykFrF6scHEfvraV6fV2V
      UqC1gxOJ4rgRtBNF7XsiELqlpwVQ2akw/d1TVPtMrlAo3V53BPt+D6p9u3aF4zgorXG0bq9c
      bR9oEY1SGkcplIKobi/v0BrfmO/dlOr1BVVKa2gv7Pohnuft/dba7wty971vfLDgGQMWrGcw
      pom1FrMrTLsrUh9jApF7no/x22JXCoUC62MxKMyB5WfbJ4fgQ/Bsh8A/80pISoHaPQwUSgeC
      D4QcrPPaLTdr7YFhn/q1MkRZNBalDEpZFAZrPLTywbYC361p++Sj8Pb81OpVfrQK7iqtNASr
      zyyKJmBRvKoDiwYcDC4QtP6BnRvkD9BK771/ZejL7dHP2+4o9wWyewewBSy+5+E4GmuClizY
      +ljTAOvv2QVdvVf7930fx42yNwRUzp4ggoPJgFWAxVofaxXGanyvEbR8+2DsK3tredXaWovx
      /T2f97X1Xx30xgQtPYD1Db4xaKUw1uydWOwPTkKB6IITX3BidN5YZm7b9j+kp1sA4fv8cNWt
      0TbodjlHHJecsch7+UQmAjhj/FqDxvIm9aUN6gtrNFa3UCjcbIpYIUNkIB1sc/04qbjEJ58y
      3XeBrOXJ9CNi/QXGR4qn0gWqLayx+J//Kei/O5pIJkUk108k20ck14cTj2Hb/WM8EzS1vsG2
      PIznodt9eaUUymk3hzp4bz1/r0U23qvugt9soYwN9uv57X352JaP9X2s52M9g/Xb//d88H2s
      CSLkcF2Uo9ERBxWJoB2Nch1aW2X8zRLa0cQGc8RG8sRHBnAH+nFcl9bWDs31Es31bZqrJVql
      Cn6jGXRdHAflRsB1UK6DjrroSCToKvjme74GtWnBWpTj4MSj6EQMJxHFScVx4jFwNLbl4W1X
      8XZq+NU6frURjBGsBa1REQe3L0EkncLNpIikU2jbwkmng5/5frD1vKDM22UWjG3aExPtcjWe
      j2m1/Wt5mKaHabaCbasFxgZ+WxsM7tpZAKBeA+1AxEW5bpD/iIuOuijHCepVq71jZLd+jWfA
      N+10WtiWH2zbPqmIi5OMdS8AazzmllbB9xgbG6PVau0N5oC9KC74ftSTUgpjTEfv28ZB3823
      eOUqjbUtqDSx5Sqm4aFcB5ygAHCCl97cwNlYw7t1Bwso+2og2p4mAq1fFXa7ALGgSxu4zWZQ
      0O1xUzAzs/u+/QrKOuhat/u7e10TC9a0t+1XxAXH1cFB/Fo5mt2yeaOALdY37YGr3R2/vtq3
      gdbIKF6xiI44uNEoxgn247gOvu9jjUW1fJrlKn6tAQ0Pv1bHtHzcZAzigShi6RREXZRWaMfB
      9wKxm0qDxsY2ttqASgPzzQPsyCgqlQrKXKmgzJUKytB1grp2HVBg23UZe/YEP5nA3LiOE41g
      HY0bj6KjEXB1cI8lpfZOIkqBMRbte8S+/BeU5+3lPxhfBC9r2zqxdq+cd/XfGhzEz2Rw41FU
      NAKOxk3EgpOfDU4cXqV+vBZg9sVT4ukCxYFMbw2CrQ3S7OIW4708CD6pNLu2a7UCuyP6anwf
      C5dsDKAUE1dvdG1+quyepoWTpdtyVWpvCrbXkKsqQqgRAQihRgQghBoRgBBqRABCqBEBCKHm
      xBbD7c7ZH/S/bm9vB93dGazbNC+K3XmkeRnr8cTWAh2W2O4a96NynILrNs3zsOv21ogXJY+9
      XI8n1gIIwkXk1FaDri8t0ECzurRAMpWitFEinohTbza5ff8D0rH91Vktb7G4to1XK+Erl1aj
      TiKVolYuM3jlFiP59L52XrPG9NM5UlHY2mmgHYt2E/RHoWYi3L5xZX9Hrc+jbx+RH8oyN7+G
      G3WxxjI+Osiz+XV++u5bB+ZxbmqKxGCO588XiGnwfEOiP43WEW5cm0QfcMLb3lxjc6dJeWOJ
      WDxGacejL67ZqVa5+tYHFPr2X8JR3dni4XdPSBf6qdUMMdVCxeLUtsrkRsaZHB3cP4tenUeP
      p2gZF7/ZIJXto173KabjbNZ83r59wBV9a3jxbIZavUml5pFMxmnWa0xcu8bUk5f84qfvHlg2
      5a01pp/M0ZeO0fI1tOpE4knqtTo3bt8lFd8/j616hUePpnHicZqNFsmES8tq/MoOiWyRW9cn
      97VrNps8fPCAaDJJs9FiNJ+gES9SmntKMjfItcnRfe1ObRCcHSjgug6FXIbt7W2cSBTPWKIR
      je8dHMWU7M+SikcoFouUK3WKuTRbpS0KxSFazeaBdm40QS7TR6FYpLqzTb5QZLscpDs5MXaw
      o8qhWBigP5dHezX6MwNUdsq8mF2gUa0cEm8F+UIBJ97HQNJFR1Nor8bmVpnNjVWar60w/SHp
      XIGYqxgsFijXDYV0hFKlTizq4h9iZ61i7NpVok6M/lSMWCpNRHtkBobxW41DPIVEf56BbIqR
      YoaGjdKfiqEdlysTE4fauZEYY8N5isMj7FRqDBezzDx/Sate42BPg8CYiWtXiUaTJKOKVDqP
      9arUa1VW1jYPTTM3OEJ/MkEh24d1kySjGu24e4Ey+6ZnoTA8RioRZyCTIpPL42hLKlMA4x1o
      5/zxj3/846HedMnayiI7DZ+Io7ly/Tb4TSavXsHzFUOF7IH9wfLWOutb20SjUYZHx/CaTa7e
      uE2jWmF4eAh9gF2rXmFpZRU3EiOTHyKufIrDo1TLJTyr6Usl9nfUeCyuLGOtJppMU8wmSKbz
      3LxxjWJhgOghC6pW15aoN32UcpmcGMHTMe7enATlMpDpPzCPG6tLlKpNIq7D6MQV6vUGd+7c
      ot7wGRnKH5zHRpXV1Q2GhgooJ0FfTJHMjIBXZXB0DOeAJsd4LVZXV8kXh2h4MFFMY3QMr1Gh
      5lnSfal97SyWjbU1VDwNXoObN69Rrra4e+sGg4OFQ8umXt1hfaNEMZ8lmswS1R754SvEXc3g
      0CCus/+51281WFldozA4iGcdipkEbiJDIqrJ5geJHfA0ImN8VpaXGBwaxMelUa1Qa3j0xzUD
      g8NEDkhPxgBCqJHrAEKoEQEIoUZigoULy/zMNzx4vsqtO3fAWuo7ZUbGRmg0PIYGCx3tQ8YA
      woXFWsM//pf/StTWaXiKanmVlpvml7/+nMlCX0f7EAEIF5pSqUREG14urKGsR65QJJfLE3E6
      u+osAhBCzf8HYJd0cxQWix0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Canadian forecasting (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Canadian mortalities' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFz0lEQVR4nO3Zy24TZxyG8df2+HxKbIckhENAFOhh000lLqfX0lVvo+pddN9Ni1RVtIUC
      KQTikMSTMD6fMtMFFQLhsqiCQ/U+v5W/z7L190jPeOxJJUmSCDCVPu8BgPNEALAWvLn49rsf
      dP/pwXnNAizdWwHcf3qgn//YPa9ZgKXjEgjWgkWbX312VUcv+yoXc9rZC1Ut5VWvFFUrFfS4
      3VGzVtZ+J1KcJLq+1dLT/VAbzbpGk6niRIr6Q13fainqjzUYTVQp5vXs8ESfXL6g1WpJj54f
      qVrKS5LCaKArGw3tdyIVclmVizm1O5E2m3U9en601IMBPwsDmM5PdXTS16fbN3T5wqp+efhc
      mXRK5VJOX968pJPeUPlcU6dxrMsXVrTVqqs7HGsyzUspab1RVRInWm9UVSuvKeqPdHjSUyad
      Uq1c0EajqkI+p2sXGzo47mmzWVM2yCiTTun6VkvNelmSCAAf3MIAnu6HqleLerzX0eFxTye9
      oWqlgn592NZ0Ntdmq65256XiOFESJzruDlUrFzSezjQ/jdWolbV7cKxmray/2qEGo6nG07ni
      ONHd+7tKEqlazuu4O1BvOFYYDRRGA6VSKfVHU4Uv+6pXiss+FjCUevNG2NfffM+PYFhZ+A1w
      e3tdQTqtfC5QJxpoMp3rxqU1vQi72t5sqDsYKxqMtbPX0Wx+uuyZgTOzMIDeYKy11aqG45ky
      6bRyQUbFfFb7YaRskFYmndalCysKMmn9trO/7JmBM7MwgNVaSYPRRPVKUd3BSHGcqDsYK58N
      tNMOlc8G//xLlF/2vMCZWhjAvcfvntX3w+7rx5PpXN3BWFLvgw0GLAM3wmCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGAteHNxe3tDqTRNwMdbAfy5F+ruo/Z5zQIsHad7
      WFsYwK0ra1pbqSx8wb/tA/9HwaLNWqmg7Y2GesOJauWCesOxesOJVqslxXGiVr2ka5tNJUmi
      Jy9OdLFV02gyUzbI6MHuoV4c95b9OYD/ZGEAe0eRKsW8usOxDl/2tb5aUZDJKBtk1IkGSqfT
      CrsDTWenWqkU9GD3UHGSqFoqqFkvEwD+NxYG0A67aofd1+tHzzsKMq+uluan8Xvervue54CP
      z8IArm02FPXHatRK2juKFCeJbmy11A4jrVSKmp/GOjzpKY4Tzd4bBPBxW/gjOJVK6crGqoaT
      qS62apKk9UZVxVxWV9dXdfPymu58sa1GrbTUYYGztjCAUiGrSjGnO59vazSZqVkvKRdktFIt
      qlTI6af7zzSdnerqRmPZ8wJnauEl0L2dF+/stTuvru9/f3IgSfrx3pMPNxWwJNwIgzUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgLXgzcWtK2vnNQdwLv4Gi89t2fd4N/IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Canadian mortalities (2)' width='192'>
      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
      Iff/AUd5fZIgzlQSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cardiovascular disease' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cardiovascular disease (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Clustering' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conflict and Terrorism' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZBd113v+1lr7ekMPQ9Sa5ZsSbY8xlNIHJMQQoAHgQpcbuC+lyqme7k8
      qh7FVPBeQgL8Afc/qqhX5UdBQgIUVIDkPm7iOM7lmTjx7MiJB1m2LFmz1PN0ztnjGt4fp1u2
      5tPqltUt7U+Vqlvdq/dZZ5/93Wv/fuu7fks45xwlJTcocqUOtBQdlW2X1tY5d9Xadsr12nbF
      BGCt7bitMaZsu4S25bm9em1XTAAlJWuRUgAlNzSlAEpuaEoBlNzQlAIouaEpBVByQ1MKoOSG
      phTACjLfymgm+bXuRskSKAWwgsw0Eqbm02vdjZIl4F3rDlxPxJle0mxlybWnFMAK0ogzCl0K
      YC3RkQDyuTFeO9lgqCckyR2hyMmcT08torCCDeuHr3Y/1wRxVpAXpQDWEh0JQDsPz8ZoVyFu
      NQh7a4TWcfTN19l+5w9grcVa27EDz1qL1vq6axsnKbk2K37cpZ7bTrnW52s1tO1IANL38f0K
      9UpAnleo+JKcgFvuvJdCx0jZh3MOpVRHndNa43mdPX2tqba6gS3Eih/XGIOUEiFER8dUSnXc
      ds2c26vUtqOjRbVudu/uBmBgoKPXvyFp5RnOFNe6GyVLoAyCVxCXxWhbCmAtUQpgBUlNATrF
      OdfRI0jJtaecCFshnHMkeUpmNMaWy6zXCuUIsEIY6zB5inEWax10lg8oucaUI8AKUWiD0Bk2
      KyfD1hKlAFaIXBtUkRO4gqycDFszlAJYIdJM46RBYIizMhO0VihjgBWilRZIoZHSEKelANYK
      pQBWiFaaE8ocsDST7Fp3p6RDSgGsEHFaEGJwCpK0XBOwVuhIAM5ZiqLtrbDWIQU4BFIKnHNI
      WYYSWZYRhD5YiNNyBFgrdCSAZOIkr0/lDFQkM42ErlCQ4xMJg981wMZ1bYPQta7zeC3bplkL
      JXwC4cjydEXrcy6l3udSjruUdtdr244EYIMqsnmSObmOejVCSggdNGZnGO5bj3NuyTbcTq0C
      a6VtnCaEKkAISZbGHZ2PTvuweH47abtWztdqaduRAKr1LoY2bWf9YA/TjZR6ICgI2LRpM9a2
      rbpLsUNfj22LPKEmQ4QQFEXS0bGX0odO7dCLj6Sdtl0L5/Zqtu1sPYAXsHFkHQBD/REAlTO/
      9Tvq0PVOYTICGWIF5FlSGuLWCGUWaIUo0pjAC7FIdJHiHJTX/+qnTN+sAM61A19f+fjKx+oM
      s4SYqOTaUQpgBdDG4ooM4Qf4KiAvdNsRWrLqKQWwAuTaYk2BVAGe5yNsQl46QtcEpQBWgLzQ
      4ApCGaBkgHCWOOusekHJtaUMgleAJNMokePLClY4fHLSvDTErQVKAawArbQgFBpP+VhnCZWl
      GZdFctcCpQBWgDjNCSRI5SOtw/ccSVYKYC1QCmAFiNOcQIFEgRCEQhGnybXuVkkHlAJYAbI8
      Q3geUkgcAl9JkrQcAdYCHQtAa40UkBWGwFNn7NDADW+HTrIWgfBoJ9UcvvJIsnJNwFqgMzeo
      yXn62e+ybeMwWkaQN8mdR4Am6B684e3QWZZQ9d/2RClZocjjjq3OnbQp7dBXp21HApg8fRJt
      DMILGB8dZ91gL75ztOZaVEo7NHnWote9bQ8UKiTLGpc9J0uxQ3cqgqV8Fmvh3F7tth0JYHjT
      dj4wvBGsJqp2U48UGo9o8xaMtTe8HVrrFE8FCNFeIReKEFtkl7Ull3boa9+24xggCAIgYCiq
      nvXz0gwNaZriR9GZ/3syoNAx1jlUaQld1dzY0esKYK1DFwnSC878THo+RV6UNULXAKUAlklh
      DEZr1DsEEHghVqcYU1qiVzulAJZJoS3CJkTy7UcgX/o4p0nz0hC32ikFsEyyXCMokOrtcMpT
      IZEtSgGsAUoBLJM4K/DQ+PLtNKhUPkLYskboGqAUwDJppQW+sHjvGAF8ERB5pnSErgFKASyT
      JC0IlUOIt3POSvh4nitLJK4BSgEskzjN8H2JfMeUipAevpTEWVkicbVTCmCZZHmMJ3yEePtU
      CiEIlUda1ghd9ZQCWCZJFhOK4DzrgZIRRV6uCVjtdGyFKIoCT0mywuBJsEg8tTQP0PVInqdU
      1PmGkEBWmMtb16BHJUuhYzv0M8/tZcfm9cw0M6qhQDuFMjmVvnVsGO5fkgvxemqb5TFSVc9y
      arbLInrkeXLJ1+i0D0txg76zfSftVvO5fTfadmaHHj2FNppWZgh9DyEFnoM0TqktOEEXX7RT
      rpe2RR4TyvNPo68qFFmMte6SJRJXej3AUtcO3OhtO7NDb9zGB4Y2oKRjvpVT8QUaj9DfesNX
      h86zFK9ePRMDLBbF9ZTC6hYIgVIXDrVKO/S1b7tEOzT09YRXeojrDmMtJk8QXt95v/O8CF1M
      lptmr3LKLNAyKLRFmIxABuf9LpA+VucUpiyRuJopBbAMCm0wVuOpc0dF8FWIoiApSySuakoB
      LIMk00jaG2Oci/Q8pC0t0audUgDLIM4KPOFQFxoBREDgaRpxORu8mikFsAxaaU6oDFKcH+VK
      GeJ7lAWyVjmlAJZB2wkK6gICUMInUpK4dISuakoBLIM0S1Gef5YVehEhJZ5QpKUjdFVTCmAZ
      JFlCeI4T9J2EZYnEVU8pgGWQZDGhvHhlJCUidB6/iz0qWSqlAJZBnidIVbno76UKyLNSAKuZ
      Dt2gmlaSUQ19WmlOJfTPskN73o1phyjyFsEFUqCLKFVB561y0+xVTEdXbpGnHHxtH2FvP5Wo
      istbaCcROqM2MMLIUN81t7Vei7ZZnuB5lfNch4v/94SP1nG7fuoFBFDaoa99244egRyO0FdE
      lRpjY2MgJVIKiqIAxJJLd18POOfQWYLyL+50C1VInhfLrhB3Ne3QNzodjQCeFzC0eQe93VX6
      uruoBhIjPAJPYd9RHbrTjTIW/2Ytt9XGYnSO8ipnPd6883FHqbYhrr2ZyPmv1WkflmJxXjzm
      Utp2wvXatjMB+CFDg+1n3b4gukzrG4NCGzApwSWyQIEMcKYgKzRRcGPGSaudMgt0hWSFAZfj
      q4vfEIQf4JGTlo7QVcsFBTA1Ocn39r5I6WS/OElW4JHjiYtngXwV4AlTlkhcxVxQAGMnjjAx
      PkN537o4caYJpEN5l5oI8wk9SyspDXGrlQsKoEhjop7e8vnoEsRpjicF4hLrHT3hEypKQ9wq
      5oLXeP9QP54tF7JeijjNCQJQlxCAkD5SSpKyQtyq5YIC0Cbn4KHDlHOXFyfLEnzhw0WMcLBQ
      IlF6JKUjdNVy3qfnnGNuNmWwv1oGwZcgyWIq0r9svt1TQVkicRVzXnI6aUxz4tRpTk2m5Qhw
      CdI8ofsSPqBFpKiSZ813oUclV8J5Aqh2D7BusJ96X1gK4BK0q0JfflIwlAE6L4Pg1coFH2CF
      VPh+uQPwpSiyGOVd3Aq9iPNCiqJV+nNWKRecn9+ydRtvnZg4MwLkSZOjpybYuG6AybmY7kiS
      E1CvhBij6erqehe7vDooipigcnkBRCJAFwnWOpQqx9TVxkUNKtPjk5iFBsr3yeZmOC4VFemY
      awlwMSfePMmWPfdQsxZrbcd3OWstWnc2zbZa2+Zpgqj3nGe5PdeGK5VHXmTkhcZ3Zw+4nfZh
      qee2U1bruX03254ngNbMGC98/xVOj06d+VkaxyAdWMtMnNITCjIRMLJpM0lzHtm9bkmFS7XW
      HS+iWY1tC21wNkPJ6nmOw3NdiKEXth2hQpz3ep32wRjTscNTa41SquO2q+3cvtttz2uRJy2S
      3LD7ll1nAoRadx+3331vRy98I5DlBmtTqur8mqDn4nkhyuXEaUE1LOOq1cZ5AujbsIOf+JFB
      JqYbpRXiIqSFRrkC5V0+C+SpiMCZskboKuW8azxPWzzxxBOcOjXK8tYxXb/EWYGPQ12gKvS5
      KKnwyxKJq5bzBCAEVKvd2DQt3aAXoZUUhJ5BXsIGsYhHgK8oC2StUs77BL0gQGcxqZBc/v52
      Y5JkOb4vztob+GJIGeDJ9n7CJauPC4wAPj19Ifv37qNcxnFh4iQh8NRFK8K9EyEFgfRLQ9wq
      5YK3sE2btnHbfTXKnMWFyXSK56KOa/34yidLS0PcauSCt7DxseO88fLBMga4CEkaU+kgBbqI
      JyvovDTErUbOE0A6N87pqYItuzaWI8BFyPP4gtsiXQwlQ/LSELcqOU8AkydO44KAbGqGsqrl
      hSnyGF9UO24vVYQumqUhbhVyXgyw6ba72HQterKGyIsYbwlu2Uj4FEWMc1xy0+ySd59ysvcK
      yLNLV4U+F+l5FHmKWYJRreTdoSNnUdZqcPjoMeq9/aRZQc23ZC6gpx5RaMfw0MDV7ueqwVhL
      rrMlVcT2ZYTVGca6Mq5aZXT0KfpRRK3ehXCaPMuJ/BCF5uC+V7jp7vdhbyA7dFa0SyIqEV3Q
      enyhqsRKKZwriNMM7x1jbmmHvvZtOxJAY3qSRpwy2N+DkDkKSy4Cdt52J3kyj6wP3jB26Fam
      ES4jlFHHBW8Dr4JvCgp99l4KpR362rft6Gg9QyP0DI0AMDy8rqMOXK8kmUY6fcG9gS+GUj5K
      liUSVyNlELxE0kwTSYF3gZ0hL4YSIRXP0UpKO8RqoxTAEmmmOb5nL7g16sVQwkMqUQpgFVIW
      rV8iSZYTeAopOj91QioqQlzSEn2pIPdKdn1Zyo4yyznmWt/7rBTAEonTBF+JJX3wYmE98OWK
      5F4sa7GYWerkNZfadjlbL4kLrHNea5SPQEskL2LCJUyCLSJVhCtKc8lqoxTAEomzhIjOM0CL
      KBmRZK2r0KOzSZdZit05R5LcONbttT1+XQOKPEZdwQgQiABbXPmFdfToUV577TVqtRo333wz
      zjmMMczOztLd3U2j0aC/v5/nn3+ee+65B4C5uTl6e3upVqvs27ePnTt3MjU1RX9/P6Ojo2zZ
      soVjx46xY8cOxsfHz8xhHD16lI0bN7Jx40b6+vquuM9rgVIASyTLYzzqS/47KaukeXrFm2Zr
      rRkdHeXee+/l8ccfRwjB7t272b9/P+vWraNerzM2NsbQ0BCnTp1ibGyMer1Os9mku7ubwcFB
      XnzxRaanp+nt7WXr1q3867/+Kw899BBf/vKX+eQnP8nevXvJsrbNY+/evRhjSgGUnE1RtPCi
      2pL/LpQ+ppi/4hKJ69at42d/9mdptVq8//3vR0pJtVqlUqkwODiI53mkaUqz2UQpxcaNGwnD
      EKUUAwMDvPrqq9x3331MT0/T09NDvV5nZGSE06dP84lPfIJjx46xa9cuZmZmqFQqbNiwgXXr
      rv9Jz1IAS8A5R56leLWlm/+kp9BFgbGODh0jZ1Gv1xFC0NPTc9bPz71IFzM1544yd955JwAj
      IyNntV38++7ubgCGhoaW3rk1TBkELwFjHU4neGrp9w3fCzE6RV8DS3S5EOfidG6HPnKU7v5B
      5hoxPRVJhk9vrUJhLMNDg1e7n6uCvDBYm+HLpQfBngxQtiDL9UVLJF7MTLiY11/q7u9FUfCP
      //iP3HPPPdx+++2XbLuU415PdGaHDiNqXd1khaar4qMFeM5w8LUbyw4dpznS5SjCi9qOL2SH
      BlAqQNKuENdV8ZfUh8WLr5Pzu/jax44d4/Of/zwf+chH2LNnzwX7tFTrdKc/X02f2eXozA49
      O0UjSRns7WammdITSXLhs+v2u8iTBrI+cEPYoXOdIKXA84OL3g0vdqf0ZEBFOdLcnHndq2WH
      fuyxx3j++ef57d/+bfr7+y/7vjrhem3bmR16cD09g+sBuJHd0ElWEEqBvMTWqBfDEwHSc7SS
      q1cdYn5+nr/4i7/g1ltv5TOf+UzHN6QbmTILtARaaU7oaeQSnKCLSOkRSa7ansHf+973+NKX
      vsQv/dIvsWvXrjVvUnu3KAWwBOI0JfA8xBUkz4SUKKlWvERiURT8zd/8DVprPvOZzxAEZUXX
      pVAKYAmkeUIoOltueCFCFZJlK+ezOXLkCJ/73Of46Ec/ygc+8AGEEB0Hie8mlwvel2vJXk7b
      UgBLIMlT/A52hrwYQlUwK7BnsHOORx99lOeff57f+q3fumSguxpYzBJeiOVaspfb9vpL7F5F
      sjwm7GBv4IsRiohcLy8Inp+f57/9t/9GHMf84R/+4aq/+Fc75QiwBLI8JpBXLgAp23svXCmL
      ge6v/uqvctNNN93wgW6z2aReX7ox8Z2UAlgCRd7CU53XBD0XJQPyrIV1DrmEi7coCr74xS+e
      CXSr1Svvw2rAOcdXvvIV7rrrLuI4JssyTp8+zZ49e2g2m9RqNcIwpNFo0NXVxdjYGNu3b8c5
      x9NPP83OnTs5cOAA1lpuu+02tNYIIc44YgcHB8myjFarxcDAAJOTk9x+++288MILzM3NMTQ0
      xNDQEK1WqxTAUsiLBIIrtwf7ykNnOdY6ZIeO0MOHD/O5z32OH/uxH+PBBx+8bu76RVEghODE
      iRP09fXR1dV15gLev38/GzZsIMsyZmdn2bx5M6+88gr9/f1o3d6Yff369TQaDU6cOIFSCqUU
      b731Fj09Pezfv59KpcLMzAwHDhxg165dTE5OIoSgWq1y6NAhoiji1VdfLQXQKc45iiwm6N5w
      xcfwVIjWGcZaPHXp8Ms5x9e//nX27t3Lb/7mbzI4OHjdXPzAGW/Sfffdh1IKKSVzc3Pcdttt
      bNmyBecczWaTPXv2UK1WEUJQqVTI85xKpUJfXx/bt29HCHHmb7du3cozzzzDRz7yEbTWTExM
      0NPTQ1dXF2EYUq1Wcc6xfft2KpUKURSVAuiUwliMzfA72BnyYoTKA5NTFIbQv/ipn5+f5+GH
      H+bmm2/mU5/61BW/3mpFCHFGAO9cILS4+Ka3t/eCf+ec4/777wdgcPBsA+bgYLs64cjICL7v
      n2X1XqRSaWfwBgbadvb169eXAuiUvDDgUrxlBMHCr+K5giTX1KsXXlf8/e9/n3/6p3/iV37l
      V7jpppuAtheo5HzO9UgJIfCXULYeOgyC87TFqYlZ6oFgNtZUlSHDp6dWoTCOdcPXvx06yzXS
      FSh55fWdPekTSHvBTbOLouALX/gCRVHw2c9+ljBc+sL71cqljHxXYsmO45gvf/nLPPbYYzz8
      8MN0dXVd8XE7EkAQ1Qj9eZyzZGlG2BXhOcuh/a/eMHboZpIRSIEU8pI24ovZoQEUHlJZ5pox
      eqB2pg9Hjx7l85//PD/xEz/BAw88AJxdI+h6rw7dKc1mk0ceeYQvfvGL7N69mz//8z+nVqst
      y+rd4YKYecbHJ1g3PIzyFL5w5DJg1x13k6c3hh06KwyRAk/4l7yzXOrO47mAUFmyvMDzPIqi
      4Bvf+Ab79u3jd37ndy46qXWjV4eO45ivfvWrPProo5w6dYrf+I3f4Cd/8icveb2tqB06rHVz
      18Ka0vXrO/mL649WkuP7LKkm6LkIqfClIEkz5ubmePjhh9m9eze/+7u/W1qXL0CSJDzyyCM8
      //zzBEHA+vXr+dM//VM2bLjyTNy5lEFwh8RZSiCDZaUihRBUVMjevS/w6D+/yi/+4i+ya9eu
      Fezl1UEby5OvHGf7SB9b1184Q7OSpGnKI488wrPPPsv73vc+ent72bZtGx//+MfPZHJWilIA
      HZIWCeEyAmCAQmse+/fvYbo38md/9Nk1cdeP04KvPv0GJyfmeenQOBsG6jx4xxY2DJ4feC6X
      PM959NFHefrpp/mRH/kRfvqnf5pHHnmEX/7lX2bnzp1XxelaCqBD0iyhegWL4Rc5cfoE//Cv
      X2L3rZsYufuHCcNwVVqX38nEbIv/8dQB5hoxW4qnSWwfx/QtnJ5usnVdDx+4YwsDPcu3ZSwu
      43zmmWf40Ic+xKc+9Sn+7u/+Dt/3+cxnPrPid/13UgqgQ7I8pucKRgDnHI8//e+89ubr/Odf
      +BUmkzeYLK5+jdDl4Jzj8OlZHn3uTfJCs5Onqb5vA8M656aD/84b0zs4dGoHR0bn2L1lgB/Y
      s4ne+tLnR7TWPP744zz55JP84A/+IH/0R3/Ea6+9xp/92Z/xiU98grvuuuuqz36XAugQXTTx
      xNIqws03G/z9f/8Hbtqyg//9k7+GUoq5rEqWJau2Vo9zju8fHOU7Lx3DOsst5mmq9wwzYwuk
      r4juuoNbpk9i3nyMfckd7D/qOHhimj3bhnjvrRupVS4/U26M4dvf/jbf+ta3eO9738unP/1p
      hBD8/d//PfPz83z605+mVlt69b0roRRAh6RFgu93fpd75Y19fP3xR/nEx36ObZu2nvm5rxQm
      SbGrUADGWJ546SivHh7HOsvO/Gnq9/QxI0EkW0BIGvExkmqNygPruf/UIRpH9/Nydi+vvOV4
      /egkd968jntuXnfBFKQxhqeeeorHH3+cBx54gE996lNIKTl+/Dh/9Vd/xY//+I/z4IMPvqv1
      h0oBdEiRJ6hKZxmQ//E/v8bM3Ay/9av/B4F/9h0xkD5FUWCtYzVZ27JC89WnDnB6qom1jm3p
      C/TfVWWmUkfPRYTeIFJKfDeASedoxMeI+4eor6vwwePfZfx4wD7ew943LK8dHueTP3oXlYUC
      YIsX/je/+U3uu+8+/uAP/oAoijDG8C//8i+89dZb/N7v/d41KcS76gXwnVeO8ODt2wn8a5cx
      cc6R5zFeh0a4j3zgw1SiygWfXz0VYYsUY91ZewZfS2abKV/59n7itMA6y/Z0Lxv2WKb61pPM
      tKj4e95+ZBMC5fVScT3YImEuOURjaITedYofPfoEh8bX8UZ+B4+/eIQfe2AHTz31FF/72te4
      9957+fSnP00UtUfR0dFRHn74Ye655x5+//d//5pVnVv1AhjPv8cXvjnNf/rw3dQ7eL68GhTa
      4lyG36ERrlq5eGZEeT7CtUsketG1P/3Hxud45Jk3McZirGNb/jJbdzYYG76F1vw0kbobADM7
      hw4DgoVncyEESlSpBndgbc50foSZzdsZXhfz/oNP8MVvDPP//u1+fuih9/HHf/zHZzI51toz
      GZ9f//VfZ2ho6JqWXLz2n8Bl2DE2z/7a0/z11xP+0w/fx3DvuxMcvZOs0OAyPLF8g5ryApRt
      7xlcu0YCsNYxMdfi0Ilp9r45ihQCYx2b833s2nSS4xvfQ5LMENhdSC9Az82Rv/IyFc/DrduI
      Xj+EX3/7c5AyoBrswpicb3/va+x94kk2R+vZ/cFf42M/9QCVSvu8zc7O8pd/+Zds27aNz362
      PQ9yrVPBq14A/fVb2XLo2wSbn+FvHsv4uYfuZ8eGd/dZMc01ylmUXP7pUsLH9wxxWkDP1ctv
      vxPnHHOtjCOnZzk+Mc/JiXmywiAEKCkxxjKcvsEdGw5xePv95DpBJOvxgl5MnlPse42dd1bJ
      jeTwwaN0jZ1CDI+Qjwzh1+s453jj5Vd49vF/Z/NNO/iP//UPGMyf5PVDp/nmC2/x8Ydu4Zln
      nuZrX/vamUmt1ULHdujDJ8bpDgWjMzE9FUFGQFcgcUGNzSPDV62Dtb6NbNr6AdzR7+Cte54v
      fSfnR99zL/fsGrn8H68Qaa4JPbmkrVEvhi9CQiVoxinQvfzOXYRGnHF8fJ6jY3OcnJinlRRI
      JRAs7O6o2q5WYy2D2SF+YHgfB29+L8YZsgZU/U3t37/+Ol3Dgp0bQErYs7nOwdOOIwePEo6d
      4s0446lXX2bTzTfxiV/7z1SqVay1zOt7uX3gWZ482MX/9f99hV3bRviTP/mTJfv1rzYd26G7
      6xFFltPXXQUhqDjL+Ogom3bdcXXt0M4RdY+wZccH8Y48gd+zl298t8nU3H186O6tZwWaV8uy
      O9/K8JVBIC5rs72UHRraZjpfGVpxsqTq0Jc7t9Y6Tk42ePPEFCcmGszHOUJwZvG9lIBzON4u
      GGWsZbg4wkN9e3l953sxCFqz01TkfVjnKI4eJYvn+dB9ERPTGUhJNcq4eaRKPj/L3/zzi9Sr
      3fzC3fdS2biVOMuxUYRzjsDbwoutvbz03/+ULR/8L3zsZz5+wcJd19qS3bEdem52ng0bRmjE
      Gd2RICdk/foR9IJV92rZoY9OTrGp3k1UX8/mHR9Bnfg37hb7+e6bOY2k4Cfft+tMhuhqWXbT
      PKfi+cgOqsJ1shAjkgFZUSClXFZ16LwwHB+f4+DJGY6MzpLmGikWVkZ5Cucc2li0dRjrEDgC
      MuqiRZ0Wg3KWPT1v8vot92G9gLQ1Q6TuQEqPYnKS1uGjPPShHpKshcvejy9rfH//Szz67X9i
      w7p+fu/XH2R4oJ/jE4K33jxO1+sTiP51zA1288S3vkWepPyvv/NRRo84vvnCYX7+h29HybPf
      w7W2ZHdsh77llvZw3X31Ru0L8qZVzJwa5Y6RdfjVATZu/ij+6L9xb3qYl0+m/MO/ZfyHD+25
      qhmiOEvwpbdi0/LS88nzKyuRmOWaQ6dmOHhymmNjc+0tl6Qg1xbtIAg8fE+2L3Sa9IVNBuQ8
      A6pBF00qLkEWTbTTNIKAN7ffhQ6q5HkTkW9C+TWKJCF57Q1uvrOHnihhcuIWpAn4v//u/2Gw
      f5D/8nP/J121LkyRMDp2nGo4zj13w1zL8exT3+Wbf/0id3/8p7jtfe+lMOPszB5n7+n1PL+/
      l/fdtnlFzuFKseqDYAccliHm9Dh3rh/Cq/SxfuTHqMx8i2B6jH08yRe+kfGJH7qdvvrVWUaY
      FSkV78rXAp+LkhXyvHM/UJIVvHF8moMnZxibaWKsI9cWKRxV39CrEtbXc9aHMVU9S93NU7Ex
      0qQ4HZM7aHkR01GVVlSnVd9CVu3BCImQCmNyinmfSjiCNQb36quowQp3bNGMjvcQiS04z/Gr
      P/9LVKK3A3dPVPHYjct2kcQtHvm3LzA6NsYv//L7SeMIZy2+GmZu3W3smn2Bp16ps32kj/X9
      yytmtZKsegEAIATHZIA+Pc4964fwK930iA/jBU+gxuZ4wz7L3z5W8LH338KuzSu/PjnNY3rF
      ygVvQoTo/PIlEgtt2PvGaZ7bf4I8S+mVTUbkPMP+PCOVBr3MEbkY4TQmF2it0Gn/GwcAAB+r
      SURBVJ5P01OMVau0qiPEXYNoP8IJCeeMYM5acI54vkUluLf9yHTwIFOF42fuhqnZgsC+ByEE
      zrmzLn5YqL9pLeOT4/z1l77A7pv38LGP/hyZHafivU7raB/ejq2E4W3Y7WP07d/Po89V+d9+
      5A58b3VYwdeGAACE4JQKcaMTvGfdIGFUpyZ+iNB/hnB0iv3pc3z5iYzbd2zmQ3dvpesiVReu
      hCxPllUS8VwCGVJcYgRwzvH6sUm+8/IxWrMT3O6+y4YeHyc1uXBkSjLqh5zw1qP9EO2HOCFx
      QmAlaD9FeA6Ea2/pZCWeCi64sUerOU0k2qv9itFRZk5P88EHKxjTRCf3nlkDYY0hi2OSPKdV
      GJrGMJ9rXtj7FK8ceoP3/y//Ea93gJetwNlhdodThONvkvX24PX34qr3s2HL47x2fITvvNzD
      h+/ZvmLnczmsHQEACMFpFVKMTXH/UB9RtYoQDzI08gzh9Az1+FleOzTLkdFZHrpzC3fuWIeU
      y39uL3QT31u5CTiPEJ1fuEbosbE5nnzlGKcm5ticv8yDXW9yfPvHOBoOXTQGEQv/AIS1eEKA
      c2DNgu1intwlOJGBzEFYhNQ4DL7ZifQidKNB8sZBtt/ay/qumNNjG6nK9miaJSl7R8eZ9EKs
      kDggjhOeeOSfGNmyg4/+wn89K/B3CA6b3ezu+y76wOvo97wHL+wlGbiTnTN7efGNbm7a8O6s
      Lrsca0sAAEIwqQKem5jhgUGo1Kr44v30DrzAHn+K4eQl3shO8eiz8+w/OslH7t3O0DJnj/Mi
      RS6jJOK5BL5PFmdtP9DCz6YbCU++fIxDJ2cI8wk+qp6muqnKW0M/i1HdSzbOCSFBSJT0UZy/
      eqtdPtwgPQ9TFJhXX0UPD3D/9pixKUVF3IZzjrgV8/zULNNedCbbd/iNV3jlu9/hoR/9GfqH
      LjwfUyifI/o2ttRfoHXwLdyeW4j8myi2nmbgtX089kKFT370Tvwr2DR8JVl7AgAQgmkV8Mzk
      LA9YS72rjhDvpcrzDElJT9FgLNrL909v4m8fa3D/LRv4gT2brthQVxQJgVi5zdGECrA6w1pH
      khU8+9oJXn1rgiKLud29yL19UzQHtvJ67W6sV4ersLdw+7m+fUGb/fsYFXX+w50p860UmX8A
      BDTm53luLqbphWf6oIuc6clRfvLnfw11mTRjU3YxzU56W2/ROt2Hv2E9XuU+hrd9kwOHT/D4
      i1386P07Vvy9LYW1KQAAIZjzAp6dnuO9ztHV3YWM7idwL6Abjk2iYMvAJE80Rnn21bs5cHyK
      D9+zfck2CmMsxiyvIty5BMrHFBl7D5zi1cOTxFnBkD7Og/4LDG/YzHhwEwcqt+MWKlG7ZpNg
      cvICRxJnfy8EDih8hY4ibBQhfR/peRctq1IcO8bErOUH7xf4MmVu/hYiUWVqZoYXmhmpOjv4
      94OQ+z7w0c7eqBCMuc3UuqYJj71O3t2FV6+R9d7HtoEX2Xe4nw0DdXZtHsTzJL6nOq6arY2l
      meRMzydMzsVMzcfEc5MUjTGK1jTCU8gLzEu9cyIQxBoWwAINL+SZmQYPWEt3dxdh7b1YXiCe
      HSMg56cHBnix8SwHmtv5yrdTdm0e4MPv2U4UdOZAzLVpG+GWsTPMuSgvwsPw3P5T+KbJg2ov
      O/vm6NpwD8fyjDcrd+BUO4gvZqapvfQcTd8n0cH5NUXPvWAc+M4RFTme1YDFeT7W8yGqQhhi
      vQAbtCtcxEdOsHHnANsHGpxaSHmenpzie4kmV8vPfDkhOGpu46aepxGvv4G5+04CbwP5xglG
      5l/h8e8pvvXSsbMsGoGn8H2Jr9SZ2ex2MWGLjmexjVFcawzFHEEgqNZ8atWISq2fYmAIHW7G
      XqZ+0yJrXgAALS/g2fmYe3XB4MAAUe0BsM/Tmh1lan6ah9ZvY93kKPvEBAcO38LJiQZb1nW3
      q7wtbKVjncPaha/OgWt/IFmhES7DW8E0qCd9ukRKl36d91dfpnt4G1H/Lg40Wxyp3gGyffHr
      sTHq+55j9/t66OmrcWpOcHAi4sR8F7NZjSiMUOd8yGd2lW/f6xDWIk2GshlCZ6hmhk+K5xpg
      NcnQOn7q5jkmZwsCczfHxsd5qQCjVu7S0NLnpL2TTd5eWkd6kTdtJwhvp3vb46QHDuBkDWUz
      QhcTiAxPFiilETLBlzGe1ERBROCHmKCLfPMQSWUXzu8H6eOE5Lyc2kpWhlsLJMrn6VizMz3F
      zqFBKl0PLIwEoxwbG+e2rRsZODHH/g0vcWhyEy8d3Ni2DWCRziCdaX9P+3spLAoHTtPdnV/R
      1qgXw5MBw8Ect/WO07XpvSgvYH+jxbHanSC99nP5yZPUD32X2z80RK0WIARs6Yct/SnOpbSy
      cQ5OBhydqXKq0YUVlbNHB9EWhlMKLT0yW0VLizEW6wyBMlS9jJ++fYI0Tyha7+H42BSvWYW9
      Cv78puhlurKD3qkDxH29BAP9yPp9bL79GQIMBT6FqqJFDVyIIUTJOkZ241SVAolznHVXX4nw
      +boRAIAWkjdQjJ+e5I7uCn099yPEXlozpzlybJSbbhqh62Sdvv4JJntOEkY9SL+CANzCiV38
      ihA4KRHA/GEPdQWbY18MhY+u9tGzdQdgebmZcLp+F4gF/87RI/Sd+D63fnCYei06z1wnBNQj
      wd2bCu7eNIe2s4zOKw6Oh5xu1jFWEnmayDNUfU3F03RFmq7IUQ8d9dCiZFv8OMuJUyMcHS14
      UwSwAmnjCyIE43Y7td4p/IP70fX78II+Cj6AER5CRUgk4SViAOcuY0S0Fp3n2DRFJAnCubYB
      0BqcNe3UsHPt0cE6cHZpAjhx9C1S6yGLFhn+gh26zuYNV88OvWSEYMYPebpVcHM8xs2DdyL6
      BPHcKG8dPMWOnRu5fWaE5smCKa9Bo6fJfI8iriiCsPc8z79zFoFaVknE87qoFM4ItM54LROM
      1u4EsZCROfAGgzOvseeDG4iizh67PCnY1GvZ1Jtgbav9CNRBMGktnBq3HDjdzzEZnB9PrDRC
      cMzexU31J9EHDuJuvxWpupa8Isxai84zSDJUkiKzBNOYxSVNeiuanm5LT087fjBWU1iLNhpj
      HK0cWlYSFxLjlhgER1HEqeNjDA/1U3GWifFRNt48dFXt0FmhaSXtXVWcc0hjwFqktTgcUjqE
      MniexVhJpkPCapXAU7zmPMZGJ7mjvoOwRxDPnOLQgVNs37mewb4K/bpCNl9gThtSrRm3p5iu
      O+I+n6waEIQ9AATO63jbzcvZoRcxhLyYSqZrt4IDZzXs28dgcYjbfnADnlJnjrP4up2+/uXa
      GquJs4S5WXjh6C6m/eDtu+My39fl2lo8Tqq72JR8j+bJXryR9Rdta4zGpBkizfCTArIYleX4
      RUqYxSA0lS5Nd5egb2dIvUsxnxYcmfM4ahQGn1woChzGcwg/R0YpITEeMcJmCLeEAjVJa47J
      uZS+qkcuAqphgDGaWq2GMeaq2KEfeep/kuYNvECgApCBwIUC4YPyWHgQdBincdZSzIdMnrRM
      TwRoWaNWqRAJx05hGKmeIJ49Ra0SsWVrnSisIhfu+O0LHIpYkzVymlnKqJ1jOtDIvMYtAz/e
      UX87rUv/yujz6JtuQUrVNqB9/0VGopPsvrd98Z97zM7v6me3dc6S5gmtpmZyDmbnYa7wSVCk
      nqZlFdpWECbC2gCjFVp7OHysF6CkxFMST0q8Dv07lz0HzjGkDtI9NUay5wFUGOKSFJXkqDRH
      ZSkiTwmMRpgcawtyl4PvqNUE3d2CgcGI7m4PazMmGjlHGx5zMiLxHVVO4uJ5jAFnFc6FWBdi
      qWBUlVzU0bJGIaKlCeBSXC0BfPvUN0lt2zrsnEPbHJ03IW+gihibFzRjQ5y0nwEHhgJU9xB+
      OEwyITl50tGcDZFBnS0e3Oy9hSxmCOUAgSoIPEMYgRdZ/IqkGlXx/QpyIRi1RvP90zEj3Q91
      1N9OBfD66IvEO24GaxF7n2PjwDQ77xw5L6uzeMxOBOCco9AZrTRnbs4ym0tmC0vDSFKR4dD4
      eESFpDurExU1nCxIZYPUj8n8Ah3kiEDieeBsgKZC6noo8gCdVtGJT5b5WO1hvBBPKULfO8ty
      0tk5sGwVz1OZCto3IZPjPIMXGrwQwlAQBFCt+1RqAbWqQqm29TvNY07OWU4nHvOqSl4xVPVx
      dLNFnvfR8G8iFn0IKblcqLzqg2DROolunkIXliSDOFHoIsQXPXh2CGUDuqVjk28RCMbGBfHk
      FLF6lcGhiG13DKPoZW50glMnBW/NDXJHqNlRP902dRUSl/kw5SNyi3MNhMwJfUW97lOpKGDl
      YxyFRGcp4feeZ/OmJjfduuGK1hsYq2nGMdNNmDKWqbygZdpi8FNBVxYxXHRTtz30yQifdkZJ
      ILBYJBIsuMxBCgZL4XKaLiMV8xg3TSaPk6mMJGoi1wWI+iAuGERkXeQtj8acIIsVOgswRpFK
      v/1enMMJiV1wkyrhcLx9Ub4mbuUHNr1IbwhB1ccPFA6JdSCcJXeSxFpaWcZ4KsiMZdL4tLwe
      qKUE7gSuleGafYx6t5HKPogWRj7bvh4ux6ofAb78b//M6bmMwArqStMXQlgVxK6Jy5sEdo6K
      bVCRFissTofkephUrOdUbjFqGtObMjRUI+jaAGnIxOmCxqRZiF0MEgNOI4VBOodUBqEcColz
      ht29O9jZe1tH/e10BDg8+hJzJw9y8x7H5m0XN7otHnNxBHDOkmQJM3OaKQPjecKcFhid0ttU
      DCdb6BcDRCpEculNNay1COtwxuCMwzmLcRpNgTUa5QwG2hexcxgKCgpiLyMNp2lFDYo6qN4I
      We9HVQYIbAViEG7hdZ3DnemDAxaFAUIKwCIFuIVT5hZHEkk7EyfAOI2hwBQtZOM4WcuQ6SEa
      /g4KUb9g8L6iWyRdSzYMSnr6CzIvwWUFMkmgOcGgSUEYUr9O2r2LGTGMsZKKmKeij9KdfJf+
      0KOV12lM9jA66pFFR6kMGfrX99K/rQdwYB3OOpwTOCtw1uIKcIXDFAVFbgnEyufFa0oQbWlR
      6+5jZmYeFu36C1+FcAjRTsMiBElsmcoE40XCTO4orEYmE3QlHrvYzIC7GZVWMbTQcoY4b68T
      bj/GOSxgjQVrMVbgcFjhQLWP5ZQDQVs01sN6Pm7xfiba4nBKEdo+AmXoTvsQrRw9ZUiPKAq/
      QRodZqaaI7sVMhRYX6FUO4ZAKlA+qAAnfYT02o+ZCJwtcDpFFC1IU3ReQJwiWxl+KyNIDFEq
      cTpkVG4i9utkYUAezFP4KUUY4jwPT0mUVHhSIgRoYzDWYlx78b+1bYes0hqv0ChjVr8AbNFC
      TB6gP2shlCFTPlltO+NyGKGrdE9nDByapBqPgRMkniUe2M70+rvJoxbdXTMM5McY0YbMRUyM
      Vxkdz8g4iqJAKIcQDpRCSIlTCuErkApPSaQviFj5lWZ5FPLdRoR3NG4vFhcSKSRKGLAehRB4
      wrS9MU7iBy2ca1ItNL1FymDaSy29FegitQkT6ijGFgSVQaTfi1y8mKVESoUvFaj2RYcQGGOw
      mUYkUBiwUmERGOcQUqJ8D7Gwl7FAYJ1D6JjMHidJZ5iRDi9aTy3vx1cFoQjobtUYaRrSKUl7
      YYLAAkZorNQYWYDKQM1TCI2VBRqNdA7hPHA+CEWXa8dsNvShy8MMeDhf4jwYkouz9QnYJp6W
      KCNxRqGNItOSwrWFjlQgDZDh6ZQwtUTa4FuoaY9qsgZGABWfwoYDTNZug6JC14ym/8gUXXoe
      6ZpkXY50XU4jOI2WGSqvUklSug9OYVKPzPeJ+/YwPuDjVWOGa7NsLSZxMsQYiXYLeWIhyW27
      CpxtWlRqkDpAGI9oMMT1u4Uhe2WIAo/1wxqcwboCaTOE0UijUbJ98UraohAOVBYTzUfIVg3J
      MAUwSRNpFbWuQQa67iDs6UUs7g/mHDovKPKEVM8S6wnyfJrYNElETuFpdORTD2fpcQ5P9iNs
      hHIRtvDJUoWNfYSLcC5AEBLWKkTRrUShQ7ZmKeLDtPyDzIcBRTBEVzhMmIR4aBAawgJnC3wr
      UUYhTIBI2pNvnjE4FNIZApO1b0JSIXwP6SlcDJJ2FQshHE7YhTStwAoBRBgpKGRBLg2Zn5F7
      htAT4HsIoRCtBrXYUZtzVDIwVoCtkAFpBWZ6K6s/Bnju619FHjlBj/PxvSpx4Eiqs8wwQdNL
      0F4XeAMQbkTKkEI3oZjAFVMomyCygu40pL9hMLaXrNpP0uPII4OXWjwdoXKJMSm5KZB4WKEg
      UBilMSalcOAH/XTXhthSH6Ja77no82Wnz57J3DRjR19AeK6dQVEWJwwWgxVtUQiRY5xBiBzP
      DqLoweYVKl4/fr2fqFZBeoJCpzRNg3mdMK9TYpMRk5ArTeFZjIwoZB0tovaEG4spUkclCKnQ
      ojc/zADTDMh5gqCGlP7CXEK7rdWCfL4b3RoEPURQraF8r30xN2cQzZM0K2M01weklT6sCtqP
      +yweQoCQC7HM4noFgbQKlQhUbAmaBX4jw29q/NQQIPClJVCghEUavRAXtJcAtSd1Hda1y+cY
      C9ZZcuFw0mACn6zmkfbVyHtDXI9C1zRFYLA6xWskq18AR77+HWaKOTIxT1M2kKEP0QjVsIe6
      H55xEcLZF59bqIFjnKOZp7TyFjafpEgzRFPhWg4lHcKBUxZfeFQEQIEmJ6xEWOnDYBdGWNz4
      PEWiOZ6myLCXoa4BdtSHqdd6zrLddioAZx15mmGNRecFptDtf6b91RqD1kW7UJWzJK4glRZX
      kVin0abALsQMUgSEhNSUT915ROdWsBPvCErhTNBYOMtpmzLua2Y8i6hG1D1LV36UATfGoJil
      4gcor3LmfTkHzkiy+Tq6NYDTQ4RRFypoi8GfmyRojCOx7fNG++5thcOe+dr+54RFS0vhZxRV
      S9HlUfRWKXpreF4NTwfIRELLIZK2WMDhhMFJh/Ms+BJ8wAcrC4wq2o9bwqCSDH8uwZ9PkbGA
      ROIlAVJHCCrocA2MAK8++S2KdCGl1TZzAyAWvj/j7HYseD5ce1bV2Pb/z3zVC7OddiELYXG+
      Q3uWPEsIfJ8wrODCCrovolkpsF3tCTfnHMIJ3JwjbFjsqTni+YxRFES9bOoaZGvUTVetp/3c
      7BxWG4zWaJ2T24zUFaQUpNaQoUmtIXea3Dlia8itwRiLZy0Si7IWD4dvoYqjYiRRofBFgBIB
      QnhI4SHwEFK1q74phVACwUIwbx3W2IXvLQ6Lc4aFkBjrDEq0L3Av8pmxGSdImAkcrUBQiwK6
      zWn6zCkG3BRVkbUfz6SPEB5CBTg8svkapjkIxTqCqAvhyfNuAosL6N2ZpINb/AUgkAKU03h5
      C7J5ctkgCVoUUYGuQNEl0bUQWWi8RCMzg8xAFSAyi0hB5QqZS1ThIY1CKx/tV8m9EKTAq0r8
      iocf+URBiB+oKxNA3Jglx6ca+lhrz9R6vxoCeOHr/0wWNztq65xtD63vRLzz9w6rNdZonLPU
      qnWCsIKr1UiqjmakoUcsZGIuPrHjrMM1HWIqxZ1sMDevmfYjXLUbT/qkQlPQvuMJBMLJ9kXt
      LIq2jUNh8ayhiqMuoCrBX1jcK2gP5abIccYg3rFB96IlQwjxjokehXAKrIKF7LfDgbAg2o9W
      7TtEO5vDwjxA+zgSpUJc7iNMiBJVlIwwvuSUyphQmtnAIUMfJQXSFXg2xrctpGnhuwTf5fjC
      4JkMGgHWDGFQCz4qh3TgCYEvfXzl4QnZrpEqJL4LQSussVhjsHrBkiEFUiqQEikE0hpkkeMA
      jYdxbXGDRSqB8iVeKJGBxPM9PM/DD32Cqk9Q8VCBdyZb+s7P9gqCYMf41AzOOo7OTDGyffeZ
      mu9XA52nbwtg4dlRvP1O3v7/wmSLMxnOmoWqaz7K8/E8D2/hq1QBTnrkvqAVaWaqGtGlEVIg
      6CzdKaRAdAvorsK2Cl2xJhqdQ5w4jt/yUU623ZbK4qQ7Iygh5Vn/rLM407ZwKNXO0ggkTkhE
      EBL09CCrPsaXSAS+UfhO4VuBLwWq/baxpj3aQDtD0l4P0D5hcuG1pFII0b4zS6nOZHh0nhM3
      58nShDxPyLNZsjzHxf9/e2e23MZxheGvlxkMBlwAEEOAi0hasmVZjhWnksrz6aVyl1dIrhxX
      EkuUEycSSQBcsM3a3bmYIQFQtE3HshOXcFC4IOevRgN9zuk+a/tEosGObCBEnUthKITDWQmu
      AS5EuqgUIqoOFJSuVJxFVYEvhUWYAmtzrCntGqUlfuDwfI3yWJirBqr5Vf7g67UWQiNEHe37
      aF+jfYn2NVKJGyX3XUrrW9fyh+8Ajpd//ysZHnVpEfUmh3vbP9kOcPrln7F5dpNgZa0pt1JX
      aYyb/5WaUWkPKzSpK0hISWVOKjJSkVEog/MFMgCkqxpmMg+kCFkJVKlZSz+8wDqDNRmmSJHG
      Ia1GG4W0Cm0V2vrUREhNNMBKLBlFUWBMeayxpsCZHFfkOJNj86Ls2CAsBKXBXUiL0wI8gfQr
      RkUgUTjjSkYXpfY2WGxqcLmF3FBaAB6BrFGTCimvk+FsVRZDJRhVct312wmE89FSlUchNEpJ
      pACTJSTTCVmWUOQ5JnOVcFrETRuKaje5FYgSQqC0xvP8Uvl4NZTnlbXQTpCbcswst2TG4iHQ
      CqQnUUogVQ0lPbRSaCnKOcm5S9ZRHqNuipkWCpnK2IctnQd3cq+rdshKsP6bI5CzFifmgWZR
      +ZV/CgH40x/+yOxqVB39LdaCqBLXZBnHQrrSE5A6h6UAnaJrBqU0Smqk0ijpIZWHkhqlvNIb
      Ii3XL0fJkA6DExZTGW8IEFbguwDtyrJIY03ldbDlVuxMyWRClpFlWxqdUogFd2bJzFqI8pwu
      qAIzrozCWhY5s0xPqCrTrtPg53IqbnqhCAROLCyhuM4GhaXI67XtdL2GXDsKLM4Vpfep+jBr
      S3vLOYFEI6GM3FLVEJRWdfl3FXQSUiClQMiyDDIrHNPMMM4MiRVkSIxQWKUxBOTSw1T8IgVl
      UCo36CLHsykeGR4W7SyhEoQeSGUArwwbi1I9lG9R7XplTbFAUhhxoxSr2rhSWKrvbyueeSdG
      sLX2poHrffH3xZrC3NHb525//A8Zt8Tex68vsM7eWaztxDIOqhyUxXHd4tPlMZbn8D0pC1Lc
      K7dlPuZt7NvLbK27d9+k78e+ffy4lufvInffowqL6+tuPblrvrfstm8Z950Ewq4/6L7MJ4T4
      SbA/XAB+Gdgfkw79c8/1l4Z9Z27QFa3ol0g/TyqEc7z84i+0D7Z5eXxCXQuSNMULG4Dk2dOP
      F7CWF198SftBxKtXp2XnMOfw6wFZ7nj26Rxr8oS/vfiG9UBwMY5LX7gOWPMymt3HbDbmX6/I
      Yr46/hcNHy4nKVI5pK6z7kNsPR4/mt/lm6czXnz9mlBbrmY5UhiUH1KXhlTU+fjRwRybzHj5
      zzcEsmCUGCQ5urbOho6Zqi4fHcyb9WbJlFffnOCLnEniEC7Fq2+SjofsP3xCe3PeNXl0MeRi
      kjI+P6EW1LiaFmw2asQFPHnyGF/NtdvV+YCrWcbV4A31eo2LiaXdXOPi7A0Pf/172uG8tPLy
      vM9oVnA5+DdhGHAxtqz7MEkTHj79He1wPu7F4JRpZjk/e0297nM5cdSUQ0jHwePP2AzUzfr+
      49UL4jRlGheE9RpZElNb2yBJcz7/1SdL6/v18QuSNCuxYUCWxvR2d4hzydHeQuq5M7w6fkGS
      5sRxQb0RkCUJUbfLaf+c3zxbyNC1huPjr0jSgiTJCddC0iShE0WcnA357eefLWALjl9+RZzZ
      e/r9fiwJQaezhb/WoqFyZpnB04J2e4vRaHQLK+l0tgjWW9RFRrjRJJmNMMJnPVy+A0B5Ae3m
      Gp0oYjYZs9WJGI9GdDrRW1PQfp3W5jW2xIzGI5T2OXiwt4T1aiGtjQZRFDEdV9jRCD+o4926
      29QLQprr4RL26mLAm/4Fk8ly/MIPGmyuhUTRNuPxiKgTMRpdEQQBg8FwCbvR2qKmBdtRh1Fs
      6ax7DM/PydMxZ+fLfUU32x18VWET6Kwrcjy6+we06ss6rtmO8BVsdzqME8FWQ3A1Swl8VblS
      l7FaSaKtNtNM0QrBa6xTxBOyYrGM0aE9n/1eh053l8kkZme7RWI1G423XeSeH7Db2yLq7TCd
      JfQ6TWrrLWp3VJx5fp2d7TZRr8s0zuh2Nsmd4Ojo8A5syM52m+1ul2mSE7U3QCr82tvJjF5t
      jV7URD1//vz5W0/fNTnLaf+MwoBUNR4/OiQ1kmbo0Y56hEFtCXvSP8UYgfTq7EVNvEaLva01
      0HUa9fkPWqQz3pz2UZ7P5tY2gbREvV1G5+fkzrGxNr+uNE+mnJz10V6NZqeLLwxRb5fZ+IrC
      SdYa88ZXWTzh5GyA9issBds7+6SzMa1Ol5o/Z6p0Nua0P0D7Aa1OF01Bd++IDw4PaG6uL7UB
      T2cjTvtDPD9gK+oiXU5v7wBhC7Z7u0vY8/4JV9MMXyt2HxySJikfP/0UCkuv11kyyodnbxjF
      Ob6W7B0ckcQpRx/sE/h1vFuNtIZnrxklBl8J9g+PiOOMJ598RJwYdrrtJdthePaacVzgacH+
      wSFpknO438PoBjudzQWPkuN8MMD5GwiT8uGHDxnNco56TYyosRbO18w5x3DYRwYbUKQ8enTE
      ODZ4RczlJKbVas7HdY7hoI8Om9gi48MPDpkkhrqyXI5j2s2NhXEtw0Efv9HEFBmPjh4wTS2h
      hlq4vrS+zloGwz7BWntlA6zo/ab/k7vKV7Si/w2tBGBF7zWtBGBF7zWtBGBF7zWtBGBF7zWt
      BGBF7zX9B+rQKn+crFXpAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Conflict/Natural Disasters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country profiles (bubble chart)' width='192'>
      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
      VtTBWgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Deaths over time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Drug use disorders' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Deaths by Cause' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Natural Disasters' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aZBc2XXf+btvy32pzNoXoLA10A00gF7YzU0UKZoUZVIWtdNUjOkhQyMG
      Z2JiQp6RLYkKO8IM94TkoKQR54MlWtaYFkmPLFqUOLKbe7NJdrO72XsDjR0oALVmVlZub3/3
      zodEFVCoBVloLFVd7xdRUUDWyffuy7znrv9zrlBKKWJitinarbrQRvwoto1tN4vtLXMAKWXX
      tlEUxbax7aawvWUOEBOzFYkdIGZbEztAzLYmdoCYbU3sADHbmtgBYrY1sQPEbGtiB4jZ1hjd
      GHl2k7NnzzK67z7OvH6CciGFpwyK2SR+KBge6r/d5YyJuS2IbrRAMnC5OFXFbc5xea7N7t07
      0IViZuIc44ffSiljEkURQoiubiqlRNO663xi29j2dtp25QCN+TkmKzXGd+3FazcJvDaeMilk
      UvhhQKmnhyiK0HW9q4KFYYhhdNX5xLax7W217epK+VIf+VIfAMliASh0VYCYmM1OPAmO2dbE
      DhCzrYkdIGZbEztAzLYmdoCYbU3sADHbmtgBYrY1sQPEbGtiB4jZ1nS1E6yUIowiDF0jihSa
      BgqBJgRKqa61GTExm42uHMB3Wpw+cYLiyC6mLl+mJ2viK5OUJtEzPYwO9gJbJxdMbBvbLtKV
      A8goIjswSloLGR0dxW3XSUhFY6FGf7EfpdSG8gJJKTekHI1tY9vbZduVA2i6jvQcZCKH07YZ
      6C0RYDI6OoaUEZqmoZTqWg0a28a2m8W2KwdIpHPs2pUDoFy+/q9mV4WJidmMxLPXmG1N7AAx
      25rYAWK2NbEDxGxrYgeI2dbEDhCzbVFKxQ4Qs72JHSBmWxM7QMy2RakNqEF9P8AyDYJIol+j
      BgViNWjMlsTxg+7VoGdOnURkSniOQy6pESiDhAgxs72MDHb0EVtB/RfbxraLNG2vSzVoGJIq
      DaFFPkYqgaYLTAWteove4mCsBo1tt6Rto92lA2imia6a9A0O0nY8MpYgwCQ1NkYUxWrQ2HZr
      2tpu2KUaNJVlx44sAKlksvP7yt9MM1aDxmxNfM+LV4Fiti+e48QOELN9CRw/doCY7Yvnu7ED
      xGxf6nYQO0DM9kQphRP3ADHbmVCGsQPEbF/cMJ4Ex2xjpIr3AWK2Ka4fIgy5gdygYYiuafhh
      hKkLJAJ9gxKImJjNQtP2SSW7lEOHns25y7MktZCZmkM5n8CXOqYKSBT6GBkoo5Ta9Oq/2Da2
      XaRpe5iJLnsA3UxgCIVUgJSgG5hC4LYcUj360k26VYRuRD0a28a2t8O2abuYZpdiuCjwsawE
      PT1FMgWfXMokxCBhji0dR78V1H+xbWy7iOv5aIbqzgHMZJrR0TQAmUymq5vHxGxmQschNOJ9
      gJhtSuT6YESxA8RsTxzPw9DiHiBmm9J0fVJ6LIaL2aa4vkdCj3uAmG2KJwO0qMu0KDEx67Ha
      ertSiiiKun7/nba9Z/cAXtTlPkBMzI1YzQE260aYUoodO8qcPR0PgWK2KZoAEcWT4JjbwMzM
      zLL/nzlzhmq1usLO931efPFFHMdZ93rNZpPnnnuORqOx4j4nTpxYU+8TRREXLlxY8bpSoJAY
      ssudYKUUQRBgmga245EwdSI0DE0ACl2PR1IxV3nttdd46aWX0HUdXddptVqMjIxw9uxZ2u02
      jUaD0dFRHMfh4MGDfPvb3yaVSpFKpZifn2d8fJyZmRna7Tblcpm+vj4qlQpDQ0M8/vjjFItF
      BgYGePbZZymXy5w7d450Oo1t2xSLRRKJBL7vE4Yh58+fZ2pqiosXL/KzP/uzJJNJpFJIFWB2
      mxw39GwuTM6REiGulkQLbAKloUceqZ5BhvtLm3rMF9vefttrW2HTNDEMg1QqRbVaJZFIEAQB
      p06dIp/PMzQ0RBiG9PX18fLLL1MsFnEcB9u2EUJw6tQphBCUy2Usy1pypImJCebn58lmsxw8
      eJBz585RLBbRdR3btrFtmyiKSKVSXLp0iYGBAaIootVqLZV7UbUsVYChQKgutKVRGHD2/Hl0
      JZmbb1HqKyIU+O0GxcGdDPYWN5yzsduM0rHt1rDtdmXmdvLaa69x8ODBG9oFoWS6eYrm63/V
      ZXLcKCSbyVIqlSj0umSTxhU1qB6rQWPbNZdBu20QF22r1SrFYpF6vY5pmuRyuTVtr8XzPBKJ
      BIcOHeqyDAoNhSG0LtWgiRRDQ51soIlEovO7mzfeQZRSvHh6hocPjNztosR0gW3b/PjHPyaX
      y9FoNBgcHOSFF17gwx/+MN/73vc4evQozz//POVymWw2S6VSwXEcdu/ezcWLF5eGPZlMBtM0
      OXLkSNf3VkphqitnW9yuB7zTRFLx2vm5u12MmC6ZmZnh9ddf59SpU6TTaU6dOkWpVELTNPr6
      +iiXy1SrVU6ePMnJkye5dOkSiUSC06dP89prr1Gv1zEMg3q9TqvV2tjNlcK40jO8aZZvPD9k
      aq5+t4sR0yWjo6N86EMfWmrB77vvPhqNBoZh8MADD5BIJHj00Ucpl8ssLCyQyWQwDIMgCDh4
      8CCpVAohxIaGWosoBYsDuTeNA8w3HdKuRyQlenxk06bHNE2GhoaAq2P1dLoTdLX4e2SkM5wd
      HBxcel8ymdxwhb8exdV1nzdNTZmdbzGog+OFd7soMbeQjQTAb/DKwJvIARbqbQb0zrE3MXce
      TdOW/QghVry21s9atkIIvvCFL2Db9i297rOvHWey8kKn3Hf5c7tleA2bgq6x0HLvdlG2HUKI
      pc2qxZ/VXlvrZy1bwzB497vfzWOPPYZt27fsuq9fOE9t4RTwJnEApRRhyyGjCRqt9XUlMVuL
      PXv28PGPf5zHHnts46s9q+AHEUrzMeSbaAgURhJhexhC4NnxEOjNxj333MPHPvYx/vW//tf4
      vv+GrtVyfAyzowOCNRygWqnwwo+f5+5vbndH2w1IhCGGAK8dD4HejOzfv5+PfvSjPPbYY3je
      zTdyDdsjYYaYrLMRNnP5PLOzNRbXU5RSV27a+R34Hq4fEEURYXj3V13mFtoUrzxJGPcAb1qO
      HDnChz/8Yf7Nv/k3N90TtB0fw/AxrlT9VfcBAscmVSgueUfoOVycmmWsv4fnj51jsJQmkDoi
      dEiXhu66GrRSa1EyOqVVrt/VtTe7ujK2XZ3Dhw+jlOKxxx7jX/yLf7HuMb2rXbdlu1hGgFCd
      /YBVe4BSfwlDXhU9abpBFHhcmpwmcNqESkMIiMIQELdxrbY7mnWbtNbp0iLHu+vlibm9PPjg
      g3zwgx/kscce23BPEDgtNOPqRtqqPUAYBpw+c55H3nkUAKUkPcUeiqVedozvRkUBITqWsVwN
      erfkumHLQRMCqRQJKXGDiEzSuqNliG3vrO3DDz8MwO///u/z27/926v2BKtdV/ouSlOgQCBW
      9gBKKeoLDr2l9NIk2LCS9Pf3YxkapmliJdOkkwkMw8Cy1q9otxupFNE1S59poWjab2ylIGZr
      8PDDD/O+972PP/iDPyAIgq7e43s+uhYh1poEu80al6emuDSzNZSVQRChO1cnvllNxJth24i3
      ve1tvOMd7+Czn/1sV0E5LScgZVx1lhUOkMqX6C+XuWfv7i2xSdCwPZLXPHhOEzRiB9hW/ORP
      /iSPPPIIf/iHf3hDJwhCD0us4wAAQtPWnV1vJuZqbUrm1ccwNIEb7wVsO97znvdw+PBhPve5
      z627ouSGIVp0del+VQfYMT6Ormu8MdHpnWF+oU1ev8YBIN4N3qa8//3v59577+VP/uRP1nQC
      Xzro1/QSa45y5ufmtsROsN2wSWhXXVUIQWTHPcB25UZOEEgXQ60TD9CuzfLsC68wOTXDZl9N
      V0oRtewVr0dO3ANsZ97//vezd+9e/uIv/gLXvdoYekFIiLukA4JVHCBwWth+xD337qe7XAF3
      j0gqZGOlAyjbJepyZzHmzckHP/hB3vGOd/Av/+W/XNosa7Q9LNPBuqbar3CA4vBuPvS+dzO+
      c2zTrwI5XoDpr1z/taSKI8NilgR0n/nMZ/B9n5bjkzAi9Gtmtyt7ANfmiSeeYHJyms3ehlYb
      DoVVvDSNiiPDYoDlArr5ehvLXN4wrpRCCEin80jXJQRMIHDbTFbqlDIWEzMLlLImnjIpZlP4
      YUR/X++deZrrqMy3KBorPSCnC+ptl+HelYmVYrYfDz74IEopPvtv/09+/pdHl/1thQMYlkXo
      2QTJAosiBzOZwTIaJDMZshmfiAidkNPHXmLXkbcjpURK2bUITUrZtYx6Pdv6QosBcTU3/aL6
      Ly2g0rDXvcetKkNsuzVsjxw5woc+8NN85cv/F//7rz2KYawhhxbCoNiT4KnvH+Md7347OuC1
      G8zMzODYNoHUyCU1fGGy974jeHYDLdu7oRR7YRhiGN1lZFnPNmy7y8ROi+InSygC11/3Hreq
      DLHt1rEdGhrm8FsP8R++/AM+8dF3Yhj66mrQ0dFdHHw4w+JecCKT5+iRo13d9E6hlCJqrlwB
      Aq44bTwHiFmO9H0OHRxgTO7hP3zph3z8o+9YfaFndvYiJ14+RXf6urtDEEnEGuv9Qoh4LyBm
      BQ03JKEFHDk4ygOHx/iPf/XUyh7Arc8yWfEZ2z/K3RU6r0/b8bGCENbQLEWxHCLmOoLAxSAA
      NB46vBMlV1kGrVyaQlkWfnWe9l0oZLfMLbSXwiBXQzoeMo4Mi7mGQHroUWfBRAjBw0d3ruwB
      Rg8eYXTFWzcf1Vqb/nUcwJIRjhuQSW3mfizmTtIO2stkEEKIrZsc127YJLW19aoZoOn4pJPr
      B013y522faMJYGNW4oVtrq8NW9YBgjVWgBbJ6IJ6y6WcW/0oj8WzorrhTtt2u8wX0z1eEKKE
      g3ndqH+zy31WRUqFvEEKxJwmaLTjNIkxHVpOgGUEXB/lsiUdIAgjdHf9wPdOZNgbWwlyXXdZ
      C32ttHbx/+tGH133/pi7R9P2SBsrI1y2ZF9bb3ukooj1/NcA/Bsshb700ktMTk4yMjJCGIb0
      9/czNzfH6OgoExMT2LbNnj17aDabWJbFq6++yoEDB8hms8zMzFCpVMjlcjz00EP86Ec/olgs
      UiqVkFJSq9WYn59n7969NBoNdF0niiIsyyKZTDI8PHxrP5SYdWk5Pilz5c7WlnSAuVprWRzw
      agghCG7gAEEQoJRidnaWWq3G2bNn2bVrF9/5zncYHBwkCAKmpqY4efIk/f395HI5nnnmGXbs
      2EGz2cR1XZLJJPV6nXa7zSOPPMJ3v/tddF2nVCphGAbHjx/HNE1arRa5XI6JiQl27doVO8Ad
      xnY8Eka4lA5lka4cIHDbXJ6rU0zpTNXaFFMa7hU1aBDKO64GrS202bHOEugi8ga7wePj4yil
      GBkZoVKpUCwWyWazpFIpnnrqKT7wgQ8QhiG5XA7DMFBKMTo6SjKZZH5+nmKxSCqVIpvNcvTo
      Uc6fP49lWTz00ENMTEzQ39+PYRgsLCyQz+fRdZ3R0dG7nktpOxK6LTTdAJYL6bo6KBtganqK
      KIxAKaQAoRQzE2fZdeTt9KQNoii6Ywdlf/t7x7h3trLC9voD014IBR/4lXd0dZ9r8X0f13XJ
      5/Mbfq9t20tnXN0sq302mykr21a0/eGPnqfufoOd+vJGsaseoKMGnWWwv5+FtksxpeNhsvfg
      UXznzqpBlVIo2+2qklgywg0iUtbKe613umAikVg6D3kt27Xen06nN3xA9PUsnm5yLZtRXbmV
      bAM/xDAiNLG83nR1pY4atHMQ8eANbG83UilU26WbnC1pwPEisqmVewFvpNU5ffo0Tz31FL/2
      a7+2MvfkbWrNYt4YjuuRzgUglzfSW24S7PkRmutD6sZFz2qd3eCBUnbF326moiqleOKJJ/ju
      d7/Lb/7mb67aEsUOsDlxAofCapuOd6Esb4ha06HQpUogqwvqzVuzGRZFEV/84hdptVr87u/+
      7pbJnBfTwY2Wp0NZZMs1P7PzTYo3WAJdxBQC5xakSbRtmz/4gz+gXC7zG7/xG3Hl34I4fhNj
      lXHzlusB6gtt+tYRwV2LId54msTp6Wn++I//mI985CMcuTIPitl6BJG9dC7YtWw5BwibTter
      LJoQb+jMsJdffpkvfelLfOpTn2JsbOymrxNzd/GDCCW9FTog2GIOoK47DKMbbrQZttZ9Hn/8
      cZ5//nl+7/d+L9642uK0HJ+MtXo92FIOEEnViQPeQM7GxTPDuu01giDgz//8z0mlUvzzf/7P
      0XV9U5yEGXPztByftLm6aHFLOYDt+uieD+nuJ6F6EOKHEQnzxo/aaDT4oz/6I975znfynve8
      Jw5KeZPQtD0SRrBCBwRbzAEqCzYlY2OVMg00bZ9EYf1HvXjxIp/73Of4+Mc/zv79+99AKWM2
      G7brkTLeBD1Apdai19hYzuqMpmi0XXoLq+tzlFI8++yz/O3f/i2/9Vu/RblcvhVFjdlEBK6N
      rmuwSrbbDTlAdXaS6ZpNT9q4JjeoZKD/zqhB23WbkS6XQBfJ6dqah+ZJKfnrv/5rJicn+fSn
      P00ymbwVxYzZZIRuC7VGu7khB3BdF9dxiDJFDCLOHH/5juYGDZvtdSOwVjsZ3ATazZV5Qh3H
      4fOf/zyDg4N86lOfQgixZpk2W57L2HZjtqHromkRUr5BKUQqmSKVlJhC4QuTfXdQDSqVImqv
      rgJdZDVtjakUoRssu9/8/Dyf/exn+eAHP8jb3va221Le2Hbz2LpBQD4p0VZZPtyQA5T6hyj1
      b+Qdt44wlGiOB9bG1BvadZFhp0+f5k//9E/55Cc/ye7du291MWM2IXbQppxcfXSyZSbBTefG
      ccBrIW13Scn5ne98h09/+tNvOGglZusQhS1MJVaV0HcdEXbDm0TRbR0CvX5hjvD7L9Njrn2P
      teTFz4ewEF2k2Wzy67/+65imuam66DezbRRF687bYP3gpFthu9BYIKn7CMBtTzF95mtLNltG
      DVqrtch3EQd8PY7n8rWv/iU9PSU++clPxkrObYhlWuhmCt1Mo+nLg6O2zBDIbdjoG9yZnVuY
      59//t6/wwEPv4u3v+qk4+GQb0hngrD3I2TIOsFER3PGJs/zN97/Jx3/mF4kyBRptj1I+dZtK
      9+bHDyLOTdXYv6Pvpq/xyiuvEEURIyMjJJNJms0m09PTpFIpRkdHaTabnbMdoohCoYCUkgsX
      LhAEAXv37sXzPJLJJNPT07RaLWZnZ3nrW99KEASYprnUu1erVWzbplAokM3maDTm6e/tWXUO
      sCUcoJtUiIsopXjipWd5+dxJ/rdf/CekEkmaoaR+CwJjtitKKb719Ou0qzXuGeu9aY3UsWPH
      GBoawrZtZmdn8X1/KeXMSy+9RLFYREpJMpmk1Wrxzne+k7m5OQqFApcuXeK5554jk8lw+PBh
      oigiCAKefvppNE0jDEOy2SxhGFKr1YiiiCiKSKcz2HaTX/qFf7RqmbaEA3hBCI53wzjgSEq+
      /J2/J2kl+F9+7qNLQx5LE9TiPKE3zbHzczTPTmBGEtcPSSVubh519OhRoiii0WgwPj6O7/to
      mkZvby89PT2USqWlSbNSip6eHkZGRmi3Oxug+/bto1QqsXPnTl555RXuuecegKUsfLquk8vl
      lrLvWZYFQiMM1k6kvCUcYKHl3jAOuGm3+fzf/xceOXCYtx88uqyVMsWN0yTGrE6t6fCtJ1/h
      7WbAdOsSl2YW2HeTw6C1RIZKKcbHx1f924EDB1bYCiF4+OGHl70+OztLf3//CtsgkhDaa/Za
      W2JWWKm11o0DnqzO8sdf+QI/+7b38I5DD6x4WE0I/PjQvA0TRpK/++FJ9mqKZjRPYleWmUvT
      d7tYq3J95V9CKVhnyLYleoD6gs34GiK4c1OX+H+f+O/8zz/3UQqZlelPFokPzds4P3z1IvWJ
      SQ4VBDPlJFpPxPyZGZQ61PU8QAhxw9W3btLD/OAHPyCdTnPkyJENpZ2Zm6uggjOk9M5KUOAt
      LLPZkAPUq7PMNX3SeoArTYq5Tm7Qgf6bXxnohrC5dhc23NvPb/7SxzANc90Nl/jQvI1xdrLG
      M8cu8ZaMQcOvoI2UkFab1sIUbccnm1794JHr6aaydqMje/jhh/lP/+k/8fWvf51PfOITDAwM
      dHXdcxcuYkXfpXAr1KDV6jxeAGYhg6lJzh5/5Y6oQf1Ga83KberGkt1qatAl/AjX8zF07abK
      sJ1sW47P48+eJt+qUyolmMmXUUkbBOR7fE5frHBoz/oV8FaX17IsPv7xj3P+/Hn+7M/+jKGh
      IT7ykY8sS2G52nUd2yaTDJBydQ/YkAP0D/RzcbpGQgNfWew79AC+20TLlm+bGtTzA4Tjd9WS
      rNeVpolwA0kxYW24DNvJNpKSrz93jlbL5T2FJAt+FTW8C023kUpg9llUJisY+0fuSnnHx8f5
      3d/9XZ555hn+1b/6V3zoQx/iXe9616ojhDAMCSIHU+grcoIusqFJcLZQ4t79exgcHmPHyCCF
      QoG+3tsbQeX6YScO+A2SFp3Y0Jj1eeb4JFPVFgPtBdJJjXBgGGkuXJ1Ili1a05N39QhaIQSP
      Pvoon/nMZ5iZmeF3fud3uHDhwqq2nt9eNSHWIpt+FWi+btOjv/Fi5nRYaMabYetxaa7Bs69f
      JrAdjvbmWWhWoX8YEp0To6WKIJ8gcqc3RWOSSCT4lV/5Ff7ZP/tnfPnLX+Zzn/scjUZjmY0M
      1j/tetM7QKXWorDBQPjVSGoadrwbvCaOF/D4M6cBGPcamAkTOTBIZDYQmiKMPBbmTiM0QaYM
      Zy/O3eUSX6W3t5ff+q3f4r3vfS+f+cxn+NrXvkYUdc4DC8L1M4lv+mVQp+mQuAUiNkOAu0Ud
      YHGC3+2k8mZsaw2bR/YPd7Q6+hCRiij0lAm1Jhg5wsDFl/tI5wvwUIhGckMS+NuNEIJ7772X
      xx57jMcff5xPf/rT/MIv/hIiWr+n2vQOoG5RpdWFIHS2pgPA7T2oOwgj0gmDdH8OXUkMXevk
      T9B1lCiAUCgtQpQUytQRJYEMOo65WRxgEV3X+Yf/8B/yEz/xE/zp5/89Lz33dcZ+5RDlntX3
      iDa9A+yLgnXErBsjdN74ZPrNhrziAEIIlJSYukYkJZgWigjBFYeSEGkKTUrQdVDdL3vfDXK5
      HL/8jz9GITHJX331WYaHivzMew9hXpdWZ9PPAQIVocKV57veDG/GzbD5+XlarRYTExNd2b/4
      4ou88MILS6fUe36EUp1KbqJQCNA0Tpx4HZAgQEkJKJQAdSWzgqYLwmj9SK+7TdPx2TWS5X/6
      J+9ix0iJP/mzb/Pjly8sc9xN3wPM97sULrskcpk3fjEvIIrklSRJbw5M0+S5554jnU7z1FNP
      kUwmyWQy+L6/NDyJoojp6Wl+9Vd/lVwuh67rfPGLX+TQ/Yd56qmn2Dm+i3qtho5CaBpWKoVC
      MVeZJpNJc+TQIZQAQ5goGQIKtEXH2Ly0HY+U6aNpBkcPjXHf/iG+8d1j/N/Pfpdf/NADDPbn
      Nr8D+PlZGoZBb5RCvMGKm5SSthuQz3S3jb8VyGaz1Ot19u3bx+TkJJZlcejQIV599VXa7Taa
      ppHL5ZZ0+IlEAk3T2LtvH612m3K5F0M3kFFIubeXcm8vs5UqmWyK+fkKhw8fQkiBMgSa0AiF
      AikRmk675ZFIJpd21zcbvmuTvCaM1jINPvi+w9TqNl/5/54nkwg3vwOM6gGvj3oUL6Qws28s
      oistFE3be1M5gBCCn/u5nwNgZKSzO6uUolqtkkgk2Lt376rv6+sfwA8ijh59kMsTFygX8tx/
      6CDKNAGBVAEnTrxOJp1BRQpN6J3kskKDqNMDLDTbhOgM9278ONk7QeS2kJrO9SGRPYU0/+Mv
      H8Z2U5vfAUqJHKJ0hvbFAgWZQLyBJdHFNIkjfZvzC7uVHDx4cM2/dVZ+JEIIpFLs3rEDoWlE
      SiEQnZmABgfu3Y/yI5QG+pXpoqbpyDBAoCiYkpMXZjavA3gOQl85UZehw0BfP/nC4MYcIPJt
      nnnxBAM9KTxlkk9oSDPD2PDty5YlhGBHUjE56JCZNDCzN5/PJ6lBdYOxxZuFjYQhrmd74cIF
      rHSRUHUqfy7wMXNpPMdG5YsQKiLZBt0j8FwSTQjSBmkze0VbD612BZEy8KVP4/IsPLTvVjzi
      LccPXMyE5Nq1HiUj8mmdfGEQUBtzgPPnzuO7NsoskUIyOzPNyN5Dt10NOpgscKY8hX05RW6D
      uUGvxQDslkMYhptWibkWSqlbcvzqzFyFx/7k3/K+n/8YerPN+zMhrfIg0+0m6v77UUrRjl6A
      ZJPmy+fIzbok7ztKr9W/FI312uwz6KpKdv99tKrBMpXtzTzb7bL1fQfNAqmu1glDNekb6Dxn
      02ltzAH27L+PoTGbyHfwMRkcHCKKoqUzdG9LYixNQ9MNRtIB9cGQzKyHkVl9LnCjwAqBIvI6
      eUI3oxLzTtjKzBC7DxzhW1/9S377J99DavQ+apcmiPYfxNA0fK+JSNr4QYvcpM58j8f9iT40
      oS19vqXCMAvnJpBaiJV2qNRtRvuLd/3ZrkdFNkJoSzo+6S8wNr4fXTdQSjE/a298HyCdTpMr
      likX80tLbneCHeke6uUp3Cvr1zeDQLwp9wK6pe36vHR6hj33Pcj+fA9PnngRz/FpJpLohRwA
      IRWEpnCrdTIRWPk+dLG8YRtMDhOEJm6zQm5AcGFic4ZJEjosToBlaDM8OIJpLQ6hFQszzc2/
      EbaIpZv0Zm0avRGRffOShps5NO/NwjPHLqMAs1HnN977TrLFXv76q18k2rGrMyGWkkirIFWE
      dcGnlWxTyq88HVMXBslCEaZryN4UlYsXN92ucL3lIrzZKxt5IcVsgkzuauRi02kTXdoCO8HX
      siuZZb48jadufgNGOt6qeeLf7NTbLq+dnyNwPR6mRXJkNz919GHmPZcfvfA0AGHQBquN69TI
      1dI0Mx69icFVr5fqHUPNLRBmBPV6FS+4Nbv1t4rnfvw8BxIXQYEpbPoG9ixbHGVrwTMAABpv
      SURBVJibscloia3lAGkzRTbfoJ1XNx3knlCKtrv9NEFPvXqJMJLsbswxtHsPfqtNq1blpz/1
      f3Dx3GleeuaHS8OfYKpJTg8w0/0Y2uo5gIZSYwShgefMk+8JmJiu3eEnWpvzUzV6p76OLXIQ
      1hkZ3b+s8islaV1qIdOFreUAQgh2JSwq/TWCm2zFUyha20wUV23YnLxUJbGwwKHhElJP0Ji6
      QPPAYax8ll/6p5/khWd+wOvHv08oPbKXdBpWjVzpathj6AdUp2aWhjqWlsDK9sFMlUyvYOrS
      1N16vGVIpTj23JP0SIc2KYYHxzDN5UdftewW2gy4Pbmt5QAAPYkcemGOdkYR3URLntPEmmeG
      vVl56rVLhI7Lw5ZPoneYhYunqO28B6u3BwDDMPjlf/oJfvDNJzjz/CsU7AQLCUl/cmjpGrVm
      jfqQQ3CNpDzTOwazTcKyQXPy0k3NA1qOz/EzN/fe1Xju2AR7G09wVuylNCZIZ1eG7M7OOmhG
      EqVtsTkAdHqBnQlBtb9FdBMq0ZQmaG0jB5hdaHNyosruVpWhPXuoT05QKw9ijQ0vGxYIs84/
      /l9/kW9+6QfU2pNYmeGl4U/o+bTyDlavTsWrLVXWgewYoRvh0aTlzuP6GztQXErF09/6KvYT
      f8jr5994D2K7AZVXv0lEL7Jnmh29Iys2BZWStCbqRLnOsu2WcwCAoWSRsDCJnQTpBxt6r6kJ
      vDewirSVUErxw1cukqjNc3jnAO16gxk9gblv37KKsbj6oxkBH3v3z/Klb36TSF3dcZ9vLaD3
      d+y9Xh/f7uymW1qCTG6YaL5Cpifk/GR1Q+V7+tnn6Km8jpV9Gxef+AK15hvbpX/yuWMciI5z
      3ihwaDy/6o54026hz2v4uc5e0pZ0AE3TGEqE1AZ8/GBjwyAd8LeJA0xVW5w8M8Xb8wplZphr
      17EO3rdCT7W4+uNUauwyS3zo59/Kf/3P/41Wq0XoerQKDpreqUxGUaPq15d6gWRpDONyg0Sv
      wcULl7su25kLk4Qvf41E5iiF3gGG9BxPfuPvbjrGYLLSRDvz91TYQ/9YhVyqsKpddaaFMPJL
      ccJb0gEAdqYKNAuXCEwDGXTf9QohCO03/yRYKcWTL13ggF+jOLyDmbnLRIeOolsrV3VCKigR
      YkwqtMQC+aF7+B/+8Uf5d5//cybnZzD6r1YTIQR+v4fb6mRc7skPI+0AN+OxMDXZ1Vh+oelw
      +jtfIJ8+QDBicnZ8AS2/m6HmWb71wxc2PB9QSvH9Hz7NTsNlPtPknsHBVVt/pSSti22CwlXn
      2LIOYOomfWmXen9A6G1sSVRt4djgbrk426By6iyHdg4zOz1JcOAw5ioHAyqliLQKnlOjb76A
      rbdIFwYZHh7iQz/9fv6fr/4lUbB8mKnnNRbkAkopElqSdKaf0K4QqdoNV9iCMOLpb/wX+ijB
      QJG5UY8wCQu7QxKp+9BOfoNXzmxsZ/mFU1MMV7/HJWOMe3YpTGN1uXuz3YK6QZi82ghsyAGa
      tQrPPv8yZ08d5/jJ01y6cJaJydkNFfZWsiuRoVqYwk+YyA1MiCPHp5tGxgtCvv2jE/zVf3yc
      H7xwmuAWhWbebhTwnR+9ztv7EtRbNu0dOzGKq0uWF4c/3nSbktSxTUlPuiN8Kw4UecfPvY2/
      +nf/FXnN0KTTC4S4rU7OnVTPDozpGrl+OH+5sm7ZnnrqKcq1ObSeISp7vKUa2CpGOKMa/dld
      HPveV6nW187pfy2uH3L8mW9RtHrRey8zVFg7ZePcXAth5pelSdlYPIAQjO/cgd2qk5KSuZlp
      hvf23XY1KGsoPFN6gnxmnlYxwpzyMTKpG55ICGBGkrbjkV1DNayA187O8Nr3X+SgKRnvH6T+
      49f4yvPH2Pv2oxzeO7Sm5LjbZ6vUbU5MVNgzUmKgJ7teBu8NXRfg1MUK5bnL6H19zGSSpAaH
      lmKAryekQqgc0jM6YbIKZh86Bp7t0u5x2Vvehd2y+crn/5YPf+JDS+8TGZifrTEUpUkXhqlf
      fBZtwGN6YoJ7dw2sWt7jpyfQT3wfPbef6n0Roa5ALpZLUhuR9DeS3BfpfO2/fYNf/fmfuaHK
      9JvPvM7+6DSXs2UeHO1Z9pzXqoOVkjgX2vj5vmV1ZGPxAFFErdZgqK/QUYMODRNF4W1Xg7KO
      wnOPZfFycYpcbRRTgdZFeF5aKGwvpJhfKeSbmW/xnSdfoTx3ibcOjdPw57lQPcHgyB4eDQVT
      33qSr77Qw5F3Pcq+0ZVrzOs9WyQlx8/P8frxC1hzVYaU4KUXdZoJi/RADyOjvewbK5NfJfPy
      jT4z1w+ZqjaZnKsz/errHOzv4wKC7K59yya9UkaEgU2k6kSihkzM4zfnGWv04uZOYfaOdY4W
      9WqYOzSEEBx9+/24bYdv/NV3+MBH/sGS84eDCnemTTqfw0gN4Io6ztwMQtPQYFl5Z2stZp76
      G4rWOI1DOlFKoXE1UfGiire6D0ov9rGvfYm//+Exfv7dR5Y1Ntd+DrO1No1jX6cvv4P+sSmy
      ydEVq1uL16232vhuHpnW0W62ByiW+ymu+M7vbnhhMZHDKixgFwTGlI1VyN4weCSndbQxw31X
      J0OeH/LtZ09Se+04DwyWkAODnJ87STCSItpV5NTJ8/RHKYbuf4CByjQX/vprHB/fwcPvfJjh
      cm7d+y20XF44foHKqYsMtdvsN2yilImWzzDabiB8H3FxEv9shicxCEpFssMlRkd62T3cg3VN
      Ko+Ojt3n4myduUqD9kwVv1Ihai9QNBV96QSH8gNcDj0y9z+IAgLfRsoFQlFD6XVI+QjRCW5B
      SrzLDjkRMWlAKTOI13ZwekPMaz7HR//BW5g4fWnZc+kZwYKok5IZ8qUdeNWX8LV+FpouhYy1
      ZOf6Ic9942/ol0Wcwwm8vOyEV66CSkDjgKDw8iDq7A95frifh/YPr7RTisef/DGHsjCXm+Yd
      fatPfBeZm7XRjRTyOpNNHxJ5I4QQ7DQUF4oV0mocv1aBICApTIxUGmGs7JXSmqB6ZTNMSsVL
      p6d55ofPczQLu8aGqc5dwi9FRG/NomUAFaC/JcP0CUnr1I8ZHtrF3gcfJTx/ipe/8J955fAR
      Hn3kforZq1vukZScuTzP68dOI85fZpQ2gwkTbahEsmcvhpEi9APMXqszEZU+7aDCjlYD2bqM
      OHWW2VckJ6IC1lAf6XIWe66JV5tHuvMMpQT9qQxGJgM7e0hau9E0C7fV5ExlGnXvCFF0Gqnq
      iIQDWqfCX19FgqBFX6VIlK4ijEEMkWDOn8boWfk5j+1ZubHkD0jaUy1SPaNkXn0abdTjzMUZ
      HjzQUZEqpXjiie/Tt1DHvXcYu1+74XAvKIC9S2P3+TJPPfltRvo+zGBpeWKrY+fnyM4+R7WQ
      456dCl1f+9wyqSTNCRuZ613xty3vAACDqSKnC7O4jWF69h1AaBp+s4a9ME9kL2CGAsvMoiVM
      hBAYmsBru0xWmvz3J1+i7Ezzk8NDuNV5qs452g+mUAXr6helQDMVqYOCRm+J+ssXGFmYYXDn
      fRwa3Yl95mW+/9qLZN7yVu67Z5xT5yepvvoahdose5JJrP4+UqV9iGSWKAhoVaaptqbxiy4Z
      O0NPdgeZnjKF5AgkR6C3M2YtRh6D3iyyXcWenmIgk8LYWyJp3YPQzKXKKCNJc6HK5eZl6uWQ
      5IMGZuosapUKfz12tcYOZwSvOImVH8drO/j9PsYa6cSvx0gLFrQ6I9oIJAaRiQaVyUtwxQFe
      fO0UibPPY+/YgTt+48q/VK4RgajrPCRC/svjT/Hrv/geElanuvphxBM/eJpHsgWc/ssM5Has
      e61Wu4nmJYnSK28u1C0SYWwkT+RG5gDu1N9BMH9Du7PtKhejfhKzkG6nSAVZEukCiXQBiPDb
      FYJ6DcPxSZDjq1gkjHkeHRjAaIQ0/Bns/Slkv7ai1iyLNFPgOxqVFyMG55uMjeyk2DeCrM9h
      n3yRC22XsYRGsjyCObQTkS+hlMJp1qnPXmTKayDvSZAYMwmVh6kl0SptrEmDclAiVx7FTCZX
      PN9q0W5REDBfnWEqmqE9rJEZ1JDKQ/cXMIVAyQhUhIZCR6EphYYiCj08x8VvKYKZMgfdXiZz
      p8mPv5dKY55oX7RqRV0r4k66itKlAtKfZJoThLX7+Ue/8GHmam1e/Nu/pFAs0X44jVjjK1/r
      uiJUpF/wadk+84NH+MhPHSKKIr774gTBsW+i5Zs8cihNylo9TnzxuudPXaQ+WSJIr4wkfFP0
      AABjyTynnXnCPYN4ms5CZGPVFtCqknRDkPRyGOk+9L4svmjxE0GbhD9Ee+Yytb0mwUimu0Vh
      AVZaMvRWwcyZHuqvT7OjOsPg+L1kH3kf97WaiGwOEISeT/3yOeYrs0wREt2bpjSWRXpzML1A
      MeqlaV7GzeeQR/q47DXRL/6Y7GSOvvQwyXxpxa6tUorAdZmbn2QuXSPaZWAVDZJBi4RdZVyD
      /kQOXdOvZH/wsF2Pdj2kVoPLDYtmO4nm9KCLBONWDj9/GYwhIie80vpvLN+nlhQ0rAa9qTFS
      p5+hlmwwWWny3Lf+O4PJLPbRtSv/eihD4N5r0vMKzE68xNPHetg7XOTEK8/xQCZJbqxC0lz/
      fAopI+wpnyC1ehjtlu8BoiigYdu0KiHN+TbzeoUo7aOSecj0EZoJpJlE0xJk6jrJOTBrBnqg
      Ye8Ae7eBusHK0VotlFLQqunUXoLdzQV6h0co9o3gNOu0Zi8y23KYsSzUfouBMUngzWFWZunX
      9pNK7rpygKHA96epyJPYWYGZH0EXJlQ90jOCnrBEvjiGZhh47RaV9iVqRRs1YqJZ4LtVCm6V
      PVaCnkQO23VoVDzmajDXVLhtEy1IY4kUOdOgbOrkMdGsDELTCRyXWuF5gvxR6rpE7pFrDlPW
      i7mWvqJ0MY8/8V3merPMnx1gX9LFeVsfIr9+vbhRLLc2HVA8p3iyaWEVBzjoniEsn+Xt+0fQ
      tLWvLaWk3qpz/jlJlF39pPgt5wBSSRzPpl7zqc8G2M0IAkVKaOiaQmoSDQ0pImxVQc9FmAkB
      VhZP1/F0QWgmCXWTyEoiDQvMJLqeRNetVY/SudEXFPmCC8cteicchmWDeSPLVDKBthuGxgIC
      bw6jcpF+uZd09j7ElRb22usqpZBRk3n/GM2kjSoOYplZpKfQp3zMloXXFyL6TZRQBO1p+oM6
      O4wEKhDMTUfMzXk0PBPPNBkkZCBKkqQHgzRqMaeSpqEZOuidJU6nPUWteJ6o8Baqg03M/NrP
      ecOkAxchW5lnyrjA4MUdtB7Ko/rNrvY41s14oRTWyTZGNcW5ZsRgscqB+xz6MqUbXvfCqYvU
      5wYJVzncW0bR1nAAz56k0XSpVCStmou0LbIhpAydTGSSCc1OQicpEZrANgL8dBOREUQiQSRN
      Wv4snmhgpX2sRBahJRBXFoQjFB4KT1MEuk6oG4SGSaSbSCuFMNMYZhpDs9ZcalMKKlMGM+eT
      FIc8Bsd8Am8WY/osfWIPmdwRxDXjABlFRH6AZuhour5sqKOkT8M5wYI+RdBTInFlZ1apiKg5
      Qcmeo+Blqc/rONM+YWgQGRqJfC/J7ACpRJJmq47nXiaRs8kXJX1JEyNKIR2BtHWUp2OJLO3E
      LBU3S73Uj9yj1q2sN6qoMlDkX5fUG08iDzyEUcp1Nent5phUGSmSLznkwzLuwNM8MLrjhsvd
      YRhw4gdTOKnRZa2/lBLptxgcuskewG4u4GOSTnSOJk0mN3ZYwkYc4KWn/4aF0xdJezoFAdnI
      IKFYdR35+g9SoQi0CC9tY5Z0jGwKGaZo+vO07Sqe4yEDjxAFukAlLKQQmIaGoevouo5u6EQG
      eJqHp3tEhk6kWwR6EpnIQyKPbiQx9AQandTivltBmz5Bf7CTTPFhpNSIHI/A9nAilxZNQq2J
      xEMpDSl1NGlgKBNLWFgkMEUC0zKI5BQLxgRhLkKbbZFpZjHmNGQkSVkpwoEhrOIgVi4PdIKE
      ZOhjpNJololqOQRzc7TsOcxcg8xYhsGCIGMlCcKQylyd2aldNA4nMDLrV6huKqq4rMgef4bL
      bxkmke5Z2pUV16YnXFbj1JV8Q1rnHDKhXUll0vnREEv/xg1xzpzl3XvzJMyVCwXXU6nNc+lF
      QZgtLJU/8BoMDArGd+UxTP1mHEBx/vx5pFQ0a1UGd+1noJS/bQ6w8NdfIapWb7icB+t/QQqF
      ROIZdbRsiNWXwUinEJgIW0IzQLZCVCDwnAjPjfA8SahpRJaFMgx8XRAYAZEVEOgOSrRQ0iOw
      AoKUREsKhBAkakUs7X486RAGVVToYiYl6ZQkoysykU5SmZ0ddD8i8kPCICCMOtmrvSgikgLp
      GQRBxzlAYGgBUk/i9/RhJnsRSRNfNnFch4b0kLqLlnBASFRoYXhZcnqadCpF0upB2C5qbppW
      5KDSLZK7MoQLknp+HO0e/Y0PVQAZKpLfPYOnnUMzNJSmIQhRQqKJTjpGtM4hHLoAhIEuBBKI
      EEipUEAESKER6VeGUEIHoVEyDQYKZTQTdF2h6QJd0zo/QkPTtM4wVmicOzlHo9ZHpAs8p0lv
      X8SuvQUs01h61ptaBYp8Fx+TYrGA6zjA7c0N2XVSwChCOg4qiogiRSg0PEvgp3W8lEaQNvAL
      /fj5JGHKwLADjLaDcDyMwMOQHmbokdQVRgESCRNLKYTyQAlUFKFCCW6ElAopNQLNINRM/GYC
      R7fwlU5GLGAYz1HGIqlSGIaOcgWipaOFOiIUGLLzG6mhS4GmDDSShEqhC41ICAIUImHhmyaR
      YVFXCfyEQlkuInEG3QwxNEgXfPqMCP3Kh6WkQoiAULWp+RbzrkXgTmBEWYx8jh6RxYgGyL/m
      YVsRC/d1vz5/IzRD4O0ZoP/Hp5AJgZAKFWkIYSDRQXUqsqDzf6V0pEqiKYUuJUJK9Cjq/JYS
      qWkIqRBKAYIIyaw229nJ1jSkUGBBZAik2Vk5Mo0Qw1SEUR5X2JRyEfffnyWRNFYMm25qCKSU
      RCmx9KEJIW5bD/DK3/9nqifPINHQRee+mpBIBRoSJa7pYpVJkDJxUhFeUiITCrV4RqwyMDQD
      TVgYmgHKQCKR+IQyJFIREoVUEUqFaI7AcgwSto7pS6QWocQVodXiJ3blA9C48pJgqTvX6ATf
      CDpdu9A6gzZNaQi40uVDoEOgS5QeInVJpEukFqBEhNIilKbQtM7z5RIeCS1EEyzpWYQQCJZ/
      F0h19VjTK82HQoKCQGnUvSSeYxIEBion0Ue0pZNgBBKU6pQROhVPyU7K3CupERevqzpNM2rx
      +elUUiUheyJC9zuvRlfKIBY/sivfGaJzv1BZIEw0pRFpBkKYgE6EgeSKHkxpnT0MZaAknXqg
      JBIFUYSmFIKgUzeJiIRA130Gd1qkUjpCFyyVVtOWGtVbMgmWUi6lSOzWvlvbKIo6lQW4Ps31
      VRbVf/Ia27WbtI4ERi1Ngm9YXiXXPGh5he0Gnk1dUwax5rOBElcn+OJG35a4UoZuy7uRZ7tt
      tuqa7201Fp2YK59Dt5/vjb+LW7IRtniTbr94IcRtsd1I5YttY1u4hfsAMTFbkTsjhVCKM6++
      Snl8kNOnp0kZ4HoeZjqLUnDk4IHrbF+jtKOfM2enMTUQSKx0Bs8LOXLo3mtsJadfPUZ5rI+z
      52Yw9c77+4cGcAON8ZH+ZbanXj1GebSPc+dnMHUBSlHu72N2bp4HDh9cYVsa6eX8hVlM44pt
      by9Ts1UePnr/MtuTrx6nPFziwsQchiFAwejoMGcmpnnL0WuvG3Hi1dcpD/UwcXEO09RRUmFa
      BplcDztGBlfaDhaZuFS5YguplEUqW2R0qH+Z7euvnqA8UODS5QqGZaCkoqeYZ2quxiMPHllm
      e/y1E5T78lyerF6xBUOTRMLi/vv2X7WVIcePnaTcm+Py1Hzn8OxIoROhJTLce8+eq7ZRwKnT
      J3F9CH2fdCGL43ikTY1QS3DfMlufk6dO4gXiGluf0XICzxphpDe13PbkSdxQEPkemWIe2/YZ
      KGWpNl0OHbhnme2JkyfwAo0ouGLr+AwUM8zWXY4cvPpsKvQ4cfLkHYoJFoK+3l6MTA85M6Tt
      hlgG9JTKK462Rwh6e8tY2R6yekg6V8SzW/jKJJe5bu1XaB3bXIm0FlyxbZLO9ZAwtBW2fb1l
      kvkeUsInnS/i2g0ipTG+c+eq103lSyTxyOR7cNtNhG6QsKxVbEukCyUs5ZItlHDaDc5PXMJ3
      2iyLTxM6fb0lMoUyply0bWIlksxVrgslFDq9vSUyxTJG5JArlrDbDZqtNjMzs8tnDEKnt7eH
      XLGMFnZs260m+VyW8fHdK67bV+4h31NGBDb5njLtVgOEtjJiTDPoLfdQKPWC3ybfU6bVatLb
      10ej2bzuugorWaC/nGewv4QTCEr5DJqVIWVe/12AlSrSW8oz1N+DE2r05NIUy72rVkgrXaS3
      J8dQfwkn0inmUghNZ3zH9SpQRSLdQ7mUY7ivB0caFLIpTMMgkbj+e4NEpnTneoCa28aqGCRz
      vezd38/FyVkKSY17Dxy4zlay4LSxqgapQh+D/T2kUyl6i0nq7WhV20TVIF0cYLC/SCqVImrV
      aLU85MA1H6iSLDgtklWDbGmQgd4C6VQKC5/5Wo2ewjV6cxmxYLdIzRvkysP09+ZJJfeTNiJE
      73WachlRt1v48wb5vhH6SzlSyQMM9pdxXXf5FyojFtotfN2g0D9GX0+GZGI/WQty+esE+DJk
      od0i1A2KgzvoK2ZIJg5QTBss2OHyKb4MqbebRIZBaWgn5XyK5N79JJMpconrGg0ZsNDq2JaH
      xynnkiT3HSClR7jyuuoQBdRbTZRh0Du6m1LGIrHvAKZ0OLB///LLSoXv2eSLg7RbbQ7u6qPa
      cCglBIFIrGpb7Bmi1WxxcDxPtelRrTbxIhtFaun5pFL4Xpvi4DCtZot7d+SpNT2k12S+Vieb
      Ti67rue26Rkaptlsce9ojlo7QAZteq/73pRU+G4rngPEbG+2bFqUmJhbQewAMdua2AFitjWx
      A8Rsa2IHiNnWxA4Qs635/wHmHKelL6GrEwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of Deaths Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy92ZNdWXbe9zvTnef55jwhgcRYAKpQc1d3s7uLPVGURIqyJIcdFEWFrTBl
      6cEvDkd0+I/wg01Kpi0qRHFosueuLlZVV6EK8wzkPE93nud7z+CHm3mRmcgEMoFEFcrSF1ER
      hZPn7rPPPmvvvdba31pL+PXNa4bicSEpMvn1OK8ePUE2l2O1VaGYTOMQFTArvHbiNB989BGJ
      TBqbzUZodIhKvkCwrwdrpclQTy/ZXJZiscTw0BBXpydIJ5NYEPj6W19BEAR2wjCMzvXrt29x
      bOQIDofjkft2IpFIkMpmGOzrx263b/vb8soKy/k03q7wE9v5PFGIpzg7NEq1WsXv93/R3Xmh
      USqXuTM5RVqQUNzuznW9WqVPkTh1dBRRFA/UZrPZ5OatW/T29tLd1dW5Lvzwg/cM75FBAMq5
      PL2KneG+fj69dwvd7SC1tII3Gubt/lFUVeXHv/ollmgQk8WCJEu4Q0FYTxN0uOju6WF2bpaX
      z53nyt3bFK0yuq4hJ/K888abGIaBKIrcG3/Aeq2EIIqUCkXODx7B5XLh9XiQZfmZBs8wDB6M
      j7PaKOGKBJ+prcNAo1ZHEARkk4K7rHLq2NgX3aUXGoVCgR9eu0nLF+gsjmqthqdR5e3jx+gO
      P/3C1mg0MJvN264Jn85NGJlCAUEScfq8FOJJ0HQwDNw9UQAqiRQXBkZpaRr1eo1Grcbd+/eR
      e8K4Aj5m/+5TdAFCYyNYzRa+cfo8nz64ixTy0qzXSS4sI+gGboeDbDpD9+njSEpb0A3DoJjK
      MOryc2zkyFO/3E5cu3+Hlu/Ju8nzhq7rLNy+T//JMZRCjW6vn97e3l13xP/SUa1Wef/qdRJO
      D8LGCi/mc7ze383Y0NAztV2uVBifmeXCS2e2XZeL6SzJ+UVMPjfVWBJdEIgeH0XXNAzDAMAp
      m5lZXabSavKNl18FIFcoUAk4qZcrHD12FNFiRo/4EBCYWZin1qjjAEwWCz1jo0Bb2B393ds6
      IAgCDp+HWq35TC+4E4oo0TrUFp8OoijSfXSE8swykiyxmopjtlgIh0JfdNdeKMSTSS7eu0/K
      YkcRRQzDQMll+N5LpwgcgsooSxIOs2nbtVqthjjsD/P9r3+DfpcXu8eDr7+HfCyBq9RAjmex
      5iqc6h/izJGjvDJ6rPPjE8fGCNR1BmQ7b7/xJrViiVqhBAIYgkDQ4aKcL2AYBvlkilajuW3V
      q+QLqM22iCbml8jncs/8kltxcvQYWiKLrmmH2u7TQDGbSBSynDt5mtHuPnRd/6K79MJB0zRW
      y1UUW9uma+SynIsED0X4ASwWC8fHHqqf+Xyen/zsZwj1et24PTVB1WNDEATqiTSvHzmOe4vx
      8TiUSiWy2SyBQIDPrlxB8bkYDkWxmi1cuXmDlstKbS2BfbAH2WSikEyDAIogous6znCQaizJ
      b3/1G0iSdCgvu4lyuczlhUlsfu+htntQGIbByoMp3ILCV9548xHD/b8CPrl2nZvpHNZgiHo6
      RVRr8vff/dYz24Rr6+sEg0FMitK51mw2+cnPfsb40jIywLmxE4zPzSAjMHrmZZQtNz8JuqHj
      8Xqx2+289frrWK3Wzt+++81voaoqwssCc/PzbXXnWBST2YzNakUURUqlEoHjZ5/pJfeCzWaj
      Uap+oRPAMAwMw0AHJIcVm832hfVlJ7Z64b5IaJrG9OIS1sERBFEkaqj8g99891AWxEg4/IjH
      KJVK0RWNcnt6pj0BFEXhzLHjB2pY13Xq9TpTi4sEXW7cLhe5YoFLk/eptZqELQ7sFgtOm52e
      nh5Gj+xu4O60yg8TiUQC6o3n1v5+kIsnqa2nOHtsjJGBwRdC4DbxovTl/vQMJYsVhySRvneH
      r7/9xqFpA1vbSaZSFItFbDYbR0ZG+MdeL3Kr1dpTCDeFfHx+jrDPT++G/1RVVf72w/dJp9OI
      JhmX20M0EuHqrZs4jvTjMHspGwZFXUctFukBUuk04yuLNHSNkWCEgZ5exmemsZrN1Op1Ah4v
      hmEQiUQO7cOEw2HME+NgGPA5f+xiKoPZbsUTDuL0eYjFk4wdGf1c+/BlwNzSEr+encfe1YOh
      6wyHggwNDBz6cwzDwGG3o8gy0wsLVDWd2VwBcX5piVK5tOuPZmZnuT81SdGhcHNlvuMVmlta
      pFCrcOzt1zhy4Txas4WiKIheF9KGziYIAvVkhuNHj5LN5bgeW4SgB9GsUKtW+ctf/ZyUReB+
      ap35XIo7hQR3Syneu/Ip2iEZrqIo8vqrr1FNZQ+lvf2ikM6Sn1+hkcpjGAa1TB6/54u1Q15U
      dIfDGLUaCALNQp6XT4ztewGs1WpcvHWbUrm87dqHH31Eq/XQB5jOZPj37/0df/LpFf7szgPu
      GDKzkhkCIcS8Wuf9uzc7ngnDMNB1HcMwmFlfYSWfITE1h01W2kJdr9Mb7cKpCpRzeerFMn0e
      P6vr66iNBuLGlmPoOt12N6Iocmt2CpvXg67p2Goqv/jwA6zhIKIkYfO4ya3GUMxmLDYbpmiQ
      u1MThzbAFosFtXG4LtbHoZTJsXDnAe6hXjLpNN6yytdOnefM2InPrQ9fFui6zi+v30IKBGmV
      y/SjMtjbu+/fL66ucjeTZ2F5BYB6vU6j0eD0qVPU63UAisUi6WyWpsuDxR/A7HJvm2Cixe/F
      EOCDq5f54OZV1mLr/PlPf0QsHsfisBM4MoihSAx42u6ouzNTfPrgLh63G8VsplwosFLMsrKy
      AopCMZMlt7JOYT3OseERVFWlqLUFsJRMI8sy/r5uDKM94UxWC/5ImMJanGY8TWx8mlTu8FZs
      QRAQSzUa1dqhtfk4GBi4PG5Ks8sUyyVuTNyn2fr8JuCXCXMrq6xrOhavj1o6yfmx/duhjUaD
      W1PThAWDXK1OqVymUqtx+eZN3G43TqeTZrPJf3r/AwI+H9R3//4igK5q1MwSYtDLlTu3sHk9
      XJy8By0VgGBvDxZT207oCgRRLQpalx+zzUqwrwdXTxRNFonYXSgmE6eifXzj1HnMZjOLK8s4
      g+3JI8kSgiAQGR7EHQwA7R2nVi5ztmcQp2zCP9hHTW0xMTf79CO7BZqmsby+hnQAz9azwGyz
      0nPiKIrdytFzL2ExmVHkz+fZXzaUKmWkDb//cDBAJLJ/msP8ygrlcDc5X5AZUeGDm7fwe72g
      mEim0yTTaS4/GOcfff2rWMxmwNi1HREgONiHK+hHEASsfV14BnpwBP3IG6q4YjGTLOYB6I5E
      6VVsaJWHM8rudqHIMoKq0qo3CAeDHV93vlhE2TCyJYuZQiZDbHKm89tqsUQuk+U///RHfPDh
      h6RW1vAM93N3eZ5CobDvAdkLgiDQ0jRk5dn8yfuF2WpFVmRMAS9kipgl+UBu5f9SUG80SGRz
      CJLUdn54XAdyfmRKZcQtZwTyxgKtKCbK1Rpzi0tcmpzmzy5fY25tjW8NDeCoPGrrPkKps7td
      ANjcLurNOoVkGkEQqKpto0IQBE4eG+N83xCNcoVyvoCu6zSrNWrVGqXZJWxbzgJ0+eEjFIuZ
      tVSS6NER6pUqAFanA2dXmJNfeQOz3YYn0qYIBAZ6+fTWDVRV3feg7AZRFBk+fQJD16kUis/U
      1uNQr1SZu3WvTfiTJLxdYcSIj1Njxw/9gO//D7gyPsGSZEYQBARBwNh9gd4TuS3ubV3T6Ha7
      uDUxyXQuT65YYCqXp9vrwRSKcClfIV+tcrYrgprfzjgQ99KNBUGgajXh2lBfCmjbVuRIKIyr
      oVPO5HAV65w6foKyIuAY6WNuafHhA3g4q2VFwT/YR2VpHYu9fSAkiiJdo8PYPW7Of/sb2Dbo
      0HO37vJg/AH/5x//X3x8/QqNxtP583Vdp6WpZNfjpO9Oszp1OKrVTljsNsIDfYxfvMLazDwA
      sknh+p1bHYPsv+IhbIpCZX2V+oZALubyHS/jk5DN54m31M4ho1StEHS7uJrMgMMJmk7NbKUa
      jAAgKQpXs0Xen5lHXV/d9hzRbLPu9Rz8vV2dbclQVUym7WSisYEhToS7OX/yNNfu3UFQZNzB
      AOOJtc49/ZEuSOYor8XbvtiuMM7Bnl2fJwhChyUaHRrAEwmTrVZouO1cvX1rX4OzE7Is88rA
      KH1Wd7vtlor2jLvKXlDMJo6/9SpmQaIWTyOKIpZokPnlpefyvOcBwzCo1+tkMhlUVX1uk/eV
      kyc44rSTmxxHV1UKokw682TnRzaf569v3weHq3NNFwRKtRqSJCFIEjXDYERvoq0sdu6RrFY8
      Vgu+SHSbqiX9i3/7r3+g7mEgbIUgSSj1Fl6PB2gPlMViIRRoc+5XsynMQR+CIFAuFDkS6UaS
      JKwWC5du38RsMlFrNrA67MimJ+vEZpsNV8BPZKifW+99QKFSRkHA7XYfWKe22WxUqlUG+/qp
      ZAvUdBWL83D5OIZhMP7xJUq5PGZZ4VT/MKlaGUEUccsmgv7AgdqCz/ek1jAMMpkMN2/d5Ee/
      +DnrsRhzCwvcm53C7XDicjgPvT9d4TCxtTWaTjeS1cZaLMZgwL+Nt7MTV2/cYF0D2WJ5eNFk
      QqxW8CoSBcVCVpDIKRbUchlpS7+1Rp1iMoHifxgnIv2Pf/gvf+BoaCgNlUwuh8mxu2BIisxi
      bI2VmTmGBwf57NIluru6EEURQRCIra5SV0QkWcbicBBbXKIv2t0+O2g00LwODF1HlKXOWcFW
      ZGNxBFFA3rLLSLK08Z9MtVyhoDdZyaWJOD1Ytg7AE2AYBjdmJkgaDewWK2qhjOx2HDiqaM/2
      dZ2lB1PUSmXsLid94Sgj/YPMzc+xNDlL0OujKxzZd3ubevHnicmpKf7ib35IPJ2i59gRdMNA
      k0WSiQSq28bM1DS9keihGvRmk4kTR49ir5UxEjGK8RihQABJFDGZTLuOQV9PDzNLS6iW7ZqL
      tdXgWFeEmVwBUZbbQUg7ff5WG5ogIlksnevSf/uHf/CDWKVIqVohl0yh2G0dr81OWF1ORI+D
      makpugMh/D5fp6HZZAzZ7WzfKMCD6zfpDUdxOBx0BUNkF5aZvXMfwaSg6zqKxUxsdp5auQKC
      gCxJNFYSIEso1ofCLYjtSYUgYHU6SC8sUWnU6e/p2bcAZ7JZ5mOrNLIFRJ+Tqq5idx/M6/Ak
      OH0eWvUmhqbRFGE9m6bb6eXM0TFGh0deGN7NVoxPTPDJxYskUikuXr5EPpvl5e9+k1w8QdfY
      EVwhP55wkGq+gNPtwmdzYD9kMp8oioQCAY4MDfHSyZO4XS7+7P0P0FSV7uCjEX26rnNjYQnD
      +rAfhmEwbDWzni9SkHefONBeWGTr9okj/cv/9X/5geSyY/a4cEfDewo/QL1apZTOsrqwRNDr
      pSsSJZ3JcGf8Ad3+AIlSEcViRtc0fKKJoNeH09negrqiUcLBEE5BJr68Qnp6nla1hs9so5nK
      UiuVGYhESa6tI7scyFtWGsVswuH1sPxgEoffh2aSsGjg8/n2NchLKysIES+K3YoeyzJ16y6e
      aBizdf+7yOMgCAKiJCHKEqGBXhx+LyannVy5hNtsxev2HMpzDhOqqvK3P/0JsWSCWDKBJxrm
      xNuvY3HY8Pd0kVmPUy2VadYblDI5tFwJRZa58WCc7nDoEXvwsCAIAhZR4OLULJnYOo1aDUEQ
      OhNvLRbjfjrXEeRNYQ+JAiuF4iM7w1ZshuRuNYKlP/g3f/SDhqoiSruvprVcAU3TkE0m1GaT
      +Ss3efOl83RFozjsdj6+/Bl5RWD69j1a6Rw0WqiSiCGJfPzRR7isNoLBIIIg4HK5qFQq1AJO
      nD0R1hcWOdY/SCQUYrCnj7n5eQb7+1leWMQRehgTKggCoigiyjKp5TWKiRQnx47jdrp27fNO
      OOx27ly9jmS3EnZ5EBQZ347ItMOA2WbthPKV01mGnD6G+gcO/TnPAsMwqFQq/Plf/xWr62sE
      +nuIHhmid+wIVocdYUNACukMXUMDOL0esokkyVqLVUNkPRbHqqs4HI4DqaHQPhO6/GCcqM/3
      WJ6/1WSix+3iaq7EuqhwPxYnFY8z3BWl1WqxMv6AhsWGuGWRDAsGqmFQecKh405Pk/Q///M/
      /EHIZGN+dRmb27Xtxux6nG6zg2auQLFew+pyothtFBMpXA4HdyfGaTiteCIhmrrKt996h3gq
      iSngwexyoqoqtXSWqcQ6/eEIsiwjiSK37t3FEwnh646SWo/x9oXXqNRqFEpFQuEwJgTWUyls
      O9QUq8NONh7HgkggECQU2J9hqSgKvZEuwjYXQ339TM7OIDls+zLGnwa5tTjHQ90MvmDCr2ka
      H370ESsrK6xmUpz+6psoZjOJxRU0VcO1ETfRajSplys4vR7qlSrTU0t4T7yEYrNj9vqYnF9g
      IpdnamkFtyLjce1vIfr47j1mDYlGPEZ/d3sBqlarFAqFbXESk5OT9HR3s7y2RstiQzKZyLVU
      xscn8JtNvP3G60zMz6NZrG35MAy6FAmP1YJUq+LIpymUy2CzP1H1lH73X/3hD1qVGtVWC8lq
      pphMUysUsTd1goqVfLNGUW3SLVvxSCZcgoTL6UQUBYYGBimns2TLRWxeN8m5RcyKiWylhM3t
      wuZ2sj41S+TsCRKr6/RFoqysr5GqlrF73YiCSCmb4/jAEKqq4rTbGejrY351lVY2T7lZx+7Z
      HpkWm12gmsryrW9+40AUA5PJhNlkIp1Ok2vVsfqfTS0xdB211dp2yNWs16kkMpyI9NF/AFLX
      54UPPvyAX396kWK1gs3nJtTXgyCIyCYFQYB8Mk0hlSG9HqdndBhRksil0jScAeQN1ViQJGyB
      ILLNjmaxMpvOoZcKdIe26+ulUol8Po/NZusIYblcxqmpvHn2DIIgcH9qmh9/doXzx0bbpLVM
      lp9eusRMy6BaLFJEQFXaqpYoy+h2B3O5PEKxwHDAx0Kp0j4NFgRKpRKvHhnm7tIyCbOdky47
      yWIR8TEqEYD0+3/0r34wvzDP68dOYmtoWFSd86PHMRkCl6fGKeUL+Pq6mbx9j3e/9nW6olEi
      oTAetxsMg/nFBXLlIqZ8lW9+7evkyiXwuTq6ltpsYff7SM0vYpUVEoUclu4252P5wSRnevoJ
      h8KUSyVyuRzBYJB8sUit2aSRyiGYFUwbh2aCIBDo7abaaHDv2g1Ghof3HVBjGAYfffIxN+Ym
      sXhcWPbwdu0XuqYxd+Mu/u4omcUVTA2NQaefs0ePd1zFLxJW19a4efMWwWiY+HoMm9uF1tKo
      lcpEh/oRBZFWs0nP6DCBrkjHU1culKgYCtIeOr+gKMSqNerpFD3hUEfYFUXh765d55eTM7Qq
      VfojYSIBP/3RCJMLi/zVjdssJJLUyiXqxQKfZovMVmo0HS4kq5WCKKPussBJJjOxcoVYLAbe
      hzZgQ1VxNGrM1JooTieFUgmLpqHaHv+dpd/7nd/9wdkjx7BYLEQiEaq1Glfv3kZrtkjH4viH
      +7H7PFj9HsanpxA1HYfNTjyRoFavMTE/R//5MyzNzZMtFKg5zCiWtlCKoogj6G9b6Z4Ac8uL
      FPUWFk97y7Q67HTbPbjdbux2O6FQiOm5WZJmgWq5TKFcwtwyUHyejsdHFEX8XRGSySTv/eRn
      SJJIf1//EwVA13Xuzc+AJJJLpPB1RRDEp/fMaM0WftFEQLFycmiU0f5BPG73C+ntqdVq3L9/
      n9dff52Ln32K3e/FF43QPTyINxJClKS2/SIIVIolrFsWB7vLQTm2hmqyd+ybnRBkmZQO9+7f
      ZzDgx7LhZswViuRsTlYTCY4G/WiaxsU7d7lVriE5XcguN+ZgiLxiQTRb2u7LfXj2BJMJbee5
      RLXMb7x0msW1dZpmC4XYOprTjfSEBVL6n/73/+0HS8Usi4kYU/E1qmYJWzTI7PQMhXSGwfNn
      EEQRk8WM1esm26ozubxIxSqT1VrYgz4kRaFVrGCx2TDvoVoUczkCdid6wNMxuGVFIZ5MMBR5
      eOK8HI/RspoQ602+8+Y7DPX1M728gHnHih3o6cLiclBUm7TypSdGklWrVW5OTWC2Wwn2dXc+
      +NPAMAxMpTpvnHuFgN+PxWx+IQV/E4qiMNDfz9TMNMlykchgP31HjzwibIahUy2VcGxROwVB
      wOGyE1tPodj3zrMkCAKazc7Cwjynh9qJ1u4tLmPUqvyDc2dwOp388JNPWVesSCbztt8JG2dJ
      B8HW+w3DYEAWCHvc3EmkwGRGVBRaiXVEu3MbaW4nREEQcHg9+Hq720LlsCPJMn1nTlDXVAqp
      zLYfmCwWPJEQsqKgmE2YN4wXRzRIqrB7ahNBEDC8TqbzqQ7VYbPjtVptmz9/uKcPV7HOhdHj
      Hf1R4tHBEQSBrpEhKvkiP3v/V/zFX/4lheLeZLeVtVWGz56k68gQDu+zqSj1coW+wIuVevFJ
      yOXz3HxwH39PO6x1N96NrCi7RuMtL6xi9rUdDrV4bM9UM4IgUBZlypUK0FYTq7RdxJVKhZzJ
      sqcqdWAYBmxwgdRchldGj3B9ZhZjgyKhOJzYRo4+cQcQDXYfDJPVgr8nuq8tCcDh89J7/Oie
      f5cVhUBfD9ViiWa9zsrkNJV0lleHj227z+1ycfb4STxuN4ZhcHduGnsk2OZ5bMz6UjZHLp4A
      YPTCOfpOjRGvFnnvow/3fP7w4BCpiTng2U5adV1HKdWJRvZ/srsThmE8NbnvaVCtVvnbn/2E
      Y++8hsVuw7cH715WFHT1UeFuqXrHJrDY7ZjXllEzKYxd8hvZRQHzhpCfHuijZTLxFzfu8P9c
      vobscB7aO7WqVdY+eI/i4jxHzQqrySQLjYNzvOTH8VBHXzl3qBTiSjpLr9nBnYlxmuUKrw0e
      JRqN7nqvYRg8mJuhYjch8/AQQ9M00kurkC9TLZQw26z0nThGJV+g6zHZ1irVCvae8FMJfrNW
      p5Iv4Az4qMfSvH7izJN/BCwuLXLxymV+69vfxWa10mg2qJQrbXfkjSv0egO8/eZbB+7PQZFM
      JllYXCRwfIRaqUyga/cx1zV91/OgSNjHcrGIyelCcLpoVcv89qnjLCVTrBZLJFQDyWrBVC7z
      7pkT/Or6TXLNFrZWE9EbALOFwzlyfAjFbsd/6gxuXcMwm/ksnkZ8ign22CgRUZJw+p4+mNsw
      DBZu3SXc14vN78XsdJBJ5rEiUqk3GOjf23gVBIFWq4VgbXdxM2ZZ13QKqTTf/+pv8GBqkoJe
      Jr26Rr1U5vSJk3u253K50SercED1xzAMkstrGM0mUbOTty68sS8KRqvV4qfv/wpvb5TPbl5D
      FiSKrTrZfI7e0REGzp0iPr9EMpkk9BzTJBqGwa07t3n9732b9FqM/rHdd+lmvU5sdoFKoUiw
      pxtlSxpBd8CHtjYDmweP4S5+fn+Cf/aVN3nNZCKXz1MsFvH7jvK3V29QdroRzTZKzSbSc7SN
      LKEIDWABEB1PN8Xk9kHCofarA0EQ6D91gursMuuJFH2hMHmzhCGJfP873911NZ6YmQYDdF0j
      Vy5RbUo4tyS2EiWR6OgwyVSKr3/lHf70r/+CmrXE11557bFJpyRR5HhXP7OlHFbn/pLmFtNZ
      rIU6L/UO4vf58Pv2n6ZvZXWVwf5+6rU6yWoWb3eEyMgIQU3rnB2EB/u4Oj/Jt/3+5xY002q1
      yFXK+Ox2ZEXZdcw1VWPt7gTffONtgsEgN+7fpWF6eG85X8AwbfenmwWhQ4zzejx4PR5+fuUa
      VY+vE2V1aPr+c4QIz5d2KykyjqODBIb6UEQJHQieHuPW+iKZHcHvyVSKpWqBhAXWZQ3N4+gI
      /1YBCfX3Mr26TCab5btf+Ro2DV566aUnClFfby9SpcHK1OwTYwJqpTJaKscbr73G6MiRAwk/
      QH9fHyGvn5qu4u2J4uuKPPIegiBQq1ZpNp9P0Hyz2eTnv/g5ssuOgdFJWfPIffUa71x4jUgk
      gmEYTNx/sM3QVVvqIzLSFARu37nDLz/+hL+7cZNarcZIKECrVn0u7/K8IMLuRvBhQhAF1FKF
      oe5eMMnIJgVPd5QbyVVmt0SPFUtFJJuVarFEfHKWaz/9JZm1dYBtCWUFQaD73El+/PEHNFst
      /unv/eP99UMQ0Fsqs9dukUukHnuvbDbRqjefmv4riiKDAwMcHRjc081XK5UZDXZtSyd5mKhU
      KqylUwycOUE5X8Dm3F1HFhA6E3MtHqPnwpltk8UT9GPUytt+UzPA6/XiDwS4sxrj3390kU8n
      pzFegGTEB4G4KfzPaxIk55coLK9x1B/deMbGtppMU05nuTk1zsxGBojB/gGcuQp9goV/+PVv
      8T/8d79PbSlGs15/pH+yojBw+gQfX/zkQIm0AjYnp995k0D37obgJnKxJH3PQGcQBAG/34+I
      gL7LbtPMFBi2ejhz6vRTP+Nx0HWdqxP36Tp5tM3ozOZpNXf3PBnVOqFAkGwux0RyjZ1RgqIo
      4rFu3z1kj5efzi5iFuCt/m7kYIhWuAvTIXp6DgNP8vh1bIDDVoMatRrzN+7w8snTvHzyNIZh
      8OGVzzBhUK9UGXD6cIV6GI+vsppJcWR4hFQqhd1uJxKJYLPZsNlsfO/d3+RP/8N/oPfCS/ii
      YeKzCzQKRXpfOonFYWdhZZmFhQVGRkb21a/RI0eITd177D2GYaBYzIeil/s9XvyCl+nVVepi
      O099xGTn3JHjB2ZT7hf3Hzzg6rVrNBQBp99Ho1and/TR8dF1nfzyGkeCUWq1Gu9dv0T32O45
      XBtq2+++laFr8vr4tFBBq9cxufaXTfywsfNAbOf1Jy3swpWVOaPGwfLVb/J8ntR4Pp7gm8fP
      bjNO55cWyVcrjA0MtX3qioKyYZwtrq7QarXoiUS3qQWra6tcmp8iNNiP1lKZv3gFk2LCMdhD
      bTnG99/9TVz7ZCQCXLx6GS3kRtnDSDMMg/idSf7hd7637zafBF3XaTabGIbx3FQeaLs8//jf
      /QnHv/4WsqLg8vtILK0QHdzucWvUalTWEnz95ddIZ9L85MO/4+RX39gWh7EVrZ9q7zcAACAA
      SURBVGaTiclFlPCLR/LbS9jb2SYeL6Pi1h9v+tqfNHueJPyGrrPw2XVG7L5HPDND/QOcPXac
      e3PT/Oz2VVLpdOd5Qa8PtdFA32h/dnYWVVXp6e6hS7SQuTtJOV9g8K0LdA/0c9IXQUbAuYdu
      uxcuvHSOaja/59/jU3O88+rrB2rzSRBFEYvF8lyFf2Jykj/+0/8bd08UXySEJxRAEB9VAQzD
      ID63yIVjJ3E4HDSaLcbevLCn8AMoJhPKDiXhRaB/bO3DprpzkINOGdofR9f1zozZanDulkP+
      scJvGMSn5zg/doITY3sXhJMQONs7RHdXF/FEnNuz0xzt7mPdBAvT9xEbLVRDZ7Wc58LRE7z5
      ZrvI3tLqKgvJGFmtQaBe56vvvLOvF90KRVHwCSay6QzuwKPeHU3T8Hm/+KIamqbtu0DE+Pg4
      P/3gfbrGRjhy7kynDUEQaO5y6hx1eYlsnGYHA34W1hce0f3hoVAl1xO07F6ULddfBDyuxsF+
      7Fpx8wU3qQa7le85iIGsqyphk41Tp07teY8gCJw/eZqRDRanKEoE3R6cTieNchl7wIe1O4yz
      J4rhc/GjD9+n2WyXWBro7eVr5y/wnXOv0ajXmJqdeSoi1aljx2mWKrv+3e3xfOEfWBCEA1VH
      eTA5QXCgl96jbV3/cd9MU1XcW2jCdpsd9TG5U2uVCquZyiMG7oua8Gs/6vkmOiqQpmmP9abs
      t9FqKstX3/7K/nq6gVAwyPmTp3E6HNTK2/3IoijiGejh3tQk09PTHZ+51WrllZdfYfgpo65s
      ViujgSjVbJ5qsUQp0ybyGYZBwH74KUCeJwzDoJAvIIoiE5dv0NpxriDJUjv5wAY0VSO0JU2L
      qqoI4u7CrGsaswsxrKHoNj7WTk3hi8SmbB5E8DchapqGqqqH4gY1DIOo/emzLSwsLiLLj34I
      q8tJyWPl9toi9UaddKbNUBUE4ZmCs48eGcVeVemX7OiZIq1GE7XZwqY8v6o1z4pPP/uUbHb7
      AaIgCMiKjNPnYejMyUd0eUM3tnH8ZUVmfm2VSqWCYRikUimSG+ctm1BbLXLxJDc+uIhqcXbk
      Y+uq/3lPgJ36/mFANNj9RZ7GANZUlaDr6anGR0dHMT+arhTY4AY1mljMFnIb6fQ0TeMvfvQ3
      24ohHASiKPL6hVc5cuQILx0dY/7GHW7/3cf0dR1+wPxhoNlssrK8sqvR7/d4mbx6k628lr1W
      RUmWEaI+fn3tMj/68Y+Zn5/H2TS4/KNfEJ9bxEjlceZqvNw1yD/9zvdx5DPUc9mOXfJF4Xmc
      VcmbnGptS13grQ/c6yR0N+OjVW9geYqylvF4HM9GlfhavcZefhJ3KIBhGBwZbuu5i8vLDL35
      Cnfv3+P82XMHfu5WRKNRfu87v0WhUHghqzgahoEkSXzve9/b9Zv4A36k5QXcAX/nOy6PT2H3
      ujv5VneiUCrxe9/7rY4DJJ1OIysyC4tL6IpEvdHgys3blF1eJHn3WIEvAvtxb+4XIjtTj4gi
      kiR1/v9x2Kl7ySYT1VrtwJ2LRCJYLBbGZ6ZxdIX3/H2lUuG9X73Xefb4zBRmm40b0xNUq8/O
      QbHZbHvSs78IbNWzr9+4wcWLF3HsIczRSBT0h6t9tVjCqousT8y2g5x2GKzxxWW6Pf6OsV0u
      l1lZX+PXd29SDzlp+uzcT66QMAxMTtcjCaW+SBzmTiCysbJsCvzmOcDmRDgIZJPCnfQ6P7v4
      6wN3xDAM8uXSY4vZSZKEeXSADz75NR9duQQhH6IoEh4Z4tLVqwd+5osMwzBYXV8nm8vxi48/
      Yi4R4/z583ve393dzdi5M+i63vbyNA3+/rvfZnhoCJvTsU1opq7c4LWhY7z5xhsd9TGTy3J/
      arLtDNkIihEbKuYnBJXDF5PK8bDwVMkxH/ey7lAA3WGlVNq98N7j2nz75Qs4io/yfjYR6O3G
      ZLWQN4nQFegwRc12K4vJGKurqwd65ouKer1OrVbjr37413x6+RI5CQajXY+lTphMJr55/jXE
      RB53ReXC6bOoqorPYu/UcNhEIBCgt6eH6dkZWhs8pWajyVdff4MTXX3M33tANp7AcFip5nYP
      c92Kp/G+vCg48ATYz0x3+r0srq6wsLi4L6rvpieiXC5z5ugYufX4I3/fOsC+rsi2VcfqcOAf
      6uPuvcdzfL4sMJvNTE1N4XI4mIutI4gi89Ui/+mTD0mm9maxWiwW3nr5AmfGTpBIJPib939J
      b09Pp9TVJgTdIBaPsxBbx26zoaoqi9kkS5kkdoeT/rFRZMVEej2O+QBZrb+MeKod4EmzXTcM
      JtIx5o0a7927wWd3bj12Iui6zsrKCrIsY7FY0Gv7i5fdOjEcPi+LsbUXxlB7FgiCgMfj4czp
      M5SyWeweD76ebjxWG8F9ZMO7cvUq/+4//r+IgMfjIWJzdtQawzDIJJP4vF5ePt6OoIsl4piD
      XgyPg4n0OmarFZffS//YEZrFZy9TtfPdXiQceALs63hZFAkN9CHJMo5QgIbXzge3ru1Z7kjX
      dX7x3i+ZnZ2lUqkgSA8TmO53azU0nWwq/bkGmz9PDA62q8obuk61WCQ+PUvEtL9ULhW1ySvf
      +SZ1DJKpJJVsAbXZpJTNkZxbZLR3oF3bYSMUM5vNklqPkVqLUSwVWRyfolauYDKbkRtlGqXD
      iwvfi7rwuIzOO/+2G9/nae0Q6Q/+zR/tq0DGs0AQBCSHjQfTU5TyeSKB4CM0VlEQOX36NA+m
      JiHk3bWGwGPbV2QCfd08uHGLsSOjL9xKc1Douk6pXGbi/n0sDgeenihFXcWJiOsJ5L+FpUUE
      l53Vu+Mkc1mm5+ewu5yEZAvfePVN+vr6tt2fTKUQA248wQAunxdPKEBqZY3k6jpDY6MYxSyt
      fIamIB84zHEnQW0rnXo/xLXdhB9Aa7XAaNdjexZC3OcyATY7ZnY6aJhk7kw8YD6+zsLSIn3h
      dtEFSZKYXl2mYJU6meUO2r7JYiEWi3Pnxg1MkozP5zu0IhifJ9bW1/nzv/0hOa3FmaPHKBka
      rUYDTzRCKZ1hINr12N8X83nu3LlLo1ajWavTFY7yxqmXsCgmRFHAYrZQrVbbNZxLJT65dJlY
      sYIkGNgc9rZHLpUm0B3F6nTg8ntxOO0k00WUfXiFtuJZF6KdE0ZrtajEY5jLGdyyRmV9DcHh
      3pPK8aTd4vOpHbq1Q6KAt7f9AfPriY6ATi4vIveGedz6slscwk7q9vDZUxiGwc3JaYrlMq+/
      +urzeZHnAMMwWFxc5M79e9RFAbfTzno6w2g4QqZRQ1M1CoLBzOIiRwYG9mzH7/MjWu10u7yY
      DQOz2cyvP/mE3/ud36FWq/HJ7Ztk1AZarkijWCIlyQhNndXZBXyhAOV8Adlk6lQMBTBbLAj1
      CvBo0Qo43MOprW0CqPUa9Uwas1bH53Vy5MQAykZmb6s9xdTiMq7u3s7uVM2k0ZoNnNHuR9rb
      KT+yIAgIbFdH9tu5TX3uaV9ctpioVqu4XC4GwlFmK+VO9cjdsFvAw27P37RBVuZXCMzOMjI8
      /KVQiVRV5b1PPuLY26/iaDTJxhJ85eVXkGWZaK3GlcQqzoCfyw/uMtTb+8g5jWEYrK2tUSqX
      EXQD00AflXgCPRyiZVb4P/7kj4meOY4rGMApOGCjAmhkY2zqlSrjl68T6Iri3/C0bY6tIIoM
      9oWYXVnG3v1QhdqNn9P5zY5vc5BvIAgC+fkZPGYRv9dF8PTwrudSLp+XEVUlvT5PsljH5fPS
      F/GyGq+0s8c9IbZF3nn5SS+x815JktB1/amJUTfu3eHE6DF0TaNZqx1oAuzlfzYMA7PVimeo
      j+srcwQDATwvYMbmnZBlmbAvQLlQxBsKIkoiuqEzPjVFslFF2jj3cPf1MDc/z5GRkc73uXHz
      BnOZJMVKFXdvH5ETYxiGgau/Lazeri7Ueg33Rhrz3YTRYrfh9PkI9e1exbNaqWE21Mdy8Ddx
      GAuOIEqgNYkM9O15j6TIBLrbAUDRbB67x7URCedlamoZJdzd6c9WmYYN25M9hGg3g2U37Gcw
      9oLV5aTSaFBv1BkcHESrHm5JTpPVQr1SfWqy3BcBj8fTKSLeqjewWW24nE7koL9TwESymLlX
      ynLl3p32fa0WV27eBEXGECVsHjeiJG3L7GAYxhPTXNYr1W0JsXbKRbPRgGAX9UJ+W3zwTuxl
      lO4Xm/faFIGh0yf29RtRknAH/R0mrGIyEQ04aZYfZrPYrR9PbSFuDs5uJLr9QpJl5JAPUZKY
      nZvDcsh8E8MwCAaDzzUM8TCRy+W4PTmO2++jvpqgT3HSaDYYX1/F4rDT2nDxtnN4qkQ2chVd
      u3GdodfOISoyVs/ewembm/RewqirKvVyhaWpWZanZsmsx2k1mmiaRrlQpF6tYy5liDgVyrG1
      XdvYD9R6nUaxQKOwd1hqNZXE57btGbe9H/ijYcRy9hFNYeu/pX/xb//1D1rsbxXfy5p+ll1A
      tphZSyRI5rIYVjPmQxBWQ9cpLa1hq7VYXFgk4PLg32dBvS8SFosFp8VKl9PLS8dPEgwEsFlt
      qOUyU3fvozjtmDbGJ7uwzGAowtzyIh9fuYzJaiWbzhIeHX1kq9/8/1qpjCy2d8bdIMoS6USK
      8JERrB4PTU0jHUuQWo2RS2foHjuGK+DDZLWQWV0DxdSpHLNf1HNZzLU8fquIQzYox2O0aLtX
      q8kErUoFQQCzy002lcMqg/UxavGToAgQX1lHq1ZQHE5a1QqS8nBSCVdW5oyqoR1YgDcHedMz
      s1c45fOCYbSrz2itFrLZhK5qmKwWNFVFS2b52rkLXHtwj3Qxz1dOn/tS2AC7oVqr8ZNPP0Fx
      2LAaAo1iiZ6eHrwOJ3cW5yi1Gni9HryhABPX7xA+cWKb6gpQL5epZtKYZREDaKka/q7oI/aW
      YRgsT0wRGR3t/HsrdsrI+PW7WKI97foRT3CPtqoVWrUaXqnFwOjQtmdOXbsFFhs9fe0q7tlU
      llyugNVmpX+4D9MzpI8xDIPMehzdMKhW6zjsVlayVayhNutXuLw8a9TQn9loeZwatNOwflYY
      hoGRyDIc7qJYLHJv/AGnjp9oqwAmM/19fTQaDX5x+xr5pVW+/41vIcsy3i840P2gqNfrzM3P
      43a7cdjtWK1WarUaTqeTe9NTrOkNTA47qeUVWuUKlWKJrtNntkWEGYZBcnqa0TPHO98hvRaj
      WiohW634ux6mwE8ur2JxuzHvMx5C1zRKmSzVSpViuY7iDWDepXKnoevo8SUMXWNguH+be/Xz
      hmEYJFfXWcs3EM0WhF/dvmYUGzXYpQjFQZGNJ+keGdw1+Wyr0XhsDeL9olVvoKaydDk9tASw
      mc2IosT9uRnOj44xuOEf/+zqFYouM9VimZV7E/jDIb771jsvZP2u/WJlZYVf371FwO9H97m2
      jWezXie5sIRmCDj8fhxbVL5yNovZ0PBHQzRqdSx2G7VymfXZBRBFzFYLum5QqdbpOX7sqRfD
      5YlphHDfI6f4uqriqGXoHR54qnafBwrpDMmVdeRYTSBZ3b5l7hs7F3R3lNL0MhaTRMDr7PiS
      F+88wC/IuHu6SUsGNs/TrQCaqtJaiSM7bCQsAorZzMLiCu++9ArHhh9mPstkMswlY/RGT2Cx
      2/FFw8xcv8XM7CwXXn75qZ79RcEwDD69fo1Us4bLbMEW8CFFguz0iJssFnrGjqKpKrGFlW0T
      wO71EpuYoJzPYXM4WBqfxBsOMnL2FK1mk+TSKo16DW800nmmrumkFhZx+L3b2nocmk0V6y6+
      +mapiNXxYsVZS4rC/FIOWbZYUITtGYufFoZhQLSfpmGwXK0we+UBPQpEbXZePn8eQRCoz0yT
      ryVwRQ9eYig9t4Qz6Mfk81BIZVi7M07Q6e5khavX61gsFlbjMUwuB6mVVdRGC5PVQq1U5vad
      O5w/e/aFTeexGwRBQBElBEmk7rDgsHjQtqRY3wrDMKiVKzSqNWLTM/h7e9pU88Ulgn4P4f52
      VjdVVSnni1SK49icDqJDg9QrFRYnpqkX8mi6jiLLSIaGTRFJzs0TGh565HlbnxubX0STd/fY
      WLw+VpZmQRQJPMV3fx54cHOK8eXWo1SI3TwIB4UgCEiyzEm/h7fPn2N6eYVLV6/ynXffZWx4
      hFuT4wduM59IUSwWWc1X8PnyDB4ZwO5x4ci1Cy07nU4ymQySJHHy2BgnGUPTNObn57l88wZR
      u5u6uX1o92WaAACvnj9PPp/ns+vX0IfaQr1bJg9dVSnGYgwM91KvVFi5fQuL3Ua4uwvPxqmv
      oeuozRbDZx4WEzEMg0w8yejLZ7e1V69UaVYrmE0yrXoD2aSgaxrSFhtDbbWox5NUYmmso3sn
      QrP1j7CajGN3VjA0jfRarF2uqSvy2Ix0h4lWo8ntS7fxeJ0Ui+3QXeE/3rpvpBqPHhRtNVz3
      Oxm2fpBWuYTeqGOVRFSHG7Vcotcss14sU00lGD0+SLDn8aSunW3fvzeDEehGzMY5eXIYgNTU
      HNVEmt7eXrqiXVy9c4vf/e73O77/zYD/ZrNJKp2mv2/vU8UXHdlcjg/u3sTV3z6p3ZrND2Dp
      3gNCkRC6plGv1shn8/SeGKNRqZJZXsHj95JPpkGAYxdeRpIlCqkMpXwep8+3a/HAxMISlWIR
      QZKJWh3MxNfpHjtGrVTCI8qM9fTSbDR5f3EFS/Dxq3u9kIfVOX7zzbfpjkTJ5XLcWlvE1XV4
      u8JWvthOFsPKzCJ/+dMp2NR4BGHvg7CthwUH4QdtQnE4MfuD6B4/oiyjuN3kM2nOBz3YBAMh
      kaOxHKNVre2LsVkpFKkL7S220VTRNQ211aJQKmLYLWTrVT69fhVaKvX6wxPlzaBvm832pRZ+
      AJ/XS5fZjrZRsGJr/LYoigycPsna0iq6Ysbk9jDyynnMNhuyLCO1NHRVxWK3cuKNC6TX1njw
      2RUEUURtqXtWzswlU4gWK+dHjvKbX/s63zp/gWoiSTGRZMgXwCQrrBSKyE9Ih6PVatjyGf7Z
      93+b4YFBEAQ0TaNSKlHJPTwQK6SzJFdWn8pjuJnicze51VSVxYUEhiC1+UEHZYPuVzXayfPf
      RGNtlbcG+pleXoGR4yzks/zzsZMsxNap7tJmfHmdTLYdjaQbBlVdwhptr3yCy8filVuMDQ7j
      drqoqy1MbienQhHOnjj51EUtvgyQTAr1SgW7ssuJr2Fgd7txBwPbdm4fEmfeeJO/+cmPCR8Z
      ZHVqFkmWMFut1EolAl0RViZniAz2b6NCCILAwMkxMosrDHe3x767q4v5TApHKMhCIo45lWS2
      oSH7g4/VFpz1Cv/N3/stABYWFniwuojgtJNcXafZaKJqGvlUGk8oiCvgZ212Dn80ui2h15Ow
      1znUlQ+vcW88Qb2hIkjbPZT7mgDPSnUVBAFRUQiGgnxUqKKYzcgCxJNJ6moTXW8fdBTTWbRW
      i9jCCvVwP3Lo4YptBbRGneb0OF879xJjr3yfX9y8jNXl5OVgFwMDA18Kxud+sZcwqSLY96A7
      CBs7QWF5jbDTRV4Cs9NBqVGnt7uH3/72d3nv6meE+roJ9/dSLZUp5Qo4vR50TWPu1h1GXzmH
      JMvkkykqhSJmi5l3L7zRyZXkcDg4MzSMSVEIbFAxXimV+PjBBGuSqeMC3dp3XdNwyBKtVguT
      yUShUkYzyfiCfobOnsLp8xJfXCbc39tJ0Nt9ZJjY/CKyqfuZ6BAALo+DkloA+dHx3NcEeFrh
      3zoIEZcDQRARN1Zn3WLj4uwCYa8Vj99FYnwaGjpuux3FFUC1bj+l1Go1LtgVXv/9/76j5/VY
      XRwdHsH3JaA57Be6rnNvcoKFbBqb2Ywiy1gluZ13SZRYTafwedsRYYZhoKkqUr5MU1NpmRUG
      fAHOHR3DYbdz/cE9soAc8vPLq5f49qtv8DtuN//5x3+DJMuoLZVquUwhncHqcODwuMmsraOp
      Kt5wCF84SGZq/pEItK7w9hrJLqeT71x4mV9dusRMMklLsWByuDC52mkyRUlitdboxGufPXWa
      xKVPEAShU4V0t6UrOjRAfGEZNvIjiZL0SJ2DrShlc1gc9kcmTCDkQdQX0KVHXbEHCoh50gr7
      uC1QNyAcCqLdm0D2W8DlphovYPVESE7MUs4VKYR6Sdh3T/wkVYq8/pVvduwFQRB4/ZULB+n+
      lwKqqjIVX8O/cWikA1tzWFtUL8mFJZqNBrqmYRZE/sm77Yqb+Xwet9uNqqr89Ffv0R0KU04k
      cUbC4HWztLZKf3cP33rrHabmZsk1KrRaLWrFEonFZWxu1zbqcbNe5+TQyL7yr4qiyLfeeIOR
      pUXma3nqjSYry/MYooTgCaK43GTyBXo2nBOvnzjDlQd3kSP+Dd4+GBgUUhnSq+tEhwewuZxE
      Bh/2p5jJklpZI9DT1ZGzcr5AMZVG1TREQaBaLLYTAGwawpLE9INFdHH3d3iqiLCtLritvBPD
      MPZM6V3UDT65dRvF057xrWIBf7WEo9wiiYlidADZsjsRzjAMavk8167f4NULrzxNl780MJlM
      WDSD9akZdF0nemQYWVE64+30+3D6fW1XaKtFZa2dQkYQhA7Vo9Fskm/W+fapUwyUSnw2P43J
      52GikGUxHuPlY8cZGRlhbX2dy7MTZBJJooP9lIslmo0GsqKQjSUo5Qs4glFGBtt903WdidkZ
      4qUChq7jNVs5PXa8Y3MJgsBQ/wBTVy5iD/o4ff4Emqpy/8Z9mr4wv7x7j3/icWO1WnG7XBjN
      FsVEkka9gabrFJJpBAMGTxxleXKGnrHRjovUMAysDgeplXUCG97DXCLJ6tQsJ15/BdmkPLIA
      65rG3Pgci/EGCLvbhXu6QXe9eTNETVW3sUA33XGbATK7YbdghGYmhWSzI1l3Z/tV4+vo2TQe
      weBrr72Kx+1+oVIXPi9cunsLzedkfXEZTzSCwfYKPqIoYtTquFR4afTYIwmzFhcXuTU1wXe/
      9huYTCbK5TK3pifJygImmxUpV+RETx+RUJhf3bpKOpPGZLFQq1TbaRLTWerNBoMvnUbPFtBq
      dbyhEC3BQPS5H1IdDINaMk3Y7kJGQDcMKmqT+P/X3ns8R5KmaX4/d4/w0FoioDVSZ6ks3V3V
      Ynpme7Z3uJxZW9J44J6GJx54nsMY/wL+ATyQZrNLMeTYcnfU7va0qO7SVVmpkQmtgYhAaOnh
      iodARCKACACZlQKowmMGs0wg3MPF937i/Z73eSolVEVBV+oolSqixYInFMLhdtJnc/H6xaZ3
      xPLqKluigiBJrM7OYQIDE6NYrFaqpTLZZBpBEontjUqmaZJe36KcyyMIAna3k+TKOi6vh2A8
      SnSwv/25h7cece/+Bmu7xuO0Zxc81QiwPwVnmuaJNpa6VffLoe71pQBGQ8Fl6PyLH3/IwED/
      mSxuf1poRnMI11StSVTb94wFQUCtKwzLLi5cnGwWtheLHR5p5YaCpT9OLp8nFo3idrt559or
      LCwtcT+XxiJK3Hz0kJl6HcFsarr2jY2wdfchlWSGP3jvfT7+7FOS80tEw2FqVgl3wN1cZO9d
      R6vzc8QiFNn/fu2Eg15URSG1uMzg9CSVYqk9tUpuJXk494iZqWlUTaVYKeALBxm+MNXxDJwe
      N06Pm+TaBo16vc0IjQwmCA/0MfvJl+xubAIC1mgYXVXJpzP87le3qZQrbBetGKL1yMYPTxkA
      +3ci9w87kiQdGQz7P3vUwjo/ew9BFHl7ZoqhodNnytaCaZqUSqV24/s2dREtVKpVqoJJbXsH
      u8fd8Tzbo2ixzMzrl1FVlb/75X/hxrXreDyPTT0Ew6SaL2AbGG0fK0kS05OTWFes3N5Y5cev
      vo4gCGRSaRp7x7qcTt679iqiKOLx+/HEgrhDQdw0G7iu612r67q9d6vNhmS3M/vlTSwWS3sB
      HLI5mZmaBmCof4BvfnkfX7h3EiMykGB7aRVX0N/eq9h4tIAvHMDpcaNrKoamoTVUfvkPX7Ga
      swDOE5d6PbU2qCRJWCwWrFYrFosFi8XS7qVbgdGrXveoxq9kM9RSO0QDfn74yrWnubwXBkEQ
      2o1/e3ub2dlZisVvJyJVLBbJ7WZwut0dbu2t7xMEAdU0qdVqJFMpfvGzPySRSHQEXiIW472x
      KXy+x+lSc+8Yi8WCXq9jsVrxeDy8eeMGqQdz5JJp1jbW+eTzz3A6ndhFiUIy3VEEJYpi29Wz
      9bP/vXd7PtNvvYHD58UTDlMplhkMPh717XY771x/DWVPUVxVGpgHcvmiKNI/MQqGQXp9E8Mw
      cHrcuHw+Jq5fJjY8yOjliwxMT5DoD+AQj5fi3I+nGgGO6+WP+v9xEG02/LKVQaf9TG1o9fX1
      EY832a/z8/OMjo4+kcdX+zzxOP07EfL1ekdNbwulTJarsf62j3I3BAKBjtqHO/fvs5BLIwgi
      WjbPB2+/g3MvG2MYBoOJforlCprSoCLWWF5ZIZFIsDn/sOO83Ua3o2rFLXvSJROvXgdg+PIF
      CoVKB5lPURsUdrOUimVkuw21rmC1WkiMDbfv3zRNfKEgophn4etbDM5MoVQq7G7tUC2VKaQz
      DE5P8OrbVyiVvuLe6smD4Ine0LMY4o+DaJWp6wY/fOvs6Pm00Ho2Y2NjaJr2VAFgmiZ2BDwa
      qHuPul6pUi+VEAx4a3SCvli82WOqKql0mmypiCxJqLpOuV5DNE2KDQWtXufC6ART4+PYtxw8
      TG4xPT3doS8qSRI//fFP+I+/+iVBf4Afvf0uX3zxBdeuXcOpmcx99hUj1y5hGib1UglvNIIg
      ilQKRUxNR20oaJre7rlNTSWXTOOPRmjU6yjVGs69fQRRksg5Lfz61lfMxAcwdJ3lpWU0l5WB
      6cn2M9Q1nZWH84T7Ynj39gnyqV0KuTy+SITU2gaSJOHwekhMjLHw9S2++uVHNFSVerGKqMtd
      c/5d39nTZIF6vbhexzzJKGCaBsmPf8t//4s/Zmqyu2v59wXlcpm//ejXWlY7kwAAIABJREFU
      /PDVNwjsOehIksT2zg73N1epmjruoB+rzYbZysSJImuzjxi5OE0pneG98Yu4XC4EQSCdThMK
      hbpOWRqNBrOzs1y6dIlarYaqqpRKJdY3NnAHAzTUBtdnLvLF7D1qqsr1kXGWV1d5mN5iYHKs
      mZ2SJIqZLIZhEohHMU2TzfklnH7fITvaRq2OIAo9i6QMXWfj0TwjFyapFctkU2n6xscO+R5r
      qsr87CLeoZH2fd3+zRfMLlVBlNqddq+2+8QjABwOhKMa+JNOgbRKhYDT+Qzq084+avU69pCf
      1dQ2a6kdLIZJ2dBouO3Y4mFaTUcQBIR901JRar54V9DP8sY6V2aaNOVejR+a+w+XL1/mb//h
      77HIMtFgiHgsxrvvvNO5vvAFmV9fYTedxuv1MBya7KQzm2ZH0X3/5BgLt+4eCoBehfktCKKI
      IIpsLq4gShKJye7iZpLFgrhn8NJKE1/9wesIxmcsLGVpWHxHUuBPHAC9Gv1+ZYhuxzxJABiq
      Sr+h8u4f/zMGB09v9udFYWFzneBAH8reM2zUFYq7JSLOx/P7g+/F0PW2bKCWLRKOPpYHPC6V
      LEkSf/jTP2hzdrrtAFtlKxMDQ4wOj/Bg/hE7K+sMTDap6ZqmUczl6Z+caF9bPpUmmOi+d9PK
      DHVLp5uGiWkYJCZ6zwIMXSeXSiP7ms9j7otbrK4XkG1WchUBweFBqpXB0p1dAM+QDfptCXNG
      pcy7ET9XXr9ypBPK9wHlSoW7i3NUnBas+56pxWpBU9Ujp6K1cgXZbkcQBBRdY2Nr64k2D202
      G7YjarcH9xw0dV3nm3v3CI7v5fdX19FNg/6piY5As7mclHLFru2nNT3RNO1QcJpmZ6/d7Z6z
      Oyk2NtPEZpp1zLLTTtHUoS6ABIJoRahVjnxeoplNUX0CkaMnyfKcJCBM00TPpPmwP8rrly89
      ceOv1Xo7nJ9WrG9s9LzuRqPBx3P3UEMeZOdjakiryk4/RuXO5fNSKZbQVA1PPMLD9Cb/5evP
      +NXNL/j63h0qlUrH53Vd55vZ+/zy5ud8cefWie9hJ5kkmU5RK1fYnF+klMsTGRw41JAdLheS
      KJBaWQM620RrTSPL8qGEQWtN0Wv+bhgGqVSO6PR0+3d9o0N4zcLjmgC9gdVUjmyH0v/0P//F
      X+r5XcxyjlqhgKY3hx5DVWlsbyDVy+iChPgtKam9oFXK/GJ6jIsTTydge9Kd6NMEn9fbM8W7
      tL5Gyd40KNzfa24vrpBe32izNo+CJ+Bna3EZpVrFGwzgiYWxuJ3oDpmt1TUGY33tZz2/tEje
      KSJ73SgS3H00y+riEg2lgSgI7VRrNptla3sbh72Znv7i668oqXUGpsaolsqIkkQln6ecy+Nw
      uzuUIZweNwhN58r9WkRHvW9BEMjtJHEHfIdUJgqZLDtrm1i8fqwO5+ONWIvE9so2Vd3aZCuY
      OrpmYkq9265FVzXenb7EVnaXatBLOZenUasDJq6Lo9icTjI7KbaKeaxHVP30mgKZpgmmiV6v
      NUvQZFvHDfkMjYmR3hTX4/BtnOJPI3YKWSwhb0fKuV6pYpom49eunOgcLZ2fhqIQOyB0awbd
      /P2XH+O3O5nuH0Y3DEwDkJq7t6GhfpZm5xBsML+xhLT4CLfVRkkykT1uHj66h6BqJCsFfJEw
      st2OZLEwMNl8h4ZhkFzbwOn1tKnOALLNRiGTwxsKHqtR2kJ0eIid5VUGph4rfiw9mEe12PD2
      H24z1UKJfE1EEJoLYkOSsVgETLWMbnE1EysHgs6iNRrsNKpcGpvgt8tzze3mA/pRoXiU8qNF
      qqYPrZBDq5ZxJA6XF+q1GmqpgGAYCFYrFl+A0uxdfnLlIt54ENliYX5jk6Wqgs/lIudwk1pd
      eSH7C2cFVlFCATBNGopCMZPDNEwS449pDbqut/lYLRx8hhZZxus77CRjkWWCe/4Mt9PrIIo4
      rY8XiU3evQVBEHDujTQq0JqY1tUGvmgEfWcHT8BPYTfTpDPvQRRF+kaGyKXSZLa2Ce0tgDPb
      O2SX14hb7CgOGVs4cOx7T66sERnoa1JvGg1KuQI1VSc02Ne+5xbUep3PfnuXhtAcYZodMmjO
      EA69xOsXvBSKCncWyh3UaGFza8v8am0JNZWhqmvErnVX4zV0g9X5ZVxuB+FEnIezS4iRxxkG
      rVrBp1T5Z9evEI/FSO/usrCxhVavMj40RH//Y6YegKIo/NXvPyNvCvzBQJSrF3orCnyXUKlW
      kfcoBIIgsLGxgd/vx+12s7S+xmI1T6OhkE/t4nC7Dk15TNOk0WggSVJHFqVVD9saERv1OoVk
      6khp8V5YnVskMjrS9W+Z5TUcPg/5dAaLCJGB/uYUpwtq5QqpjU0M3UCt1xkIhPjp+x+wtLLC
      fL2A7HzcWLuhnC+wNL+K7HQiWS3YPF7sXeyhTMPg3ie3eLSlg3BwMW0y7K7yx3/6AaIksr64
      zq9/dZ9MzYogiEh//ud//pdqtUbV4+An119nY20dQ7YemncJokAgHMTlbRKnrBjky3VE2UY9
      neSa1eS/+tGHePeqgFwuF4N9cYYHBzuYivtp048WFlB8QZTdNJfGRvk+oFQqspPc4eGjR1it
      VtLpNAYmNx/cZ0urIslWMps7DF+YxuX1dtXFbBmbw+OF5H6Tc2hqllWLRTw9it2PQiGTw9Xj
      OJvHRWFlg2omx8D0BE5vb78yqyzjD4cIRMP4o2F2U7uMxBPEIhEW5xcw7XJXukcLst2ObBWp
      NzR8/QOHhHh1TSO9vMrOygb3VxXoYpMkCAKFukhydZ2A10pipJ/pCwmsSoFasYhQqVTMj27d
      RHE7sFXq/Pj1G/zjl59h64se+6CWHi7SCCZgfpb/8b/7b479/EH8/uY3fF3TEctF/ocfvU+t
      VkNRFCKR3jTps45qtYrT6WxnKnRd5z98/BusrscZn53VdYYuzhy72D0KjbpCbmubxFPIEa7O
      LeLfR0Hfv76TJInC5jY/u/oaC+urlFyHO8teMAyD0uoWP37jLaxWK/Mry8zl0rhCATKb2wia
      Tnjs8Nx+9us7BKcOSzbe/+w2syv1ZsM/wRRa0OpEPSZOWeTdH1zCFw4iSpLEz95+lyveIIpg
      cvPeXf7gtRvkVo93XY8nomjba4hPabJ34/IlbLldGmbT5GFubo7PPv/8hapMv2i0siqtKcvv
      796kb2oMURJRajWUWg2b3Y7eUEiurj/13kq1WHqq3r+F/fo6uq53vBNXOEQys8uliSmU3d4a
      /93O6Rnq47/89tdsbm8zPTbOm0NjBIp1Rm1uBhxuqsVSxzFrc4tIbk/XaVI07kdAP1HjBzAt
      dpI1B8sFG//2b+7wV//bPzXp0IIgMDYySkh2sFNv5oknw1FK6d0jT+j0erhyfYbJqaebvsiy
      zD9/9SrBRpOmOzg4yPTUFDdv3nyq8501rKyvYY0EEASBUq7AwOQ4A5PjTL12jWAsitfv5e5H
      H1MrV44/2QF4gn7K34Ka3eL4t2jvrakWgMUmM5faRpIkJiJx6pWTX58oSVQFg1vzswBEI1Gm
      xidIVovYbHYuuIN4S3UsmQLVzSSNUo2I04U9m8VbKsHWVpt4FxocYCTydIVSptVJwfR07gQH
      nS6S5QK/+/RTfvLBBzjmHrFQKmPzuNs9wH7qQ6scMuI+2rf2KPQnEvybXzSzEqnMLvVKFb/f
      z+LiIvF4vC3H8V2Drutsl/NYwr176XK+wMybr1PK5ijnC0+kpCdZLEgWK2uPFugfHzlyrt0L
      R+bp/R5mlxaZGh5h4fYWhsNx4qq98MgQW/ce8s3tWyiKwq5SJVPM43a7udTXx6j8eBp0MFNU
      qVT43//mb9D9QXL5GmqtBobYMf/frwrX4gft/9v+++u44oszM/z8xjsUdZX07i4Xpqa5ForT
      qFTRdb0tMaiqKoZhoGkajUYDu/TkD1dVVRYWF3gwO8vtO3dQFIVLMxcYGxsjFouxvLzcUUn0
      XcM39+8hBZvJgcJuBrkL/UCyWFAbDUKJON6gn835RRp15cTfEervw2KzsXz/ETur62iqysb8
      IluLK4eKbU6KVmO0yDLb2QxWq5UPX3kDNZ078TlsTgcD1y8xl0uh9gUIjA02FeyiAf7znS/5
      6v6dQ9/Xgsvl4l///OdoyQL3lqpsVpyHFr+tyjVN09ptdr9i3P7zCvV63TzI/ajVah2+Wp/c
      /oaSp4d1kWkyYliYfgLq8vb2Nv/05afEA2G2smm8sQjl3SxOU+CH776H3+enUqlw584dRkdH
      2ynU7wqq1Sq/f3QXd6zJy1+ZfcTIhelDnyvnCzQaKr6WsO1eUbhFlgnGj05S1CtVdje3CCXi
      ONwuGnWF7aUV3H4f/kiE5MoaVtlCbHjwUCNbuDeLe1/NQAsCQlO+xGyyBRrVGuPeIDeuv8LD
      +TlStqOLpQ5dY7VGLplCqdVwuJztlK3WUAk24PLUTM9js7kc/8v/+u9YqNjRBCsWvYZmcbWf
      00F90F6jU9ff7m/81WqVqYEhqvlCe/rT8SOKbJULPS90Y3OTT29/wy+//oKb9+42b1DT+KN3
      fwiqyk9vvMOHF68xFI1ji4b49NF9FpaXsdlsvPPOO9+6xPA04t7sAwqlIpsLS2wsLDVFk7rA
      apObzox7EASB6FA/NqedzYWlrskC0zRJrqxRyuUYmBpvSwvKdhsDU+MotToWq4X+yTH88Rgb
      80ukN7Y6ziGJIhbMQz8SBpLZ/LdVFHG5XawVs5RKJWSrjKFpT/Qc7E4HfaPDjFycQVMfH6vV
      FSKB0BFHNnVSr127hi5YcQkN4s7D3nX7tVNbv98Pm2gczwZ1Op1s7+xgtfdmCJYFk1w+f8h9
      Rdd1PlmZx5/oQ1c1CqksQJvq/JMf/bj92RtXr3Pv/n2S1SLrepX5m58zGUng9/vbw9dZ4/z0
      wvDgEPl1DXff0eleQRTRGofL+1xeD5IksT47RzARb2d7DF1na3GZ2PBgh8ZnC03uvIimqlis
      VmSbjf7JceqVKqsPF/D4vU3ujSDgj54sFV13OSkUCwwPDrJx9xv0gPTE641yvtAO1MpuDqlQ
      ITZzfD34v/zpu0wPRumPR/gPv/2KjTvJ9t+6iS8czKhFXZaT0aEH+vt58PUmhix3zfnafF6+
      XpzjJ691KrWtrq/jCjUr/gvJFD94tbeSm91u57VXX2VlZQWrLKPKHmKxGL/79BOy33yJI+jH
      jch0//CZrxUIh0I05o/3SDiqpNLucjJ0cYrVB49o1OtUi2WsNiuJ8VFEqfditFFXDunx211O
      BqcnqBSKPPr6NsMXe089Dl2jbKVSryNJEu9fe42Pb9+EyPHpV01V2d3cRlMbWGW5bd7hMOC9
      9394ou8WBIHLe3IqxcrJPaZFDH7x6iA/f//VkwWAzWbj52+9y1cP7rFWzeHpQmjSfG7+42e/
      Z9gboNxoUGrUKWoqvr4Y5WyO3NIKrvc/PPJ7Nrc2SZbyDISjjIyM8NGnH7O5sUGhXmUmHkE3
      mqJRdrudz+/exmmReeXKlfYocVZGCEmSCHv9HLfbIUoSZo/pETQbwODMJGv3HzE4M9kuQj8K
      R2XMXT4v/kj4yN3dg5AsFrayBRLlEh63h8nEIHez21194jLbSerVKpqqItvsGLrK4D6iW30r
      zeXh8RN/934MR/38bvHwVPwgSVMwDf70rVH+7A9/ADxBQYwoity4fJWL5TJryR1WMxl0p63t
      WytKErZYhB0AhwUBJ4V791FrTcue924cr+OZ6EtQLlewiE0e+Htvvs37b71DtVajXC4Tj8Wa
      LD/D4OLoGD7f455GURRKpRKx2Mu34MkX8miqRjAYRNf1rtRnzdAROV5oQDuG/y9JEvYnkBA/
      SZA8CSqFIopS5bc3v+Tn739ILBplcW2VZG4DXzSMZLFQzuWplsq4/T6C+yySkqvrZLeTiLpB
      VHZx7cKVp057jw/GED5exBR7N+k+r5X/9sOrvHntMe/sifOXbrebi+4JLpjjbG5tsrG7y3ql
      iM3jhkoVURARA14atTqiKOINBlnbfohowOLSErVaDZfLxdDg4KEeWxRFZvYVOLT+7na5cO89
      mBaPaGy007PK4XDwzTffEAqFnkqN4VnC5/WRSqWoVquUymX64p1qyqqqMr+wiCPjAwGC8Siu
      vV73sILe8d9n6NqJGnYhncHXJbvTgqaqxwbcQZQyWRJjI9SKJebm5piammJyeITNm19iHexH
      EAR8kTC+SOf3mqZJyObk6tgkwWdgXzsy2I/LYlDSD3coIjoXonb+9U/fZGaic9P2qVuKIAgM
      9A8w0D/A65pGNpttc3juzs/x9eYiU3s+VOVEnHXqWA0Tq1dmo5Tlt3/9Cf/qF3/SU9vmaa4n
      Eo2eChpFKwuxubnJZJf08KOlRUZfuYLVJmOaJqm1DdbnFrC7XJ0LNQHsB55PtVhid2unrQIh
      imIH774XKoWmarI/0nt6s7W0QiB2PAdsP0zTRG0oOHwePv/yFja7jf7EY4bowRFOVRpU0hlC
      DjdXJ2fweZ+NZ7DL5eIPXx3jr79cP/S3H12I8W/+5Mdda0eeSVdpsViIRh8/uKtT09gkifmN
      bUqVCqqiUM4X8IVD7CyvNdmifREURXlmAQDNXeWtrS1G9ryCXybC4XDHM9kP0zBQlQbVUglv
      KEh0aICGotA/1Xv+26grbMwt4AuHiI8MkttJExsZbJ8vu53EIlvxhrrLDGa2dxianur6N2gG
      iN3p7GmV1Au5dAZFMwAB0+3m13dv8QPAdWAqoioN1GyB8XCM0TfeeS5ar3/0/mv8480lSnsV
      YS0YhtmzcOq5zRWmxyeYGhsnmUqxntphZWWFjUyOyVeuIIgiueUNAoEAqqo+MwW4arXK4OAg
      +Xwe/0s2xD7qBUeDIf7h//2/8QT81KtVrv7gXayyTLVUbqcD97/A1Oo6pXyBkUsz7RSj2miQ
      2dohlIizvrCC6vSjF1V2th4hShJOu4WqoqObIJoGNdVEv/+Qscvd6y4y2ztEh58su1YtlXFH
      IoQGB9rXq2sav7t3i6Bkw+KUERoqMYeHkMfL8OuHv7tSqWC3259JAsPj8XChP8AXa+WO3xer
      vXfPn+tkWRAE4rEY8ViM1y9f5cv7d1BMEAUBcW+kP67x67rObz79mHgogmnoXL7UnFapqtre
      7bPZbG3WoiRJL73xHwe3243FaKYfEZo69/VKlWI2h9VuQ7I0N6qgOeVpKI0OW1OAgalxtpdX
      mfvyGxqyE390L+uyN5/WTRMbjwPJbppsfv0lwdgu/sjhdUA40Ud2O0n8CAcWgJV7szg8bsKJ
      PnY2tomMDHcEq2SxIDkcZHJ5/ij6CpFI5FDjTqZTCIKAzSqztbNNwOcnfmCd9LT4wfUJvli9
      ibm3xysAr072ZhK8sNWiIAi8cekq//i731AyNZza0TTf9e0tFrc2KNQq7GxsYbHZyDRqrHz2
      O26MTSPLMpIk0Wg0uHP3DqE9v6pUKtVz6nFa4HK5ePXyFeZXl0lcnCJ0wDx67eEcSq0GJuTT
      uyQmRpsO8EurzYqweh1BEHA4nUy8cpWHDxYPfcfBhWA9n6N/pJ9qsYR/z0RvPyrFEqVs7sgA
      ME0Tm8OBqRvsrK61ZRIPzvOVaq1p2K1rKIrC1vY22WqZmq6haCq47CQEG5dnLnQI+D4LvHHt
      Ele+eMjdneYzwtCJBnuvM15oukQQBOKhCPmtVRxDAyyvrTI61Hzg5XK5LeGn6zrfrC7g6++j
      PJdhcHSEumASGW6aRH+xuYQoSlh0A8kwqUmwubFCbm2Tf/nPf/Eib+mp8cEHH/Bm/S1+d+ur
      Jm9na3uPpxMmPjJE/uES4UCIiCCTXl4Dvbkb3j81Tr1SYePhPL6hQQxdR7A8dpDplVI1ygUk
      h4xSqx9q/KVsDlEUGJqZJJdMUckX0HUdbyiIw+Mmu5XENA1MwyA2NEAhnaGQLeMb7F4Kmbgw
      Q2Z5hblShnupDTzhEKLdjQQ4gXqlgsV8Pn4Poijy9sUh7u48wjRhKixTLfem07zwfOH1i5cY
      Hxrm49tf85827nAlNY0hCaRSKQxR5PrENKlCDsfeYs7QdTRJQLI8Nog4mFKTASLgG+zjzr17
      vPPWW2diU8xht/PBa2/y1//p7xi+fpnNxWVsTid2hx2n08nk2Fibcm6aJp8vPQKapYIOt4tC
      JkulWse9zwegWyCUdnboT0SoFEqHPLeyyRSBSJhQIo6qNNiYW2RwahxfKEi5UKSwkyaSiLfd
      GwE8oQDlxtG8H/9AP8mtbew2K54DAWdU6oxdOvlu85PitctTOH9zH7fdyp/+8CrzmyuElpeY
      OpA6B5D+4i/+4i9fZN5cEARsNhtRXwDJMEmXi5QbCh++coPcboZvFh4ih4PtnURPMEh2O0l4
      6HhGqCCKrO9ssZlKEvMHj1Q4Oy2QJIlMJoPptFPJF8hsb6NrOnJDJxaNtlOqhmGwXcrh8Hnb
      m0taQ6Wumcj+w2nQ/Xx4qZIjNpjAHfCxObdItVwhn9pFV1WGpifaWj2SRcLj91HYzeCPhLE7
      nXgC/g7qhKaq3P74C/ovTHcs9A/l3iUJh98HVpntlXVS65ttL4FJf4TQM8j994LD4eDiQIC3
      Lo4wMtDHSn6XfLXMUDh2WIDruV3FMfD5fLz1xg3ev/YalxJDBAIB3nvzLQZHR3EHHy9iBVHA
      IlvZmF9kc2EZ6K04V69UMXQd71Afv/r04w7H+NOMG1ev4yrWEEWB4QvTVPJ5xkdGO4rct5PJ
      Nn262bBpK0MYun7omaj1OsWVRbKL80T36ruVWh2rLBMfHmBoZqJrvbDL5yU61M/W4nLX52yx
      Wnnl/bfIrq13mFn0MkWx2mwEEn24/V584SBmocxQ4tnT2w+WbU6PjzA1NozD4cAqWbB63eQL
      h8s3u9YDvCyYpsnHewZx3aDWFXZWVqkUS0y/dv0Q63BnZY1wX6y5wWQYpOZXiAVD6JiIDY3R
      gUEG+ge6nvs0IL2b5t72GqLbSWFlgxsXHgth7SSTbFt1HB435d0sYrlGvz+E1+3BBB4kUxSc
      zuai1DBo7KwzfnGyY4G6Ob/IQA+V5f0wDYNKsUQhnaF/4vC0AaCUzZMrV/AfQz3RVJVqOk3/
      6BBqXWHc7mV44MWSGWcX5hFopuYP3vvL5QwcQDqdpl6tIfqcHcUMsEeBkK30T02QWl3vcA9p
      3ZTD7eKLX3/C1TevI9vtqIKJEPUjGgabC8uo1Rw797Jcm7mI9SXTJbohEo7wptPFzbkH1Op1
      bDYbTqcTi8WCw+Egc/8ubsPCjemrhzYQA4EA/88XX1KrVkFV6etrrqE6xLKsVgxdbz+7zE6K
      TDZHKOjHHwmTXNugpjTQTRNTFNGVBuLyarPstb+vQ6KlVq1SSe+CCf744yBova9SJoNaKiHb
      ZPpHh5sZpGqD4YkXz+S9cITC9KkaAYrFIh/f/Ap5uO/IXiqzuU2oL4ZVllm6+wDFaCoMu6Nx
      nD4vamqLYDREpVAkNtTMHG0vrZAYH2Vlbokhb4j3X3vtBd7Zk2O/jdBJUSwWsVgsqKrKR59+
      gnUo1sHs1DWN3Y0tbA4HtVKZ9G6WwdeuUc0XqGTzeGMRbK7OwGrU6lhkK7mVNWwmCJKIYZhI
      Vit9YyPUKxXSmzuomo4kiUiiQL1UZmBiFJfvcfpR283z7sWrz03KskWSfNJndmq6QdM02djZ
      Rgh4jiWzCULTKtQqy/RPjDF79xGJixcBUKpV3G4nbp+XUi5PdidFMV+kXi5hWd9ElWzkG41T
      L8f4NFmslgCZpmn8+Ac/5B+//qxZH1tXmspqDgcuv4/Uyhqjly9Q37t/p9/XlkE8iJaRhTMc
      QqxUiQw2p5A7Syvoqobd5WJgb9PONE22F5eZuHa5nbUzTRMtk+edmSvPVcf1oFTkSXFqzHcV
      ReHu+jKOYO9d3O3lNebuPiSdKbD84BGmaVLIZHHsk8uTHQ52M3nW5pfJ5iusre1gSwxh7x+h
      anHiiUYp22Q++uyzF3FbLxz1veKUQqmIgUFyaRW7w87izTukV9fJbu009xnSGWz+kxPRDF1H
      2ucIb5Fl1L2OpAVBEDA0DYu1Kfuo1uo4CjXeu3jtuXs+tCQjnxTPbQQwTZNqtdrkqx9z86VS
      if/89We4ggFW7s3i9HqI7FFp96OQyWHxB4nE41SyWe7feoAv0U9g8HH5niAIeIdGMTSNUPxx
      +s7ufrxpoysK6yurmG+9dapHgSdFo9FA1TTsdjsb6+uUsnlCfTE8AT9X33+b3a3t9qK2kF3B
      3oM4dxC6qqLniwRbTjCqiq6pHXsDB6FUqoy7/IxMvrg5/9Nwyp5bAOi6zl/9u3/Ljz/8EZFI
      5Mgt78WNNaJjwwiiiC8cRNc07v/+M/rGRwklHnNEXH4vcjiMIAi4QyHcoe6F04IgtHurbsht
      bCLa7fzVP/w910ZGcTkcjAwNnYnNs6MgSRJ2m61pVaQ1mHjlars8UpDEdhWfaZrUGw3sJwz+
      SjZHIBpBrSuIokg+lcLb69mLIvVShQl3gJH+F9f4G43GU9WBPLcAkCSJf/Vnf4YoiLjdvT2a
      DMNgp1zA7WnmqgVBwDRMwv19WK0Wkqvr7XpRfyhApljs2fBPisSVJrEsu7rGQ01Fz9f59Z07
      XBse5o3r17/VuV8WWjl4q9W659Ertxt/tVTuMKbYWF7FM3jydLBaqbKzncTicOD2+TAFkVwq
      Tb1aJRCLdmTr3H4/wYbJyAtOdT5tIue5BYAgCAS67FB2+xzVOtuLK8THhkmurmOYj/Xw1Y0t
      kitraGrTfzZy5cka6H4Vu4ObNMHhJi1AAuTpKb64c5f1XJaQ203E60MCBgYGzoQ6nSAI7R5Q
      EAQuj4xzO7lKsViiUiwhiiIun7eZl1c1HCcsjTRNk/JOCgmIT47j2hvJDcOgXq6wubCEPxLG
      5fOi1uskLHZeuXL1ed3mM8epyAIZiop/KM7awzkS42Md5X0tOcCVli+5AAAR20lEQVRiJsfa
      /DLxJxzmWo3+JCKzgfExTJeLXSBtNJXTbt65zbVojIvjncUqT5t2e1EIBYNc1DX+aeUzAolY
      26a0kMkiu05ehCQIAsGBBDZRwmKzYbT8iAUBh8eNw+Nma2EJ2W5Dz5V4/Y2zta566fsAa+vr
      fLm2gNpoYNknj9GCqiisL6+jmiKi1YrvGfHGnwR6o8GgCYlAgP5E4qXXHD8Jtna2+btPPkKU
      ZerVKp6BBL6+J3uGW/dmGRwd6ar00MLOwjIXI3FeuXq8ns9BmKZJMpUkFo298OB56W8yGAwg
      p2w9q5HWF9dwD4282Is6AEmW2QLWclkSu7u8/+qrL/V6ngSJeB+UauhRO7LXi1Iqk1U3CA6d
      fA3QIuAdBbvFitfVO0B6obXhF4+9+I4NTkEAuJwuLob6WCoVsB/oYWrlCtoRMhcvGhabja3d
      3VO/iXYQ77/3HhtCc+MQYH1+sekFJorsLq+CIOCLRbH2cG93hYPkdzNEB3uT2GSvG55iI6o1
      hTQMA8MwXvjo+tI3wgRBYHxklBDWDnYhQDmfx37KyhvVvbn/WcLE8AiNzGPRqNjgAKmHc6Tn
      F/HYbUSDfjJLKz2Pt9psFEulrjKNLVicdvL5k5tlHIQoii9lavnSA6CFa1MzlJOdhhzh/gSN
      XAagK9X2ZSDmcJzahW8viKKIfd++iGy3MXPtMpMXp4kNDTQrv3psainlCoX5JSIBP7tr6yT3
      yHEHIQgi7h5rBPUJtYZeJE5NAEiSRNzZaYUjCAKRSJDc4jzJ+/dQ9pxITNMkv75GduERjSd0
      ije79OAnDS6jWOTG1GEZ89OO1t7KUbBYpK49vFKpEu1PEBlIMDQ9STQRZ/Z3n7ad31uw2mRW
      dlM0ujT2er3e1uqHPS2hLp97GSPr6ZlgA5cmpvj1g1u4IqF2o/SFg/jCQfLpXba3tiltG7id
      dsYnhylm85Se0OihVV7YCoSWF9ZxvbpZLPHhxOQzE3J6kRAEgeFAmNVGDUsPQprd4SA1t4ih
      67giYXx9sb3AMZCsj5uJzekgEI+AYbRVpmvlCqVMFrVeZ35xgUszFzrSpZ4D1qaCIHSXi9S0
      F258fqoCwGazMeD0kTUMjL0G2mqw7oCfmXCIzflFBqebgqreoJ/k7BICYDtit3k/xC4qBsex
      CDVF4dVIhHDwZNyZ0whN1xEsve8zGI8S6ouxev8hXlkmO7+E1mhgWi2kqlWiA/043E3lOtlm
      R6nXKewkURsqdreTcH8cDBNZajbgVCpFqVRieHi43agNw2BlZYWxse5FNi+68cMpCwCAS1PT
      /ObWV1giASRJavck+3uUFixWKxMzoxR2s+Q3MggON06//0jbzv3nOMlcXlMUQoUik9fOJkUC
      IF8osFLJ4Qj13pnPbO2gVJrkxVBfrC3Vsru5zfraBg6XC4fbRb1SRbRIWGX5UOra0HWUenMa
      FY/HiUQiHZ3LxuYm36wv4fX5CH9LOsuzwqkLAEEQcFtllAONtNVojYM1p7JMOBEn1GdS2M2S
      Wl/FN9K9h3kaqNUqb77yyjM738vA7MrSkY0fmgJc3Wyawv19uP0+rHYbDUVhY34Rh8eNy+cl
      vbZBZN9+giCKNLTHKmz7O5h6vc5Ht28ycPUCW8mdUxMAp2YRvB9XJ2eo77nJtNCej/YwfxAE
      AX8kBNqzzTgY6ouflz5LmKZJWXtynvx+2JwOdpbX2N1OMnL1Ev5YlFIuh3GgEF0QhK6LYFVV
      +afff0RodBBMk3y9+q2u51ni1I0A0FwLvH/xKnfmHpIxGrjDzbn3XnXwkcd6Az7SC/NYnU78
      z0B9QLLJ7frcs4hMNovhPP7ae00bdU1jdXYOaHoL1MuVdpmlUqt1THGq6QyvTz+WcCxXytx6
      OMturYJvfAjJaqG0m6Hf8nyLY54EpzIAoBkEb1y5RqlU4t7SAjWXTKPRwNZjt7KF+Mgg8RFY
      uPcIQ9ePXA+cBKKi4H/G8n0vEvV6neTqOrJdxrKnoYppYgLeUADHXvIgNjLI9vIqTo8bqyzj
      9Hr26n23GbowhWSxYJomO8ur6JqGPxalkm9urtWKJSz1Bq8PT+DeR4dYWl9HC3sJSvumX5rB
      0PgQpwWnNgBa8Hg8vHX1OrcePuDm/CLeE2jhA4xMj7E4t4p/qLvWZTd69EGYpkmf5+ylPffD
      6/EQH+jD6fehKg1ESWzqDYkihd0MOztpSvkC5Vwe0zBw+30Yuo7T58XmcDKwz8JIEAT80TC1
      Sg1PMIDL56WeK/BKbJB4F3mUUr2G6O58frIgPhNDjGeFUx8A0HzwV6dm2C7nKZbL7fz9QaiN
      BrmdFEqtjjvgR7QdPVocFwSGrpPwnNwv6zTC6/USFu1Uae4A74c/EsYfCbM2O8eFN5oL/eYI
      ARuLy8THDncelWIJ595eiJotcL1viHgPMWKv3UFm37syTRO/fHqmP3BKF8HdIIoiFsRDqdAW
      lFqN7YVlAtEIg1PjbM4vfuvKMcplhgZOr5DWSTEzOk55N9vz7/u7gKb3s0AoHmXtwaP27m0L
      VllGU1XKO2nembjQs/EDuOwO9H3+v/Vyhf5I788bhsHc/Nyh3yuKcug6nhXOTAAIgoBVkvCF
      QxQzh19mbifF0IUpZLsNQRDonxijXi53OVNvBeX90BsNrkSiz13N4EXA6XAQlV2dLf24Yzxu
      YkP9ZLd2On5fzhVw+31IDjvVWu9sjqppLGWSHX7FerlKrEcAtNzcD3q/QXM9+Lz4V2diCgTN
      B6QbBm5/kM3FZbSGSqVYwmK1UKtUqVeq9O3TthcEgVJym3qxgL9/4NBi+Kipj2maaNkcw0co
      ip01XBqf5KPZ2zgjnbvZme1kT2M8p8dNtVjiwadf4ouEEUUBX6ypwGH3unm0vEQk3N1Qe2Nz
      E8HfOX0Myr2JhK1O6UUzQs9MAFSqVTSpOf2RZZlKqUJicoJSLk8gkUBrNNheXm0HQSAaJhAN
      o6kac3OrBIeamYdevb9pmlQ2NnGaBh6PhxtXD8sPnmXYbDbcovWQN7FSrTF+9VLXY2rlCqVS
      laFrV5AsFpKLS8T2GJ+CIGBaezcfv89HYy3dHgGUao3hYG+HypeFMxMAAqCZRpvE5t5TMvPs
      mbpZZRlRFFl9uIAv5G/bAEkWCYumUNndxR2JdO359UKBKAJ/9M47Z6IA/mnRWj+diPlqGGyt
      bRKfeFwL7fB6qZbKOD3uJp9K6z0vdzmdmNrj+X+jUCIx+vw8AZ4WZ2YNoGkaksVKPr2Lze3G
      Gz68wLU5nSQmxzFFibVHC9TKFQRBYOLKDI1a9dCLN00TuVjkjy5d5oM33/xON36AkNNzaLqj
      6zrlvXx+tVxuil7pOgt3Z4mMdGaBbC4n1WKJUmoXOVvm1UtX6AVZlvEKFtRGg2J6l6jd9czM
      EJ8lzswIkM/ncbidFDI5bO6jF6Zuvx8QUGo1HG4Xal2hvLOFOxLFum9RqxQK/OzSZTwnZJKe
      dXjdblZz2x3F7ZLFQjaVweFxs722hWy3ozUaREZHkCyWxxwsXSezto5erfEnH/70RFyed6+/
      xsraKuGJwUOU6NOCMzMC1NUGktWKqign2sBKrqziDQYwdJ2d1Q1igwMdKTkAodE4UrTru4ZA
      IIBeP2wZqigKa/PLREaGCQ70Ex0bxeZwdKyXGnUFu02mXK4gnrAeWhAERodHTm3jhzM0AmQq
      JQS7F1XV2tv3B7FfBCs2Mszm8jqYJoqqIdhceA6U7DVUFVVVzzTZ7UkgyzJBi51StYbFam0X
      uiSOMNBuweZ0oAVDDFntp96G9klwJgJA13WKqkJxcbmrjWe3zI4n4Mft97E2t4gzMYjVbu8Y
      OUzDYDwU/t40/hZevXCZv/3NryjqDSySiN6DXGiaJoZusLu6isPrxRMOYXM6SDg8z8Xl/WXh
      TAQA7NUBCEJb4LUX9gdDcnUDyRfsmPe3IBeKvP/228/8Ok87JEnitQsXuZlNYt9b9KuqiiRJ
      7dGzRXHOrW8wPDXG0v1HuIMBgg2D61e6O82fVZyJUN7N7GJxOmgoh3ntrQZ/sFdq1OvUinnU
      Qu7QukFXFK4PvnirntOCvlgcqdpZuLLf5K5lNuHweVm894jwyAhKNs/1ybMnCHAczsQIIFtl
      Svn8kdJ8BxUFirtZhmcmkSxWtlc3qMlOHH4/pq4zKErfCY7P00KSJCbDMeaVMta9Oodulqfu
      YBBPKIRSrnA1MfidoIUcxJkYATweD5IkUa9UUffy1K2f1v81Tev4d61SweZwYLFaGJwYwW8T
      qGQyxFSNt6/0zl9/X5CIRmkUm1wpwzDasiWtn0aj0azwqla54A0ycordNb8NzkQA5PI53H4f
      5j7juP3DdeunYxp0YETwhQLUtre5fkDl+fuKYrmEZY8eLUkSFosFi8WCJEltqXUll+eKL8J4
      j5qK7wLOxBRoazeN3eVC2nMa349e3B7RNCll83j2PMdUpcHPbtw41TnpF4l4NEb99i2sDgfV
      QgFB1fDJNiSxqcQRdjgZm76M6zvEh+qGUx8ApmmSq1YQHRKi5eSU2FB/PxFTglwV3TTp8/oY
      +Q73ZE8KURT5r3/6M2YX5hmeufK92hDcj1MfAJlMhobdgqzrT0Jnx+7zkE9n+fCVN86UkvOL
      hCiKXDqDUo/PEqd6DWCaJg+XF3F6PWwsLBMdOpy6PIoWoTntrG9sPM9LPMcZx6kOAFVVSSnN
      qiPJan3iHUixWqc/kXgel3aO7whO9RRI0zTse3nqg94B+9EaBVpcoGqhiFBTeG108sxJmZ/j
      xeJUB4DD4UAWRDRVQz9GOju7uY1Pg3gkSqxvmHD49FUfneP04VQHQLVapYFJcSfZdovsBask
      cePy1fM05zmeCKd6DbCd3MEVDqDUati65KNNwyC/sk45m0evK2dWvvAcLw+negQwDZOFm7eo
      Kwp9E4d3cE3TZDreT3+8D6fTeabsS89xOnCqR4BkdhdZ0akUS13TnYIo8s3sA768c/u88Z/j
      qXBqW41pmlSqVWwOOwN9Ez0/5/d6uTp9+tQGznE2cGpHAF3XMeoNbE4Hsix3NXCrFUu8efU6
      kUh3caZznOM4nNoRoFAo8PnnnyPKVvpnJqlWqgztczAxTRO1XPnecljO8WxwagPA5XIhAL5o
      mMTEKMq+ajDDMJBSOT64eO0883OOb4VTOwV68OghFq+LyFA/5XwBzz5fgFJql3deeQ3fGTau
      OMfpwKkMANM0SSdTjE5NMnRhGq2hdjA63eEgXz24R3p394iznOMcx+NUBoAgCIyPj5He2GrK
      9olih7qzZLGgBNzMrq++xKs8x3cBpzIATNPk3//7/490MkW1WOpuiFEoMRbrewlXd47vEk7l
      Itg0TarVKrGRQZR6neABSnOtUOSN/hHCwdPhNXuOF4+W+EGrjvlpcSpHAEEQCEUi5FO7IErY
      nI6Ov4u1xnnj/55DEAR0Xf/W1X6nMgCgye40dJ1auUxjn6Crls3zxsT3u4zvHM1yTqfT+a1l
      Gk9tAExNTlLJF/D6fWS3toHm1ChkdRAMBnset1/h7BznOA6nMgAEQUDTNNxOF3d/+wnFTJZK
      oYCqKBQb9Z7HmaaJoiiUSiWKxeJ5EJzjWJzKAAC4fPkyVqsFi01GME0alSqbDx4xd+8+5R7u
      j9A0WbPb7Xi93nM1iHMci1MbANFolFgsTiVfQCmV2br3EEkUcUSC1OrdR4GWopksy+eN/xwn
      wqkNAFEU+elPfoLNKpPa3CIYj4HS1P58dL4Bdo5nhFMbAAADAwP84P33UWsKtz7+lM31dZRq
      DcXn5LM7t56be3g3tERjz/HdglCv183TzKg0DIOl5WX+j//r/wSLhGi1EBkcwOn1IlbrXBmf
      3JsuxZ77tbQ2Xs7x3cGpD4AWqtUqX371FZ9/8QVut4vXX3uNG2/ceNmXdY4zjjMTAC2Ypsna
      2ho2m414PP6yL+ccZxxnLgDOcY5niVO9CD7HOZ43zgPgHN9rnAfAOb7XOA+Ac3yvcR4A5/he
      4zwAzvG9xnkAnON7je9FABx0kT/HOVr4XgTAty2bO8d3F9/JlmGaJqqqnleEneNYfKeojfvN
      8qxW60u+mnOcBXynRgBBEA5Vgp3P/89xFP5/ZJasYsvVJbwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of deaths by country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Population vs deaths 2015' width='192'>
      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
      +f8BKXo4tTCNIx4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population vs deaths 2015 (2)' width='192'>
      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
      zalRGfJxgP8fnAdA4yYLhuoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Presentation' width='192'>
      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
      Ut/EYjyOKAhEIhHyhQIrBkj7XE8HagMYhoG2Vq/nzsV/v/rwfmBzOfF1txFujCFIEq6gH1tr
      jEvzk0zfoR9fHh0mdqwHI+glUy1vLNLN6psgCETbW3n/0ueMT0zwP/35X9Hb2r6n56iPRlEz
      eUYvX6eYvXudnszyCkGUjcSv/c6Ty+lkYHCAxXSSzmf6ti1+qC2sQiKJ03kwTUdM0+RXv/41
      llgQbyiEYeg7SgBD12mNxAiFah68z69e2d5z7c7UFIeT+ZVaQPInNwf5xW/fwzAMrKmd02ru
      hkfiBbpT7VnfVXdLm35Y91zX249GGtA2mVeKz0N/aonl5dtN94IuN4mpGRau3CQkKgz//mPS
      SwkMw9jCvKIo0vnCWT66eol0Ok1PT8+eaYqPT2Oo2kaBsN1QzOWx2e99cGc3yLLMN1//Bq+d
      PU98Ymbb94auk5xZ4NXTZw4sZSKTzbBUyBJsiAEmhr6zwS2IIqpZ8+osr64gRwN4w7fd2YIg
      UBdwo5VLmy4SmExl8Pp8dHmcLEgK/3xzkFIwvG86H0kk+E7s5FZ8mNBUFV3VKI5M0RYME60L
      M7q8gOiwYRoG+YFxKobO1MI8LouCz+vFVDWOtbRz+ngfHa1t9HZ3MzYwhGYRsTrstcLBxRKy
      Uiv4JSkWpvuHOHb06J7or0kSAW93yz3tG4tVIWR3URe8/87tpmny4ScfozjtyA47kixhmibZ
      1SQeVeDVU2fuqybrXu6by+f55OplNEXC5nSwODGN0+PZURIlpmZ57kgfy8vLXJ0awxXe/sy6
      ppHMVZBttU1BEARUm52p+BJNbheJchXJ40W6j0LEjyVu/iBH7vZy3dLEFIXxGb7xla/S29FJ
      pVKh2R0gv7CEsJzma1/6Mudau2iqixAKBFFVlYnZGT79/PONMbxeLy888ywLV2+hr53lTY1N
      ceu9DygXioiSxPDIyL5ciS1NzRQzd1d/NFUlPjJBcJdq2nuFIAh86/Vv8K0XXiVYFajGV9GX
      Uzzf3M3ZY30HljLRP9DP//k3/5nBoSEwIRlfpuVID8E7zkCYhkFyfJoXuo+xsLDA50O38DTu
      7CGSFQuCvr04ge72cl01wXP/hb8eaTLcnekQd7pK17Ebg+xl8VfLFRweD61O34YkCwWDBAMB
      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
    </thumbnail>
    <thumbnail height='192' name='Top 3 causes of death by region' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Top causes of death' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29aYwkW3bf94s9IjMiI/el9q2312+feW9mOCBlix7CMjUjW0MJkAXDgOBF
      gCHQsEYyDNjfBMOkKAP+IBmwZUsATRgmoGVIQzYgWSRnhrOInLd3v16ru/bKqsqs3DMjMiPC
      H7LWrqqupWvtih/Q6MzIe+69mRUnIu655/6vEARBQEjINUW86A6EhFwkoQOEXGvki+7Acbg3
      vUir0z1aYVFEEAQ830MSpWO1c6CN/PLrhe/7iOLxrinnZSNIIp4fIElHsxNEEUEUQODYbR2l
      j5IoIInCbhvPQ5SO97c6yEYRBQRB2Mdit92VcoDf/O1/xUcP549UVjR0BPl4P+ZhSHbkVOs7
      T4To8X4PKaKj6AqGqZ1Jf0xVwtLO7vRLGArqIRcsOOwOEHT5/NP75IcGabZdCpk4rY7L4sPH
      WDcnSUkCLU/EMjT8boeVSot0TKftyXSb61ipHIoIxeUikuCTTBdouW1StsX9P/mY2M1JTK+L
      oFnU10ukkjEqzS4qLpoZZ728TtzU6Aoaqbh1Wr9NSMgWhzhAj4idJei2mXk6g+vkiSgyyWyO
      cq2G2+0B0PA7OOgUF5cRJofwnQaekqW9XMT3uqiKyHqpzPLsMkPvvUNxfn6rDt/r0mvPs1D3
      qTY7VNbLDGRsKs9n6IkaTjqOKuuhA4ScCS93ANEgHq0gKiZjE+Pkchk0GWZmlhjL5cFt0/Ik
      dBkMTcHQjf4V20rh1ssYlkmnJ5CIRZBllZhlETEjiMbAVh2d2jpydghldQk7kSCRiKMEDtnB
      UVaWi8RjEZCv7qNHyOVGuErzAP/0Dz5mudw4UllBlhFE4VQHmYKunMjuMtgIiozP0Qe0oiIj
      yiKSLJ7JIFiVhD3P6Kf5WxiytGeQvZ/dlXIAz/OQjhkl6PV6yPLxBlsnsTnPti57/86zrVft
      35WKAv21v/M7u6JAkhV9uYEkIpn6K7V5WPREiuhE4wbSPmVOI9IRVSXMM4yWHN726UbSLoqo
      KpKPqVgvfJ9zmwh79OU91haXae/zWW15/+MhIWfNuV1aLNti5vFThPIi1apPOiqgWRrVlS4q
      HkanypMnRfImxGJJltZbKLpKTPMJtDR3b4ycV1dDrhHn5gBmLMHAWIBgqCRiAbLfQjV1KsVV
      CuOjBIrP5JhKTBeRJJX0wChI4LYbeKjn1c2Qa8b53QFMC8vcG8vPpYd2vN7PcNvm1mh214hf
      ihzyfC+JCJry0inx/QiCYMtG0FV4SfqApKvopoYoibvsAAxFIqK8/CnzRZsX0WUJQ9n93HqY
      zUnbehFDEdHkl6cUnFZbZ21jKCJJXcbY+Hts2oVRoFOyOc+2Lnv/zrOtaxUF+o3f/pc8Xakh
      7LgiC4qMoB78NU50tYxoCIKAHosQi+l7ruIJY+8j2UmvlsftnyIKjCTUXTZfyYTjo5Oy68xZ
      XV7ARSIWjWFZe2dfW60WkcjLZ2X9bgcXFX3jpOk6DpKmHRhuqtfrSJJ0aL0AD2dW+GR2bVdY
      UtAUxEMmqI6LaPfDq0bSJN2J7gll5qy9CWLnFTJUJAHbDGfGT4tdf9m26zMykuHnP/uUVCJB
      N6LRXa9gGirlZgsjUcCkiGTY4NZxOi6ff/mYsYkRrHiKWrFIwtZpyXEicsD0/Y8xrDy54QzV
      Ug1DVRF1iYiio5pJ6mtzNLsCSVPkTz8qMZjWWKh4WNTRrRQVF77x3t2L+m1CrgG7LsyC77Kw
      vMbY1C0UfIaGClvFJsZH6Pls3XpV3SSTSjA+NUk6kaDZqOI4bn+QKqoM5WziuQHilr2jNZnh
      0QmKKyvEYzq+76PpGggKUTkg0E1Gh/LoZhxV1xB6Dq1Wi1ardV6/R8g1Y9cdYHhscvtNKgbA
      G2+9tXXobmxvBXfj/dBNvuDjOB6atv048vZb724XHNh84TEyOoEIjE/d2vo4PzC8XXbD8SZ3
      dCck5CwIo0CnZHOebV32/p1nW9cqCvT9H3xGsdbpL9XbRJYQXrLy52UZhoIkwcaAWjFUrKiK
      tJFBGtO3Iz3KPpmLO1ElAVuXEAhOnM2Y0CIktHBwe97scgDXcVC1s1kCdxDFYpFcLnekst//
      weenGgUSNKU/0UU/4jOQsdA2TvSdkZ7DIjxRVWQkoW3ZnpTQAc6fXQ5QLpdJxCI8nVshX8jh
      tJpEozql4hqGHcf3A0xNoNHu0WzWMS0LQdJolpewrShV30QVXXrNGl67B9kMVMtEY0l6XodY
      LImASKNZo9tuICo6MwvL9JwWWsRkbb1Oo1wkkR/G1kUaLowNDxzU95CQV2bXJWu9VOTpzAJe
      q8JKqcTayiqltSI///QLFopl8rks9ZaDrfb47P4DymslZheL1Op1GtV1qut10hmbLx/cp+kE
      BL0O1brD0tw86YERZp88QIlGcF0X1bCQZZnJsSG++OTnPH8+jyeI2LaF67pUq1UqlWoYBQo5
      U3bdAe68+e6+hcYnbm+9Hhzs5+589y9sR23q9TqWZTG28f7f+/Zf3DYeGt144ZPOD2NIAmOj
      o+yk8J1fO1nvQ0JekSsVBbo3vUjL9XanDohC/98BvHQQLIpbtqIsoakSgiDgex66uj2ukARe
      urxOEgU0WSDw/WNHqTYjW7qkYMhHG8tc9sjMebZ1raJAD2eKLJcbiDtOzleJAr3MRtJUEEUs
      2yCqKyQiypYT2Lq0lVUI0PWh4x6vrYlYf/7kpH/AkNPhSv3y3//B53z0cH7XUsizyAWC7aWQ
      heEk2USEyVRkKxQ6HFdJRV+tzU0HCLlYTu4Abokff77GYFpDUyTi6RwrxVXSCZP1uoOCi6xF
      eDa3wGg+iRJNUikVKWRT3Hs0w+jIAE6zQTydZXVtnVza3hLdyr15C6/jowtdHA8kJdQFCjkb
      XukOkDQ1yvU6zbV15NklRvIJHi95pA2JSn2dltcgn05QWa9QL1ZJ2hEWltbIJG3qtRpOs8pC
      cZ2cHeHRbJOE1hfdevz4MZYeQ5MEDFXEE7uhA4ScCSd3ADnG+ESCTqtOK25jJdKUy+vcLqQR
      AEWCvJWgUa9gJxKkIza6IhH0HEp1l1zCorQKI5N5VlbXuZlJoW6Ibr01NUWl4ZJJxOg0qnih
      MFbIGXH1okCdbj+FYZNXiAK9zEZSZBAEVK0vsqor0lYzmiyiSHvbPE6u0uas7+sYmTnPtq5V
      FEgQxe2TXxLh+EtVD63ftHQiioB5CgPrMLXh8nOlHOA3/88/4JPnKwCIUe3U5c8FTeHdDyf4
      YDjGVMZ45fp+efDW4YVCLpRXc4DGEj9+UmU4axKRI9TaLQbyKWrVJpIisTgzzfjtNymtrpKM
      GTS7Ip1GjZGRwVAePeRS8Mp3gNGxcTrr01SW6lSrq7R7HVKqihTNEkumefbpz2iIBs1OivXy
      OoO5dCiPHnJpeDUHMJK0ni0yMXkDJ91htWSRKWRQAEnTMOU8uVyWxYVlEokYiXiCuGWgKWIo
      jx5yKbhSUaB/9oPPKFb7maGCKr80+rPJcaJAgiSRH0yQtxTS5vHV6F5s6yizva9jZOY827pW
      UaDvfPPua7ckMuRiuVJ/rb/2d36HTxfXdx07ajRoc/WXIInEB5N7pMsP2lQtZx18J1Akgam0
      vu9KsLhqhIJVV4BXWsNXWlniwZf3KK9Xcby9n9frDcCj1XL2fNYulSiFC11CLphXugO4nsDt
      27e4929+hpQbYWVpCVt2actx2sVnmLlRhofirM3WkGMmzfV5ukqCm4MJZp7Mow5mWSotIyoG
      j57PcWNigpmlNfImoFksLqwwOppB1EN59JCz4ZUcwDQUHjx8ysitN1ivrrNSqnDr/Tt0BZWu
      pWDZKVx6DE1O0GpVSERH6Qoa0YiKFouRtuOgygSiwi1Zw7ZjyJpBTBcRRBkjYpKMm/hCKI8e
      cjZcqSjQf/+P/1+mS7s3ydt8rj+ILRlsVQZFRpBEzLS1R7rc0mRkcbd0NkAicvA1QhEFBuMq
      8kY0aqedpejcjGcP/U6XfZB+2dt61f5dKQcIhbFObvO6tnWtwqB/93d/wJPF0tb7w6TRYX/5
      8fR4lrtDNrIokLOUPRunvWhTiNgMRG1CXj/O1AH8bocv7j9iYHScdNzaUo84iEqlQjwe33r/
      ohz7w7lVPn66tPX+pMshByIyliWiyiKCpOIJL68jzOp8fTlTBxAVHdu2ETotSstNVpt1/MUi
      TmURyU4TOAqm0aMr6sTNCE6nQ6W0giepLM/OM3JjisWZJ+jJIYZyybPsasg15cy3SdV1DUUK
      mJldRFX7+3VZ8TS5dJyhoSEEQUDCY3ZxGV3flCMUiEVlmk5APJ6gUa+ddTdDrilnPgbI5fMA
      vJ/J7/t5KnX7hSMb5ca2xbNC/YSQsyKMAp2SzXm2ddn7d55tXaso0O/98b2tbNCDBLEERUaO
      aMRMra/YJgkoG06jK+IuhTdDEbH13Q4V6vVcL3Y7QOAzOzPH4OgoW2u+/S6OJ6Edst/tThzH
      Qdsls+7hOKDtIzF+2CZ6O/n+H9/bWhJ5UARIiOoYKYvBvI0mi7uS3BKGvCvhLRGRGU3sloMP
      HeB6scsBluZnSeUKLC0uIePSQ0bym8wudxgfG6BUrhC3VNSIRbO0jiMp3Bgb5NnjRxixFOXy
      OtmUxdzyOu/eneThw6e03S6FwQRzT0qMTo1QqdWxDQnNStGurtBsdGj5AoWMTdf1qNQapJIx
      qg0HK6JSKITy6CFnx64Lr65rzM7M0HFcPCQEIJ9LMTIxxMLzZZx6leLqGksrq7idNg8fTYPX
      4csH93k0vUIublGqVRFFAbdRoeV5CIGEDwyNjTLz4D4PHk3TCUTiVoRqtQaCzFAiRtnxUMUA
      nDqrDQ8rouG6biiPHnKm7LoDJDIFEpnCnkKFFBRSe+PwUxs7mO6UQ0+xbf/+W7t3fikUfnHX
      +9t33956vVl7ujB0tJ6HhJwCV2oQ/Lf/yr9Ny+n13xwgiCVIIqIib0mdiwTIG4NgWRTYvb2Y
      gP6K2xqFXG2ulAMEvk8Q+AiCCEHAi8pYgiwhiAKK0j/5VUmEwEfdR8VNENhz8pvK+e6PFnLx
      XCkH+M3f/ld8/KyIqKkgiUimvutz0Y4iawqF4SSWJpOztAM3uFMkgbv53Tk+76eHw7yfa8aZ
      OsCzJw8p1R3uTo1QdyHo1Ikmc1RWHoM6SkTv4rttJMMGt04klqDTDfDdKoFv0GjVQ2GskDPl
      zO8AnuezUFwDoOc0WZh7RnL8BooPtVoNURCQehV6lTlqTYf59Q7v3cnx+U/uI0TVUBjrkrBf
      WvnLOE7Z87bZaXemDjAwPMbgkIfjurS7EDgGg2M3qJRWSOWyEOQQBBGnWaWlTtFtNXjzxigR
      TeGdD99hMRTGujT4vs9xs2Z6vd6x2zkvm027K5UL9E//4GOK1VZfIVoU9iyGETQVURaxYgaq
      LGKqMrIYoCl7/VwSIGPunkkuRGwMWXnt819OYnOSPKyrwJVygDAZ7uQ2r9rW6+oAVyoK9J/8
      vX/CZ2tVkEQG7wzyjRtpPhw5nbHBuJUK84CuIRfiAOVSCbfXRZFFej0J6BEEAVLggJZGDDqs
      Li+gWin8dhUrVSCXTlxEV0Necy7EAZ4/fYRgxMink3TdGoJkociwsLgMapNcOoGdzOC6Lpqu
      47juRXQz5ADa9+7h146/Sk8ZHkYdulypLhfiADfvvElv45nSbXiIugRKjLFJnSAAWZZYXV7A
      sDN0m+uoyunvAxxyclb+h9+g9Sd/cmy7zH/566T/+l8/gx6dnAtxAHOnMoRlbawfUAF1x+HN
      pZKprWO3hjMosQhIIulckpGYRVx9+VZGR41f61LoZNeRSzEI3r145mD+1l/+pXOJAoVcH67U
      mfEbv/0vt6QR9xPFEqI6sqEylI8BIIsi5kZW6E6Jw7GktiVnGEqYX29OxQFmpx8jGjZJ2+wL
      Wbl16lhsSus7roOmvvwq79YrlFywDRVJkjceiXbzcGZla3+A/ZZEinYUJarRkPtTG4okkIz0
      68l5Ox6vIt6+mv4h149TcQDFMHHdNrW6z8PP/pRY3Ga1o2IrHrMrVdKmSNyO82ShTCEmM3Tz
      bVrlJUqVOlHbZu7hPXLZATpmEtHSWFqYIxLPkorqrKwXsUJhrEvBZsrBSedOfd8/cdrCWXEq
      DtCslkGz0ADdjCNLEqrkIykGE2MxNFw8RCbGhtGDNrVaHcuMM2TaIHg4+WGScYuapAMBmUwa
      1/N5Pr/EwGCKar0GoQNcOJtjqZMmoImieOnGY6fSm6nbd7de53N9YavRgwrvQyrZlxF/UTpr
      fLz//95FmiEhp8PlcsdD+N//278aRoFCTpUrdWb85u/8fzwtNxB1FUFXkU2dXMZC2VjyuHOT
      i03ihrTnlm0oIoO2GkaAQvY6QK1WIxbV6PgKuiLiOO6+EZkXabfbGMb2pNRR7fbDdRzUfeYG
      Hs6u8MniOpKpI0R1VDvCCNsRnf12etwZ/dnEVEWixssn0EKuBy84QMD0g3vcvDnG86qE4NTx
      2zWS+QFatRqCEsEyBNbKVSJWHNnvIEkGHSEgKsPs83mm7txg4dkTOr6AjoAjKcR1EU/SaVdW
      icRSOD0PFRfJiKOLXUp1F6nXRDQs2tV1lIhNVA1ouDA2HApjhZwduxygWV6ip0RYmF+iI8YQ
      goB8toDfWOGjz6YZu3ELQ7OJxxNAwGcf/ZxMdpzJD97HFrp88ic/Z2DqBrVaDT0Ww211eLgw
      R0LpYCRzLM9Ok81PUXU6iM1lMuPvYHgVvpxd5ytv30LoVqm1PNJRqFar1B1opfobZuzcKCMk
      5LTY5QDR5ABfTe53xc3zlybf2nO08J1f2/FO5Vu/+ucBePOd97eOTt3dUeSdd/epe5TJO1s1
      kh/efh0SctZcqUHw//bf/JUwChRyqlypM+P7P/yClXr7wPXAlm2ga/3jhiwhiQKGIiBuRIZ2
      rgPeXP8bcnSu9Uzw2vIikhHDts1Dpcx3yqN7fV10DrpuHxTx2Y/f+9HnfDJXOlAUqzCcJBHr
      R3c2I0I5azsKtFMMK6FFQgc4Jtd3Jrhbo9pVMJ1VvlhY2CVlnohbNDs9orpMt9MikRumurqI
      GTOo1qE8P0tqaphO3cE2JAJBJGLGQNRplOapdXwsHWqORCFpUHcFgk4VPRKj4fSwVPAkg3wm
      TIUIOX2O5gCSSqP0HCImQ4kYq45HSupLma+1TDIRBcd1qFerJHLDrJfXkJUUqyUXWRRxPbAi
      Gg/vfYQ9eBtvfpF3vvoBC89qiHoM120x/XCBekbHFU3aqwuksnmKVYeY2MTIjIcOEHImHM0B
      RJ133j2ClPnoGABvvfcBAPkXAkqFwq+C32VxJYYkwJ0339n6bHxXuOh9QkLOg/N/IBMVBvKZ
      E5n+7b/6y7Rcry8KLe0eiQiyhKopyBszwYoo9LdgFQKkjUGwIEBU7Y9GQiXoELhiUSBBlsAP
      SNoGCetoJ/BOQSdT0VDE10/cKeTkXCkH+K3f/wmfPF/hW98c51tfHT7c4AVC+fOQF7lQB/jp
      T3/K6ECSuqMhKyKS4BE3I3RFHclr4wQqst9CiSaxzTB5LeT0uVAHSFkqZVdEbFRZq5WJDI1B
      tcLyeoukHUWVVRqdBvVilffefuMiuxrymnKhDjBy4w163R5iASJrcZKZLF67RiSRJxbVCPyA
      elUhHbEvspshG1zrmeCzQFN1NpcMjEbN/ovI7hleXd+OpX77Kzf58MYQk8MJxq3YkdrwfX8r
      FSIUv3o1ru9M8CXh21+9GSbDhZwqV+rM2JJH34GStIgNJilYGrmN0OjO/B+AvKVwO22HSyBD
      9nDu6lAP73/O2npfWXi5uMxacYFytUGpVDrvroSEnP8dQNc1Gmvz/OhH04xO3UHr1tBNB9d1
      eT63iEGLSs/ACBy0qE6z2SGeynFjIrx6h5w+5+4Avh8Qjae5NSUST8UxjSyWZVGv10GARqVM
      FJWUbbK5FfaV2cMp5Mpx7g4wPnULgGwmu+u4tSGZbpkHb3m0JY++AzkWIZK2SEUUEkb/2X+n
      EG4QBKQiCpayO7oUEgJXbBAcyqOHnDZX6sz4rX/yQ56W+/LoSCITN/K8MRRj0N6O+ty0s1hq
      eLUPORqHO4BbZ67iYakQj8fB7+J4Epoi0mq1kGSJoOehRiJ7QkqtSgU5HkcFGvU6pmXhdeos
      leok0zkimkSr1dpH8sSj1eoRiezO+Hw4v8any315dCQRN66RiO8WueoF/vF/hZBryxEcoMF8
      sUPB8nA6Hs3yE9aDAhHWicbzrC5OE88OY4grVNoeWuAgGjHmHn1GJjPJcDzOwpOHON0eM9PP
      yKbyxIZTFJeL9HwPSxf48R/9AdnRKeh2SaYsRFWivdbmy+lpxscL2OlQHv0ycD1TISSVyWGL
      laVFGtV57ESaSAey6SG6bo9MOkN3R/F4OofgtajnBhA8EYn+F9c0jfzwOAPJJGY2SnGxSX9G
      PSA3MIJlWSQjGtVO/xEnQGDyxgRxSw/l0S8J1zMVwkiRNSAbv3lAgdzWq+2snRTJ7Ha+/uTN
      O7zI2Oh2Lk++sF02trkp3o4g0aZE1q2hNPJmrpAkMpFJUDBN4ur2GEAWwp1fQo7O5XLHQ/je
      d3/x2FGgkJCXcaUcYDMKJET7d4FkIU5MlxmI6bxZiFCI2AxEw9TpkKNzZAeo1xtYVj9leafw
      1bFx61R6EeIRCfBptVwiEZ1KpdKPMr2EzSiQaEcByEkBqYiKG3QZSgnhcseQY3NkB2g0GpRW
      FnA9gVKpQiwqUvcMLLGHbhr4osbS0/uks6MoSZu1Z08ZmZikVKlj6gK+aFBZfEo6m4HkTZz6
      GqLo0yw3aPY69KQIawvPKLYlUkaAqkZo+yK9+jK+keW9uzfO8ncIuaYc2QFUVUVV0/3kHM9H
      1iRswyaiSqwWF5CjOuncAHHLIjFUoLe2SKPdjw/F4mkEAdxGElEAVREQ3Q6ilgD6UR9d19EI
      GE5YfZW5RpV2B0w7RcQOI0AhZ8ORHSCV2j4JU8nUrs+iprnxSLSdsXnn3Q/21rHTLtbfRi8V
      P2BlVzK1Z9O8kJDT5lQGwSceDxyT//XX/4MwChRyqlypKNDv/ewBK80OALmBBBPZKKa27RAT
      sfRFde1a8PrPBPtdHj95zujkFKp0stm+o9LpdND14yWt/f5Pv9zKBXrrgwm+JWbJx7YnwUIH
      OFte/5ngXo1oPMf9e/fIppM0axVkv0vLzBHt1lEEhcAyaFZb3JoaZ3V5AU9Sqa4WiadyVOsN
      4qZKzxcol2sMDBeQBQEZj+n5ZRRVI2NHaHsSXaeO02xhmCkSMYPp+efkEhmavoDSa7GwWmVs
      uEChEG6S9zrT+OEP8dbXj22nv/EG2tTUrmNevY7fbB6rnj3uODe3SCGbIJeK8tFyiZQOgtfm
      448+Y3LsBoahETN1FhcWmH70BZHMIIVUgcXpz5ld6/L2+28QFTzq1Sq9rEWpBUlNxEokUAlY
      nHvGcktkajhJLFGgNPeYxec+yfECXrtObPAmzZU5IrqM67q0Wi0g3CTvdWXt7/8D2p98cmy7
      7Pe+t8cB1v7B/0z5H/2jY9Wz2wHUFF/7ynak5oP3tzfGe2N8fI/xwODg1utC4d/ivY3XnWaV
      RLaLIkoMDmSJqOJmhg+FQoE3d9RRKOyOKAFkRkeB0WN9kZCQk3AmD2R61Ob2jdNPSfjed3+R
      Vs8DwLQMEtG9G2OHhByHyzUiOYyNsZeiyKQtFUncHoyFaRAhJ+FKOcDf++c/5pP5NRKZGH/j
      u2/tCoH+8uCtC+xZyFXl3BzALS3wRcnDXXrOmx++R6PRRfY7SIaN36lTb7sMFLLML62SsEzm
      5/orzWxdpCtopOIHq0WEhJyUc3yAFpHFHrIa4fHjJ6yurtJyerTqFcoL06hKwMcPl/C8LrVa
      jUQ6j+e2qNVqNOr18+tmyLXi3O4AcizJpN4jGBhAostapUU2lQACvJiJouso4iofP5zjl772
      Hk6rRk+ykXstPDl8vr8MnMVM8GnW5Z9AEOHcHEBUNKJbG9PpDEd2PNJs5BJl8kP8Sr6/8+T2
      LLG5VezbH9ziwzsjGBGNW4nMmc9Wh+zmLGaCT7Mu8QTLYa/UIPjbH94Kk+FCTpUr5QD/6f/0
      z7ZygcbfGeUbN/q5P1Npnb8wEW6hdF4M/sI6Qb54bDvxxvHSFM6Dc3eAR/e/QIrYTI4dvMvj
      /mJZIZcFWfcg6h3fULl8omXn7gBWIo3rOtz//BMCUaHT9cnGNVarDtFelzoeSjyD5XeoOwEq
      Lr4c5e7tqcMrDwk5JufuAE6rhhJNMjyWxHNarDVcNFViJG+haCYjKlTaHqYqkyHg3kc/Rc9M
      nHc3Q64J5+4AY5M7BLYsi/g+KfzGjqefr/+Zb2293imMVcgmGNpQqUjpu7dECgk5KldqEBwK
      Y4WcNlfKAf6zv/97fDK/RjRm8Df/w/cxNSnMAQp5JU6eCtEuce/ZMo8+/ZT2xqH6ISkLxeVl
      AMql0tZCl73VlrbqC7lc+L6P7/sn3rLKD4KtOs6krhPMKp/8DuC5tJwear3B8yf3mZ0rk4pI
      KIpMuS2Qi8kEgkLXF6Bdomdkydgac8+esFrtkEqYzE8/IJYbw2s1kc0oqijSXKvQi07Tbssk
      9H7YTIxmuHsj3CTvqiMgnNp+b/vOH59gUvnkDqCaDKc6CLFb+HIXeTSKqYIvSMQ8kXTC2upT
      payDamIaKp7bJhao2HYMYWwKzbAoSzKDA3k0ocdT1yeXidHtCiRtE7fdwCUc5F4GRPHVcicF
      AYQX6jhpMosgCHv6I5ygtldwAIt8Zkc+T/bgoqa1M5U5Tmqj7KYWaC6/LbH+xpsv6IPusL05
      mEJSFfSoRkqPYCjharCQV+NKDYK/9+9/M4wChZwqV8oBfuuf/zFVU2cgGSERUZhMmHx9YPBw
      w5CQAzjxM8TjB/colirbB9w6dZcDozubrL+gAdOo1w+12eTRQokvimWelGvMVg963XsAAAus
      SURBVOuUOp1j9zskZCcnvgM0GnUEeYWPf/LH3Hz7bYxejZmGwUg2wuryAk6gUF2ZIzc0RrVS
      x7Q0nJ7IYC7FT374A97/hV9i8dlDHF/G1j3+dKHJQAyKbQmptUIiO0TNBc0t4YXy6CFnxIkd
      YGT8BqYS0Gxk8cQIhUKE6lKbnhdgxpOYAYiuRb3Rj+pHrTgxBCzLJG4ZNFrd/uZ5ug5SD0Oo
      IkYTDCci1NYEVEUmaDYw7RRGKI8eckac2AFSqb6g1Tvvbifz3J7Yv8yLbEqnp6ztzfMKgzuE
      sAb6coh7pbhCQk6XKzUI/l/+i++EUaCQU+VKOcC/+OIZLUkkbar8wlAOQ1YuukvXis1F6FIQ
      nGgCy/cD/Ku+KL5WqxGLanR8BX1zIspzcNDY1Kk6TPrcdRzUAzbV8BwHNI39rvP/4ovnFGWB
      OzmT9wvJ0AHOma1F6CdeyC4gXu1F8QHTD+5x8+YYszUJJegidRuYusDj1R6TQznKlSq6KjFW
      SFJxoF6pgyQjeS00K4XYa/FsfpVCLkmnWSeWSLOytk46HqHnwfLzebK3x/HaHoFTR1B0jKhN
      JnnAVkoh587/2Ps1HrtfPbbdd7wP+XNn0J9X4VgO0Cwv0VMiLMwvUQ1iZGIqlWodrxMwNjrB
      3OwqQreNmE2C5/Dl/SeoikXD6dAtzzJ45wOMoIUoCriuS3FhlvVmF7HrsG4YJNUAQRSZmX5E
      t2swOZLDra2x2HBDB7hE/My/w8/83OEFX+BucPn2ejiWA0STA3w1+cKXGN3O0iy8sHneN762
      c7nXV/bUNzo6tudYekMXaIvBcKY35Oy4UoPgX/+z79GTRCKqhKmcz8Z8Ia83VyqdMuh5+B2X
      gmmgiGE4NOTVuVIO8Fu//xP+6//rX7PUql50V0JeE079EahSXGCp6TGYiNDpCsTtKNPPp0ll
      Bug06gyNDPPw3mcURm9QX18lmUpSWm9gagIeEjMzC4yOj7AUyqOHHJPZr3/APfl48wqn7gCL
      K6tU2x5qEMcCltplXNVGd9Z5tLyGmR4gYsWpLX7J09UedrWDrUuU2l0qdZd8Pk1jQx6957ao
      uT6eqIcOEHIotYECS+++fSybU3eAiRu3EYBOu4GHBNUaUzmbltNjMB1gaSKRXA7IgboAsowg
      6UTlgEQ6Qq/VIJHP0Qvl0S8dl10ePfAvgTz65gywtvF/MpEAIBKBdKK/3FGW+hGc4bF9FN82
      r/T7yaN/5SaNXi/cD+yCuOzy6C+uNz4KVyoM+u2v3gyT4UJOlSvlAP/5P/x/GH4jy3/0zgQT
      sX00FUOuHB+/8zcomsffKf7rQ7fZP9n+eOy5Zzx5cI/VUolWp7uncKlU2nOsXm8cWHmtVKIL
      lMqll5dvlyjtUMM6TGAr5PXBl1Q82Tj2P188nWv3nlpc10XwGjy4t0I8o3H/oy9475t/hsGM
      zcriHKWVeb58OMvUjQkezSwxnrMZv/UWtqnz8x//IaIdp1froRgG3U6bd1Ip5memWZ2foSUo
      1Eo1bt+9Q69eZKkhkLV1gsYyy90lFvCpu11kzyVhm8yutfh3fulrp/JFQ0L2Y48DDI9PYUUk
      ul6bbCGB1+rQa1ZwkjZDY5MIeASoxGybm7JGzjaorBXRjVEyhWHkiIE1kqBdX2e1oiDRjwzR
      c1lYLDJy9xYuEEtk8LUevXYFwx7ArLUo5DLUmh2UwEFUdMaM+NaC+XDDjJCzYI8DWBtCVIVC
      /4S7cXt76yFt47Nbd/rRnMLG8c2n8ZHxyR31GGQ38uYss293O777qS2WAMjvquuAVZQA3Cwk
      ydkWuhSuA3hd+FLxeKLtfdw+jHHpdHabuVKD4L/5q18Lo0CvGR9pPT4yeocXfIFvyKfjAFcq
      F+jv/u4f8aPF59TdUA8o5HQ4ugMEHo8fPqDxQnRoYfY567VtcSvHcQ6owKNeb+E47iEN+bRa
      +5/gD+fXKHVa9E6w9jPk1fE8D8/zTj57GwRbdWzXdbK+7F/XGc4E15cXSU/colNaZLpUJ2ZI
      uL7A+mqJgqzhij4z09M0Ox3Gpm7hrC8wW+6RNAIM06RWbxCLD1BensayTB7OrvLGWI6eIKNJ
      UGl2UFUd0zTw6jUWmh4FS6ba7BBP5Rgdyh/7y4WcLptqzCedvd1X0fmE8tDnrg4dTSe5/+gB
      VtQAwIwnEQJIJRIgQM91EATIZDIAeEjYpkI6HYdukyoSmqqQyaRxuj6T46NYcRMEsA2ZyvQ8
      oqwxWMiw4HoI1VWsRJ5YglPTlA95NU564m/Zn0IdL63rBHUf2QFEJcqbd++8tEwuv2O55K7s
      zRSprQv4/mt737prb70eHB1mcPTgfYRDQk6LKxUF+of/1XfDKFDIgYxSQQzmjmVzpRzgj54v
      EzVEvjZQOLxwyLVjKigzxbNj2bxSGHStuMjqeu3Ydu6BkaK+MJZ3wGd/OLPEv1laPnZ7ISEH
      8Up3gG4g0F5bwXfqNF3IxKI4PYdytc3N4VQojBVy6XklB6ivl2h1RdSIgYbLF1/MkR5IUa20
      YMAMhbFCLj2v5AA377y56/3gyDiVUhFFiYKRDoWxQi49pz4IjqdyxE9jpcI+/Mfv3EBTr1T2
      Rsgl50pFgSRRwFTDTNCL4rIvihcD/9hRnSt1Of3de0/5dC2MAl0Usiwjy/IrL2Tf+e806zoH
      efSTM/vsCaW1GsM3RhFQEfwujVqNbC7Fet1FE7oEShTBa1Ovt8kPFFiYXyKViNILhbFCzohz
      fQQy4nEqa/0F0LLkUS01WG/3iCjQVVVk16PbKkI0z6cfPySdjFKq1ZBCYayQM+LcHCA3MIym
      adQrJVxUopoEwir5bJL1hkvSNhEA34shKDq2IvKTjx/y9a/cIQiFsULOiHNzAG1jSyRrR4ho
      bKy/M2Rh1/ndL6dl8vy5X9mdAv2N4RzDVugMIafHlYoCDVlRBk3z8IIhIUfkSkWB/o/Pn9Lo
      HpxHFBJyXPbcAb784hPszBBit4kaTRCzNNbWm8SjMm3Ho9FysKMy7a4E3QauB8l0htJaiZQd
      pdp2WVucY2B4lK4v4rZrmKrKetdjOBNnvdFFcJtImsrCUpW33xjj2VyRQsamVG1jR2Rmlsvc
      vTnO7EKR0eFwJjjk7DjwEcj1oVdd5tkzl2TKpFHtIgoCog9FTyUiSfh+f2/Whx//lJ4So91L
      Y6oSqWwOp1Xn+WKJoUIaAp9IAJ88fkJEjqAEHVxBIp3I0a5WWZ55StOfIKFJrJWb2KbO4uws
      qXy4KCbkbNnjAMlkCg/I5fL95YpJB0VVEUQBWQhYXKlQyOxYpyhAPptmYXGVwkAekYBWvYKH
      zsREjEQsirQx2RHPxClVWqj0iNhJGtV1DDvN4NgE6VwOWYBOs4qLRjoeZXahiJjaVJcOB78X
      jef1E9X/4nsDfDgWP7b9V0biW4vqNyfAfu39Qb45mTx2Xe8O23vqIj4BwvEWTAnBSeeiL4A/
      fLbA14azx9ogu9fr7ZHRPgub82zrIvrn+/6eRegnxfO8U1vZ96p1XalB8C+O5MPd4S+InSd/
      EPR4cO8e1UZnx7EAx+1L3izOz7MpULIpl7OT/U7YlaU5ns0uHLtfm3X5PYdHDx7QaO+W3XEc
      Z5fY8sILfbtSYdD/7vs/4m/96gfhBhkXjkej3sZtlvm/f/SAmyMplEiC5dU1vv7V93CaJebn
      Ap4vrHFzrMD80y/pKAnevr3PhigbNOoNBN1iebkInkepXELTFQTZoNMooyoaj6Zn+bO/8u9i
      7HPWBl6XTtejvLrE82oTO51CDnrMzc1hxWIEosqdG2O06mUWF0VmZotMjBV23wGePrrPYnHt
      2D/HTg/zWus8nV85su3jR4/2HGuE8uiXHAFVlWm2OhQyKcx4AqfnE7ci+E6NakfGdVx0evQA
      UTEw1Jc/pqiqCghUy6vU2w6FoUFEtu8sgigzPjGBdFDunCCiyCKdTj9M7jRrlKot0qkEdiJN
      Lp3AbddodSXcjoMm9Oj6Af8/Sryqp3Gnm6UAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
